var ze=Object.defineProperty;var We=(R,B,w)=>B in R?ze(R,B,{enumerable:!0,configurable:!0,writable:!0,value:w}):R[B]=w;var V=(R,B,w)=>(We(R,typeof B!="symbol"?B+"":B,w),w);import{s as ke,n as me,o as Ue,b as je,r as Ze}from"./scheduler.e108d1fd.js";import{S as Je,i as Ke,g as U,h as j,j as Z,f as W,a as Ce,s as $,m as ne,y as qe,c as _,n as te,k as ee,x as F,A as Be,d as de,p as Qe,b as Ye,t as pe,B as Xe,r as $e,u as _e,v as ea,o as ce,w as aa}from"./index.a864fe6f.js";function Pe(R){return(R==null?void 0:R.length)!==void 0?R:Array.from(R)}function ia(R){let B;return{c(){B=U("canvas")},l(w){B=j(w,"CANVAS",{}),Z(B).forEach(W)},m(w,L){Ce(w,B,L),R[3](B)},p:me,i:me,o:me,d(w){w&&W(B),R[3](null)}}}const ae=25;function na(R,B,w){let{organism:L}=B,{size:h=100}=B;const e=ae/4;let o;Ue(()=>{w(0,o.width=h*window.devicePixelRatio,o),w(0,o.height=h*window.devicePixelRatio,o),w(0,o.style.width=h+"px",o),w(0,o.style.height=h+"px",o);const t=o.getContext("2d");t&&t.scale(window.devicePixelRatio,window.devicePixelRatio)});function l(t){je[t?"unshift":"push"](()=>{o=t,w(0,o)})}return R.$$set=t=>{"organism"in t&&w(1,L=t.organism),"size"in t&&w(2,h=t.size)},R.$$.update=()=>{if(R.$$.dirty&7&&o){const t=o.getContext("2d");if(L&&t){t.clearRect(0,0,h,h);const f=L.network.layers,s=(h-ae)/2-f.length*10,d=[];for(let r=0;r<f.length;r++){const a=f[r].nodes,i=(h+ae)/2-a.length*(ae/2);d[r]=[];for(let n=0;n<a.length;n++){d[r][n]=[s+r*ae,i+n*ae],t.beginPath(),t.arc(...d[r][n],e,0,2*Math.PI);const c=a[n].bias;t.fillStyle=`rgb(${255-255*c}, ${255*c}, 0)`,t.fill();const y=d[r-1]??[];for(let C=0;C<y.length;C++)t.beginPath(),t.moveTo(...y[C]),t.lineTo(...d[r][n]),t.strokeStyle=`rgba(0, 0, 0, ${(a[n].weights[C]+1)/2})`,t.lineWidth=3,t.stroke()}}}}},[o,L,h,l]}class ta extends Je{constructor(B){super(),Ke(this,B,na,ia,ke,{organism:1,size:2})}}function Ee(R,B,w){const L=R.slice();return L[6]=B[w],L}function Re(R){let B,w,L=R[6].generation+"",h,e,o,l=R[6].species.name+"",t,f,s,d=R[6].species.fittest_organism.name+"",r,a,i,n=R[6].species.fittest_organism.fitness.toFixed(0)+"",c,y,C,M,S,u;return M=new ta({props:{organism:R[6].species.fittest_organism}}),{c(){B=U("tr"),w=U("td"),h=ne(L),e=$(),o=U("td"),t=ne(l),f=$(),s=U("td"),r=ne(d),a=$(),i=U("td"),c=ne(n),y=$(),C=U("td"),$e(M.$$.fragment),S=$()},l(v){B=j(v,"TR",{});var g=Z(B);w=j(g,"TD",{});var m=Z(w);h=te(m,L),m.forEach(W),e=_(g),o=j(g,"TD",{});var p=Z(o);t=te(p,l),p.forEach(W),f=_(g),s=j(g,"TD",{});var x=Z(s);r=te(x,d),x.forEach(W),a=_(g),i=j(g,"TD",{});var b=Z(i);c=te(b,n),b.forEach(W),y=_(g),C=j(g,"TD",{});var A=Z(C);_e(M.$$.fragment,A),A.forEach(W),S=_(g),g.forEach(W)},m(v,g){Ce(v,B,g),F(B,w),F(w,h),F(B,e),F(B,o),F(o,t),F(B,f),F(B,s),F(s,r),F(B,a),F(B,i),F(i,c),F(B,y),F(B,C),ea(M,C,null),F(B,S),u=!0},p(v,g){(!u||g&7)&&L!==(L=v[6].generation+"")&&ce(h,L),(!u||g&7)&&l!==(l=v[6].species.name+"")&&ce(t,l),(!u||g&7)&&d!==(d=v[6].species.fittest_organism.name+"")&&ce(r,d),(!u||g&7)&&n!==(n=v[6].species.fittest_organism.fitness.toFixed(0)+"")&&ce(c,n);const m={};g&7&&(m.organism=v[6].species.fittest_organism),M.$set(m)},i(v){u||(de(M.$$.fragment,v),u=!0)},o(v){pe(M.$$.fragment,v),u=!1},d(v){v&&W(B),aa(M)}}}function ra(R){let B,w,L,h="<th>Generation</th> <th>Best Species</th> <th>Best Organism</th> <th>Best Fitness</th> <th>Network</th>",e,o,l,t,f,s,d,r,a,i,n,c,y,C,M,S=Pe(R[1].slice(R[2],R[2]+R[0])),u=[];for(let g=0;g<S.length;g+=1)u[g]=Re(Ee(R,S,g));const v=g=>pe(u[g],1,1,()=>{u[g]=null});return{c(){B=U("div"),w=U("table"),L=U("tr"),L.innerHTML=h,e=$();for(let g=0;g<u.length;g+=1)u[g].c();o=$(),l=U("div"),t=U("button"),f=ne("Later"),d=$(),r=U("div"),a=$(),i=U("button"),n=ne("Earlier"),this.h()},l(g){B=j(g,"DIV",{class:!0});var m=Z(B);w=j(m,"TABLE",{class:!0});var p=Z(w);L=j(p,"TR",{"data-svelte-h":!0}),qe(L)!=="svelte-112uk25"&&(L.innerHTML=h),e=_(p);for(let D=0;D<u.length;D+=1)u[D].l(p);p.forEach(W),o=_(m),l=j(m,"DIV",{class:!0});var x=Z(l);t=j(x,"BUTTON",{class:!0});var b=Z(t);f=te(b,"Later"),b.forEach(W),d=_(x),r=j(x,"DIV",{class:!0}),Z(r).forEach(W),a=_(x),i=j(x,"BUTTON",{class:!0});var A=Z(i);n=te(A,"Earlier"),A.forEach(W),x.forEach(W),m.forEach(W),this.h()},h(){ee(w,"class","svelte-1d2asj6"),t.disabled=s=R[2]<=1,ee(t,"class","svelte-1d2asj6"),ee(r,"class","spacer svelte-1d2asj6"),i.disabled=c=R[2]>=R[1].length-1,ee(i,"class","svelte-1d2asj6"),ee(l,"class","row svelte-1d2asj6"),ee(B,"class","parent svelte-1d2asj6")},m(g,m){Ce(g,B,m),F(B,w),F(w,L),F(w,e);for(let p=0;p<u.length;p+=1)u[p]&&u[p].m(w,null);F(B,o),F(B,l),F(l,t),F(t,f),F(l,d),F(l,r),F(l,a),F(l,i),F(i,n),y=!0,C||(M=[Be(t,"click",R[4]),Be(i,"click",R[5])],C=!0)},p(g,[m]){if(m&7){S=Pe(g[1].slice(g[2],g[2]+g[0]));let p;for(p=0;p<S.length;p+=1){const x=Ee(g,S,p);u[p]?(u[p].p(x,m),de(u[p],1)):(u[p]=Re(x),u[p].c(),de(u[p],1),u[p].m(w,null))}for(Qe(),p=S.length;p<u.length;p+=1)v(p);Ye()}(!y||m&4&&s!==(s=g[2]<=1))&&(t.disabled=s),(!y||m&6&&c!==(c=g[2]>=g[1].length-1))&&(i.disabled=c)},i(g){if(!y){for(let m=0;m<S.length;m+=1)de(u[m]);y=!0}},o(g){u=u.filter(Boolean);for(let m=0;m<u.length;m+=1)pe(u[m]);y=!1},d(g){g&&W(B),Xe(u,g),C=!1,Ze(M)}}}function la(R,B,w){let{neat:L}=B,{n_view:h=4}=B,e=[],o=1;const l=()=>{o>1&&w(2,o-=h)},t=()=>{o<e.length-1&&w(2,o+=h)};return R.$$set=f=>{"neat"in f&&w(3,L=f.neat),"n_view"in f&&w(0,h=f.n_view)},R.$$.update=()=>{R.$$.dirty&10&&(e.unshift({generation:L.generation,species:L.species[0]}),w(1,e),w(3,L))},[h,e,o,L,l,t]}class Sa extends Je{constructor(B){super(),Ke(this,B,la,ra,ke,{neat:3,n_view:0})}}var ge=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function oa(R){return R&&R.__esModule&&Object.prototype.hasOwnProperty.call(R,"default")?R.default:R}var Ge={exports:{}};/*!
 * matter-js 0.19.0 by @liabru
 * http://brm.io/matter-js/
 * License MIT
 * 
 * The MIT License (MIT)
 * 
 * Copyright (c) Liam Brummitt and contributors.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */(function(R,B){(function(L,h){R.exports=h()})(ge,function(){return function(w){var L={};function h(e){if(L[e])return L[e].exports;var o=L[e]={i:e,l:!1,exports:{}};return w[e].call(o.exports,o,o.exports,h),o.l=!0,o.exports}return h.m=w,h.c=L,h.d=function(e,o,l){h.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:l})},h.r=function(e){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},h.t=function(e,o){if(o&1&&(e=h(e)),o&8||o&4&&typeof e=="object"&&e&&e.__esModule)return e;var l=Object.create(null);if(h.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),o&2&&typeof e!="string")for(var t in e)h.d(l,t,(function(f){return e[f]}).bind(null,t));return l},h.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return h.d(o,"a",o),o},h.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},h.p="",h(h.s=20)}([function(w,L){var h={};w.exports=h,function(){h._baseDelta=1e3/60,h._nextId=0,h._seed=0,h._nowStartTime=+new Date,h._warnedOnce={},h._decomp=null,h.extend=function(o,l){var t,f;typeof l=="boolean"?(t=2,f=l):(t=1,f=!0);for(var s=t;s<arguments.length;s++){var d=arguments[s];if(d)for(var r in d)f&&d[r]&&d[r].constructor===Object&&(!o[r]||o[r].constructor===Object)?(o[r]=o[r]||{},h.extend(o[r],f,d[r])):o[r]=d[r]}return o},h.clone=function(o,l){return h.extend({},l,o)},h.keys=function(o){if(Object.keys)return Object.keys(o);var l=[];for(var t in o)l.push(t);return l},h.values=function(o){var l=[];if(Object.keys){for(var t=Object.keys(o),f=0;f<t.length;f++)l.push(o[t[f]]);return l}for(var s in o)l.push(o[s]);return l},h.get=function(o,l,t,f){l=l.split(".").slice(t,f);for(var s=0;s<l.length;s+=1)o=o[l[s]];return o},h.set=function(o,l,t,f,s){var d=l.split(".").slice(f,s);return h.get(o,l,0,-1)[d[d.length-1]]=t,t},h.shuffle=function(o){for(var l=o.length-1;l>0;l--){var t=Math.floor(h.random()*(l+1)),f=o[l];o[l]=o[t],o[t]=f}return o},h.choose=function(o){return o[Math.floor(h.random()*o.length)]},h.isElement=function(o){return typeof HTMLElement<"u"?o instanceof HTMLElement:!!(o&&o.nodeType&&o.nodeName)},h.isArray=function(o){return Object.prototype.toString.call(o)==="[object Array]"},h.isFunction=function(o){return typeof o=="function"},h.isPlainObject=function(o){return typeof o=="object"&&o.constructor===Object},h.isString=function(o){return toString.call(o)==="[object String]"},h.clamp=function(o,l,t){return o<l?l:o>t?t:o},h.sign=function(o){return o<0?-1:1},h.now=function(){if(typeof window<"u"&&window.performance){if(window.performance.now)return window.performance.now();if(window.performance.webkitNow)return window.performance.webkitNow()}return Date.now?Date.now():new Date-h._nowStartTime},h.random=function(o,l){return o=typeof o<"u"?o:0,l=typeof l<"u"?l:1,o+e()*(l-o)};var e=function(){return h._seed=(h._seed*9301+49297)%233280,h._seed/233280};h.colorToNumber=function(o){return o=o.replace("#",""),o.length==3&&(o=o.charAt(0)+o.charAt(0)+o.charAt(1)+o.charAt(1)+o.charAt(2)+o.charAt(2)),parseInt(o,16)},h.logLevel=1,h.log=function(){console&&h.logLevel>0&&h.logLevel<=3&&console.log.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},h.info=function(){console&&h.logLevel>0&&h.logLevel<=2&&console.info.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},h.warn=function(){console&&h.logLevel>0&&h.logLevel<=3&&console.warn.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},h.warnOnce=function(){var o=Array.prototype.slice.call(arguments).join(" ");h._warnedOnce[o]||(h.warn(o),h._warnedOnce[o]=!0)},h.deprecated=function(o,l,t){o[l]=h.chain(function(){h.warnOnce("🔅 deprecated 🔅",t)},o[l])},h.nextId=function(){return h._nextId++},h.indexOf=function(o,l){if(o.indexOf)return o.indexOf(l);for(var t=0;t<o.length;t++)if(o[t]===l)return t;return-1},h.map=function(o,l){if(o.map)return o.map(l);for(var t=[],f=0;f<o.length;f+=1)t.push(l(o[f]));return t},h.topologicalSort=function(o){var l=[],t=[],f=[];for(var s in o)!t[s]&&!f[s]&&h._topologicalSort(s,t,f,o,l);return l},h._topologicalSort=function(o,l,t,f,s){var d=f[o]||[];t[o]=!0;for(var r=0;r<d.length;r+=1){var a=d[r];t[a]||l[a]||h._topologicalSort(a,l,t,f,s)}t[o]=!1,l[o]=!0,s.push(o)},h.chain=function(){for(var o=[],l=0;l<arguments.length;l+=1){var t=arguments[l];t._chained?o.push.apply(o,t._chained):o.push(t)}var f=function(){for(var s,d=new Array(arguments.length),r=0,a=arguments.length;r<a;r++)d[r]=arguments[r];for(r=0;r<o.length;r+=1){var i=o[r].apply(s,d);typeof i<"u"&&(s=i)}return s};return f._chained=o,f},h.chainPathBefore=function(o,l,t){return h.set(o,l,h.chain(t,h.get(o,l)))},h.chainPathAfter=function(o,l,t){return h.set(o,l,h.chain(h.get(o,l),t))},h.setDecomp=function(o){h._decomp=o},h.getDecomp=function(){var o=h._decomp;try{!o&&typeof window<"u"&&(o=window.decomp),!o&&typeof ge<"u"&&(o=ge.decomp)}catch{o=null}return o}}()},function(w,L){var h={};w.exports=h,function(){h.create=function(e){var o={min:{x:0,y:0},max:{x:0,y:0}};return e&&h.update(o,e),o},h.update=function(e,o,l){e.min.x=1/0,e.max.x=-1/0,e.min.y=1/0,e.max.y=-1/0;for(var t=0;t<o.length;t++){var f=o[t];f.x>e.max.x&&(e.max.x=f.x),f.x<e.min.x&&(e.min.x=f.x),f.y>e.max.y&&(e.max.y=f.y),f.y<e.min.y&&(e.min.y=f.y)}l&&(l.x>0?e.max.x+=l.x:e.min.x+=l.x,l.y>0?e.max.y+=l.y:e.min.y+=l.y)},h.contains=function(e,o){return o.x>=e.min.x&&o.x<=e.max.x&&o.y>=e.min.y&&o.y<=e.max.y},h.overlaps=function(e,o){return e.min.x<=o.max.x&&e.max.x>=o.min.x&&e.max.y>=o.min.y&&e.min.y<=o.max.y},h.translate=function(e,o){e.min.x+=o.x,e.max.x+=o.x,e.min.y+=o.y,e.max.y+=o.y},h.shift=function(e,o){var l=e.max.x-e.min.x,t=e.max.y-e.min.y;e.min.x=o.x,e.max.x=o.x+l,e.min.y=o.y,e.max.y=o.y+t}}()},function(w,L){var h={};w.exports=h,function(){h.create=function(e,o){return{x:e||0,y:o||0}},h.clone=function(e){return{x:e.x,y:e.y}},h.magnitude=function(e){return Math.sqrt(e.x*e.x+e.y*e.y)},h.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y},h.rotate=function(e,o,l){var t=Math.cos(o),f=Math.sin(o);l||(l={});var s=e.x*t-e.y*f;return l.y=e.x*f+e.y*t,l.x=s,l},h.rotateAbout=function(e,o,l,t){var f=Math.cos(o),s=Math.sin(o);t||(t={});var d=l.x+((e.x-l.x)*f-(e.y-l.y)*s);return t.y=l.y+((e.x-l.x)*s+(e.y-l.y)*f),t.x=d,t},h.normalise=function(e){var o=h.magnitude(e);return o===0?{x:0,y:0}:{x:e.x/o,y:e.y/o}},h.dot=function(e,o){return e.x*o.x+e.y*o.y},h.cross=function(e,o){return e.x*o.y-e.y*o.x},h.cross3=function(e,o,l){return(o.x-e.x)*(l.y-e.y)-(o.y-e.y)*(l.x-e.x)},h.add=function(e,o,l){return l||(l={}),l.x=e.x+o.x,l.y=e.y+o.y,l},h.sub=function(e,o,l){return l||(l={}),l.x=e.x-o.x,l.y=e.y-o.y,l},h.mult=function(e,o){return{x:e.x*o,y:e.y*o}},h.div=function(e,o){return{x:e.x/o,y:e.y/o}},h.perp=function(e,o){return o=o===!0?-1:1,{x:o*-e.y,y:o*e.x}},h.neg=function(e){return{x:-e.x,y:-e.y}},h.angle=function(e,o){return Math.atan2(o.y-e.y,o.x-e.x)},h._temp=[h.create(),h.create(),h.create(),h.create(),h.create(),h.create()]}()},function(w,L,h){var e={};w.exports=e;var o=h(2),l=h(0);(function(){e.create=function(t,f){for(var s=[],d=0;d<t.length;d++){var r=t[d],a={x:r.x,y:r.y,index:d,body:f,isInternal:!1};s.push(a)}return s},e.fromPath=function(t,f){var s=/L?\s*([-\d.e]+)[\s,]*([-\d.e]+)*/ig,d=[];return t.replace(s,function(r,a,i){d.push({x:parseFloat(a),y:parseFloat(i)})}),e.create(d,f)},e.centre=function(t){for(var f=e.area(t,!0),s={x:0,y:0},d,r,a,i=0;i<t.length;i++)a=(i+1)%t.length,d=o.cross(t[i],t[a]),r=o.mult(o.add(t[i],t[a]),d),s=o.add(s,r);return o.div(s,6*f)},e.mean=function(t){for(var f={x:0,y:0},s=0;s<t.length;s++)f.x+=t[s].x,f.y+=t[s].y;return o.div(f,t.length)},e.area=function(t,f){for(var s=0,d=t.length-1,r=0;r<t.length;r++)s+=(t[d].x-t[r].x)*(t[d].y+t[r].y),d=r;return f?s/2:Math.abs(s)/2},e.inertia=function(t,f){for(var s=0,d=0,r=t,a,i,n=0;n<r.length;n++)i=(n+1)%r.length,a=Math.abs(o.cross(r[i],r[n])),s+=a*(o.dot(r[i],r[i])+o.dot(r[i],r[n])+o.dot(r[n],r[n])),d+=a;return f/6*(s/d)},e.translate=function(t,f,s){s=typeof s<"u"?s:1;var d=t.length,r=f.x*s,a=f.y*s,i;for(i=0;i<d;i++)t[i].x+=r,t[i].y+=a;return t},e.rotate=function(t,f,s){if(f!==0){var d=Math.cos(f),r=Math.sin(f),a=s.x,i=s.y,n=t.length,c,y,C,M;for(M=0;M<n;M++)c=t[M],y=c.x-a,C=c.y-i,c.x=a+(y*d-C*r),c.y=i+(y*r+C*d);return t}},e.contains=function(t,f){for(var s=f.x,d=f.y,r=t.length,a=t[r-1],i,n=0;n<r;n++){if(i=t[n],(s-a.x)*(i.y-a.y)+(d-a.y)*(a.x-i.x)>0)return!1;a=i}return!0},e.scale=function(t,f,s,d){if(f===1&&s===1)return t;d=d||e.centre(t);for(var r,a,i=0;i<t.length;i++)r=t[i],a=o.sub(r,d),t[i].x=d.x+a.x*f,t[i].y=d.y+a.y*s;return t},e.chamfer=function(t,f,s,d,r){typeof f=="number"?f=[f]:f=f||[8],s=typeof s<"u"?s:-1,d=d||2,r=r||14;for(var a=[],i=0;i<t.length;i++){var n=t[i-1>=0?i-1:t.length-1],c=t[i],y=t[(i+1)%t.length],C=f[i<f.length?i:f.length-1];if(C===0){a.push(c);continue}var M=o.normalise({x:c.y-n.y,y:n.x-c.x}),S=o.normalise({x:y.y-c.y,y:c.x-y.x}),u=Math.sqrt(2*Math.pow(C,2)),v=o.mult(l.clone(M),C),g=o.normalise(o.mult(o.add(M,S),.5)),m=o.sub(c,o.mult(g,u)),p=s;s===-1&&(p=Math.pow(C,.32)*1.75),p=l.clamp(p,d,r),p%2===1&&(p+=1);for(var x=Math.acos(o.dot(M,S)),b=x/p,A=0;A<p;A++)a.push(o.add(o.rotate(v,b*A),m))}return a},e.clockwiseSort=function(t){var f=e.mean(t);return t.sort(function(s,d){return o.angle(f,s)-o.angle(f,d)}),t},e.isConvex=function(t){var f=0,s=t.length,d,r,a,i;if(s<3)return null;for(d=0;d<s;d++)if(r=(d+1)%s,a=(d+2)%s,i=(t[r].x-t[d].x)*(t[a].y-t[r].y),i-=(t[r].y-t[d].y)*(t[a].x-t[r].x),i<0?f|=1:i>0&&(f|=2),f===3)return!1;return f!==0?!0:null},e.hull=function(t){var f=[],s=[],d,r;for(t=t.slice(0),t.sort(function(a,i){var n=a.x-i.x;return n!==0?n:a.y-i.y}),r=0;r<t.length;r+=1){for(d=t[r];s.length>=2&&o.cross3(s[s.length-2],s[s.length-1],d)<=0;)s.pop();s.push(d)}for(r=t.length-1;r>=0;r-=1){for(d=t[r];f.length>=2&&o.cross3(f[f.length-2],f[f.length-1],d)<=0;)f.pop();f.push(d)}return f.pop(),s.pop(),f.concat(s)}})()},function(w,L,h){var e={};w.exports=e;var o=h(3),l=h(2),t=h(7),f=h(0),s=h(1),d=h(11);(function(){e._timeCorrection=!0,e._inertiaScale=4,e._nextCollidingGroupId=1,e._nextNonCollidingGroupId=-1,e._nextCategory=1,e._baseDelta=1e3/60,e.create=function(a){var i={id:f.nextId(),type:"body",label:"Body",parts:[],plugin:{},angle:0,vertices:o.fromPath("L 0 0 L 40 0 L 40 40 L 0 40"),position:{x:0,y:0},force:{x:0,y:0},torque:0,positionImpulse:{x:0,y:0},constraintImpulse:{x:0,y:0,angle:0},totalContacts:0,speed:0,angularSpeed:0,velocity:{x:0,y:0},angularVelocity:0,isSensor:!1,isStatic:!1,isSleeping:!1,motion:0,sleepThreshold:60,density:.001,restitution:0,friction:.1,frictionStatic:.5,frictionAir:.01,collisionFilter:{category:1,mask:4294967295,group:0},slop:.05,timeScale:1,render:{visible:!0,opacity:1,strokeStyle:null,fillStyle:null,lineWidth:null,sprite:{xScale:1,yScale:1,xOffset:0,yOffset:0}},events:null,bounds:null,chamfer:null,circleRadius:0,positionPrev:null,anglePrev:0,parent:null,axes:null,area:0,mass:0,inertia:0,deltaTime:16.666666666666668,_original:null},n=f.extend(i,a);return r(n,a),n},e.nextGroup=function(a){return a?e._nextNonCollidingGroupId--:e._nextCollidingGroupId++},e.nextCategory=function(){return e._nextCategory=e._nextCategory<<1,e._nextCategory};var r=function(a,i){i=i||{},e.set(a,{bounds:a.bounds||s.create(a.vertices),positionPrev:a.positionPrev||l.clone(a.position),anglePrev:a.anglePrev||a.angle,vertices:a.vertices,parts:a.parts||[a],isStatic:a.isStatic,isSleeping:a.isSleeping,parent:a.parent||a}),o.rotate(a.vertices,a.angle,a.position),d.rotate(a.axes,a.angle),s.update(a.bounds,a.vertices,a.velocity),e.set(a,{axes:i.axes||a.axes,area:i.area||a.area,mass:i.mass||a.mass,inertia:i.inertia||a.inertia});var n=a.isStatic?"#14151f":f.choose(["#f19648","#f5d259","#f55a3c","#063e7b","#ececd1"]),c=a.isStatic?"#555":"#ccc",y=a.isStatic&&a.render.fillStyle===null?1:0;a.render.fillStyle=a.render.fillStyle||n,a.render.strokeStyle=a.render.strokeStyle||c,a.render.lineWidth=a.render.lineWidth||y,a.render.sprite.xOffset+=-(a.bounds.min.x-a.position.x)/(a.bounds.max.x-a.bounds.min.x),a.render.sprite.yOffset+=-(a.bounds.min.y-a.position.y)/(a.bounds.max.y-a.bounds.min.y)};e.set=function(a,i,n){var c;typeof i=="string"&&(c=i,i={},i[c]=n);for(c in i)if(Object.prototype.hasOwnProperty.call(i,c))switch(n=i[c],c){case"isStatic":e.setStatic(a,n);break;case"isSleeping":t.set(a,n);break;case"mass":e.setMass(a,n);break;case"density":e.setDensity(a,n);break;case"inertia":e.setInertia(a,n);break;case"vertices":e.setVertices(a,n);break;case"position":e.setPosition(a,n);break;case"angle":e.setAngle(a,n);break;case"velocity":e.setVelocity(a,n);break;case"angularVelocity":e.setAngularVelocity(a,n);break;case"speed":e.setSpeed(a,n);break;case"angularSpeed":e.setAngularSpeed(a,n);break;case"parts":e.setParts(a,n);break;case"centre":e.setCentre(a,n);break;default:a[c]=n}},e.setStatic=function(a,i){for(var n=0;n<a.parts.length;n++){var c=a.parts[n];c.isStatic=i,i?(c._original={restitution:c.restitution,friction:c.friction,mass:c.mass,inertia:c.inertia,density:c.density,inverseMass:c.inverseMass,inverseInertia:c.inverseInertia},c.restitution=0,c.friction=1,c.mass=c.inertia=c.density=1/0,c.inverseMass=c.inverseInertia=0,c.positionPrev.x=c.position.x,c.positionPrev.y=c.position.y,c.anglePrev=c.angle,c.angularVelocity=0,c.speed=0,c.angularSpeed=0,c.motion=0):c._original&&(c.restitution=c._original.restitution,c.friction=c._original.friction,c.mass=c._original.mass,c.inertia=c._original.inertia,c.density=c._original.density,c.inverseMass=c._original.inverseMass,c.inverseInertia=c._original.inverseInertia,c._original=null)}},e.setMass=function(a,i){var n=a.inertia/(a.mass/6);a.inertia=n*(i/6),a.inverseInertia=1/a.inertia,a.mass=i,a.inverseMass=1/a.mass,a.density=a.mass/a.area},e.setDensity=function(a,i){e.setMass(a,i*a.area),a.density=i},e.setInertia=function(a,i){a.inertia=i,a.inverseInertia=1/a.inertia},e.setVertices=function(a,i){i[0].body===a?a.vertices=i:a.vertices=o.create(i,a),a.axes=d.fromVertices(a.vertices),a.area=o.area(a.vertices),e.setMass(a,a.density*a.area);var n=o.centre(a.vertices);o.translate(a.vertices,n,-1),e.setInertia(a,e._inertiaScale*o.inertia(a.vertices,a.mass)),o.translate(a.vertices,a.position),s.update(a.bounds,a.vertices,a.velocity)},e.setParts=function(a,i,n){var c;for(i=i.slice(0),a.parts.length=0,a.parts.push(a),a.parent=a,c=0;c<i.length;c++){var y=i[c];y!==a&&(y.parent=a,a.parts.push(y))}if(a.parts.length!==1){if(n=typeof n<"u"?n:!0,n){var C=[];for(c=0;c<i.length;c++)C=C.concat(i[c].vertices);o.clockwiseSort(C);var M=o.hull(C),S=o.centre(M);e.setVertices(a,M),o.translate(a.vertices,S)}var u=e._totalProperties(a);a.area=u.area,a.parent=a,a.position.x=u.centre.x,a.position.y=u.centre.y,a.positionPrev.x=u.centre.x,a.positionPrev.y=u.centre.y,e.setMass(a,u.mass),e.setInertia(a,u.inertia),e.setPosition(a,u.centre)}},e.setCentre=function(a,i,n){n?(a.positionPrev.x+=i.x,a.positionPrev.y+=i.y,a.position.x+=i.x,a.position.y+=i.y):(a.positionPrev.x=i.x-(a.position.x-a.positionPrev.x),a.positionPrev.y=i.y-(a.position.y-a.positionPrev.y),a.position.x=i.x,a.position.y=i.y)},e.setPosition=function(a,i,n){var c=l.sub(i,a.position);n?(a.positionPrev.x=a.position.x,a.positionPrev.y=a.position.y,a.velocity.x=c.x,a.velocity.y=c.y,a.speed=l.magnitude(c)):(a.positionPrev.x+=c.x,a.positionPrev.y+=c.y);for(var y=0;y<a.parts.length;y++){var C=a.parts[y];C.position.x+=c.x,C.position.y+=c.y,o.translate(C.vertices,c),s.update(C.bounds,C.vertices,a.velocity)}},e.setAngle=function(a,i,n){var c=i-a.angle;n?(a.anglePrev=a.angle,a.angularVelocity=c,a.angularSpeed=Math.abs(c)):a.anglePrev+=c;for(var y=0;y<a.parts.length;y++){var C=a.parts[y];C.angle+=c,o.rotate(C.vertices,c,a.position),d.rotate(C.axes,c),s.update(C.bounds,C.vertices,a.velocity),y>0&&l.rotateAbout(C.position,c,a.position,C.position)}},e.setVelocity=function(a,i){var n=a.deltaTime/e._baseDelta;a.positionPrev.x=a.position.x-i.x*n,a.positionPrev.y=a.position.y-i.y*n,a.velocity.x=(a.position.x-a.positionPrev.x)/n,a.velocity.y=(a.position.y-a.positionPrev.y)/n,a.speed=l.magnitude(a.velocity)},e.getVelocity=function(a){var i=e._baseDelta/a.deltaTime;return{x:(a.position.x-a.positionPrev.x)*i,y:(a.position.y-a.positionPrev.y)*i}},e.getSpeed=function(a){return l.magnitude(e.getVelocity(a))},e.setSpeed=function(a,i){e.setVelocity(a,l.mult(l.normalise(e.getVelocity(a)),i))},e.setAngularVelocity=function(a,i){var n=a.deltaTime/e._baseDelta;a.anglePrev=a.angle-i*n,a.angularVelocity=(a.angle-a.anglePrev)/n,a.angularSpeed=Math.abs(a.angularVelocity)},e.getAngularVelocity=function(a){return(a.angle-a.anglePrev)*e._baseDelta/a.deltaTime},e.getAngularSpeed=function(a){return Math.abs(e.getAngularVelocity(a))},e.setAngularSpeed=function(a,i){e.setAngularVelocity(a,f.sign(e.getAngularVelocity(a))*i)},e.translate=function(a,i,n){e.setPosition(a,l.add(a.position,i),n)},e.rotate=function(a,i,n,c){if(!n)e.setAngle(a,a.angle+i,c);else{var y=Math.cos(i),C=Math.sin(i),M=a.position.x-n.x,S=a.position.y-n.y;e.setPosition(a,{x:n.x+(M*y-S*C),y:n.y+(M*C+S*y)},c),e.setAngle(a,a.angle+i,c)}},e.scale=function(a,i,n,c){var y=0,C=0;c=c||a.position;for(var M=0;M<a.parts.length;M++){var S=a.parts[M];o.scale(S.vertices,i,n,c),S.axes=d.fromVertices(S.vertices),S.area=o.area(S.vertices),e.setMass(S,a.density*S.area),o.translate(S.vertices,{x:-S.position.x,y:-S.position.y}),e.setInertia(S,e._inertiaScale*o.inertia(S.vertices,S.mass)),o.translate(S.vertices,{x:S.position.x,y:S.position.y}),M>0&&(y+=S.area,C+=S.inertia),S.position.x=c.x+(S.position.x-c.x)*i,S.position.y=c.y+(S.position.y-c.y)*n,s.update(S.bounds,S.vertices,a.velocity)}a.parts.length>1&&(a.area=y,a.isStatic||(e.setMass(a,a.density*y),e.setInertia(a,C))),a.circleRadius&&(i===n?a.circleRadius*=i:a.circleRadius=null)},e.update=function(a,i){i=(typeof i<"u"?i:1e3/60)*a.timeScale;var n=i*i,c=e._timeCorrection?i/(a.deltaTime||i):1,y=1-a.frictionAir*(i/f._baseDelta),C=(a.position.x-a.positionPrev.x)*c,M=(a.position.y-a.positionPrev.y)*c;a.velocity.x=C*y+a.force.x/a.mass*n,a.velocity.y=M*y+a.force.y/a.mass*n,a.positionPrev.x=a.position.x,a.positionPrev.y=a.position.y,a.position.x+=a.velocity.x,a.position.y+=a.velocity.y,a.deltaTime=i,a.angularVelocity=(a.angle-a.anglePrev)*y*c+a.torque/a.inertia*n,a.anglePrev=a.angle,a.angle+=a.angularVelocity;for(var S=0;S<a.parts.length;S++){var u=a.parts[S];o.translate(u.vertices,a.velocity),S>0&&(u.position.x+=a.velocity.x,u.position.y+=a.velocity.y),a.angularVelocity!==0&&(o.rotate(u.vertices,a.angularVelocity,a.position),d.rotate(u.axes,a.angularVelocity),S>0&&l.rotateAbout(u.position,a.angularVelocity,a.position,u.position)),s.update(u.bounds,u.vertices,a.velocity)}},e.updateVelocities=function(a){var i=e._baseDelta/a.deltaTime,n=a.velocity;n.x=(a.position.x-a.positionPrev.x)*i,n.y=(a.position.y-a.positionPrev.y)*i,a.speed=Math.sqrt(n.x*n.x+n.y*n.y),a.angularVelocity=(a.angle-a.anglePrev)*i,a.angularSpeed=Math.abs(a.angularVelocity)},e.applyForce=function(a,i,n){var c={x:i.x-a.position.x,y:i.y-a.position.y};a.force.x+=n.x,a.force.y+=n.y,a.torque+=c.x*n.y-c.y*n.x},e._totalProperties=function(a){for(var i={mass:0,area:0,inertia:0,centre:{x:0,y:0}},n=a.parts.length===1?0:1;n<a.parts.length;n++){var c=a.parts[n],y=c.mass!==1/0?c.mass:1;i.mass+=y,i.area+=c.area,i.inertia+=c.inertia,i.centre=l.add(i.centre,l.mult(c.position,y))}return i.centre=l.div(i.centre,i.mass),i}})()},function(w,L,h){var e={};w.exports=e;var o=h(0);(function(){e.on=function(l,t,f){for(var s=t.split(" "),d,r=0;r<s.length;r++)d=s[r],l.events=l.events||{},l.events[d]=l.events[d]||[],l.events[d].push(f);return f},e.off=function(l,t,f){if(!t){l.events={};return}typeof t=="function"&&(f=t,t=o.keys(l.events).join(" "));for(var s=t.split(" "),d=0;d<s.length;d++){var r=l.events[s[d]],a=[];if(f&&r)for(var i=0;i<r.length;i++)r[i]!==f&&a.push(r[i]);l.events[s[d]]=a}},e.trigger=function(l,t,f){var s,d,r,a,i=l.events;if(i&&o.keys(i).length>0){f||(f={}),s=t.split(" ");for(var n=0;n<s.length;n++)if(d=s[n],r=i[d],r){a=o.clone(f,!1),a.name=d,a.source=l;for(var c=0;c<r.length;c++)r[c].apply(l,[a])}}}})()},function(w,L,h){var e={};w.exports=e;var o=h(5),l=h(0),t=h(1),f=h(4);(function(){e.create=function(s){return l.extend({id:l.nextId(),type:"composite",parent:null,isModified:!1,bodies:[],constraints:[],composites:[],label:"Composite",plugin:{},cache:{allBodies:null,allConstraints:null,allComposites:null}},s)},e.setModified=function(s,d,r,a){if(s.isModified=d,d&&s.cache&&(s.cache.allBodies=null,s.cache.allConstraints=null,s.cache.allComposites=null),r&&s.parent&&e.setModified(s.parent,d,r,a),a)for(var i=0;i<s.composites.length;i++){var n=s.composites[i];e.setModified(n,d,r,a)}},e.add=function(s,d){var r=[].concat(d);o.trigger(s,"beforeAdd",{object:d});for(var a=0;a<r.length;a++){var i=r[a];switch(i.type){case"body":if(i.parent!==i){l.warn("Composite.add: skipped adding a compound body part (you must add its parent instead)");break}e.addBody(s,i);break;case"constraint":e.addConstraint(s,i);break;case"composite":e.addComposite(s,i);break;case"mouseConstraint":e.addConstraint(s,i.constraint);break}}return o.trigger(s,"afterAdd",{object:d}),s},e.remove=function(s,d,r){var a=[].concat(d);o.trigger(s,"beforeRemove",{object:d});for(var i=0;i<a.length;i++){var n=a[i];switch(n.type){case"body":e.removeBody(s,n,r);break;case"constraint":e.removeConstraint(s,n,r);break;case"composite":e.removeComposite(s,n,r);break;case"mouseConstraint":e.removeConstraint(s,n.constraint);break}}return o.trigger(s,"afterRemove",{object:d}),s},e.addComposite=function(s,d){return s.composites.push(d),d.parent=s,e.setModified(s,!0,!0,!1),s},e.removeComposite=function(s,d,r){var a=l.indexOf(s.composites,d);if(a!==-1&&e.removeCompositeAt(s,a),r)for(var i=0;i<s.composites.length;i++)e.removeComposite(s.composites[i],d,!0);return s},e.removeCompositeAt=function(s,d){return s.composites.splice(d,1),e.setModified(s,!0,!0,!1),s},e.addBody=function(s,d){return s.bodies.push(d),e.setModified(s,!0,!0,!1),s},e.removeBody=function(s,d,r){var a=l.indexOf(s.bodies,d);if(a!==-1&&e.removeBodyAt(s,a),r)for(var i=0;i<s.composites.length;i++)e.removeBody(s.composites[i],d,!0);return s},e.removeBodyAt=function(s,d){return s.bodies.splice(d,1),e.setModified(s,!0,!0,!1),s},e.addConstraint=function(s,d){return s.constraints.push(d),e.setModified(s,!0,!0,!1),s},e.removeConstraint=function(s,d,r){var a=l.indexOf(s.constraints,d);if(a!==-1&&e.removeConstraintAt(s,a),r)for(var i=0;i<s.composites.length;i++)e.removeConstraint(s.composites[i],d,!0);return s},e.removeConstraintAt=function(s,d){return s.constraints.splice(d,1),e.setModified(s,!0,!0,!1),s},e.clear=function(s,d,r){if(r)for(var a=0;a<s.composites.length;a++)e.clear(s.composites[a],d,!0);return d?s.bodies=s.bodies.filter(function(i){return i.isStatic}):s.bodies.length=0,s.constraints.length=0,s.composites.length=0,e.setModified(s,!0,!0,!1),s},e.allBodies=function(s){if(s.cache&&s.cache.allBodies)return s.cache.allBodies;for(var d=[].concat(s.bodies),r=0;r<s.composites.length;r++)d=d.concat(e.allBodies(s.composites[r]));return s.cache&&(s.cache.allBodies=d),d},e.allConstraints=function(s){if(s.cache&&s.cache.allConstraints)return s.cache.allConstraints;for(var d=[].concat(s.constraints),r=0;r<s.composites.length;r++)d=d.concat(e.allConstraints(s.composites[r]));return s.cache&&(s.cache.allConstraints=d),d},e.allComposites=function(s){if(s.cache&&s.cache.allComposites)return s.cache.allComposites;for(var d=[].concat(s.composites),r=0;r<s.composites.length;r++)d=d.concat(e.allComposites(s.composites[r]));return s.cache&&(s.cache.allComposites=d),d},e.get=function(s,d,r){var a,i;switch(r){case"body":a=e.allBodies(s);break;case"constraint":a=e.allConstraints(s);break;case"composite":a=e.allComposites(s).concat(s);break}return a?(i=a.filter(function(n){return n.id.toString()===d.toString()}),i.length===0?null:i[0]):null},e.move=function(s,d,r){return e.remove(s,d),e.add(r,d),s},e.rebase=function(s){for(var d=e.allBodies(s).concat(e.allConstraints(s)).concat(e.allComposites(s)),r=0;r<d.length;r++)d[r].id=l.nextId();return s},e.translate=function(s,d,r){for(var a=r?e.allBodies(s):s.bodies,i=0;i<a.length;i++)f.translate(a[i],d);return s},e.rotate=function(s,d,r,a){for(var i=Math.cos(d),n=Math.sin(d),c=a?e.allBodies(s):s.bodies,y=0;y<c.length;y++){var C=c[y],M=C.position.x-r.x,S=C.position.y-r.y;f.setPosition(C,{x:r.x+(M*i-S*n),y:r.y+(M*n+S*i)}),f.rotate(C,d)}return s},e.scale=function(s,d,r,a,i){for(var n=i?e.allBodies(s):s.bodies,c=0;c<n.length;c++){var y=n[c],C=y.position.x-a.x,M=y.position.y-a.y;f.setPosition(y,{x:a.x+C*d,y:a.y+M*r}),f.scale(y,d,r)}return s},e.bounds=function(s){for(var d=e.allBodies(s),r=[],a=0;a<d.length;a+=1){var i=d[a];r.push(i.bounds.min,i.bounds.max)}return t.create(r)}})()},function(w,L,h){var e={};w.exports=e;var o=h(4),l=h(5),t=h(0);(function(){e._motionWakeThreshold=.18,e._motionSleepThreshold=.08,e._minBias=.9,e.update=function(f,s){for(var d=s/t._baseDelta,r=e._motionSleepThreshold,a=0;a<f.length;a++){var i=f[a],n=o.getSpeed(i),c=o.getAngularSpeed(i),y=n*n+c*c;if(i.force.x!==0||i.force.y!==0){e.set(i,!1);continue}var C=Math.min(i.motion,y),M=Math.max(i.motion,y);i.motion=e._minBias*C+(1-e._minBias)*M,i.sleepThreshold>0&&i.motion<r?(i.sleepCounter+=1,i.sleepCounter>=i.sleepThreshold/d&&e.set(i,!0)):i.sleepCounter>0&&(i.sleepCounter-=1)}},e.afterCollisions=function(f){for(var s=e._motionSleepThreshold,d=0;d<f.length;d++){var r=f[d];if(r.isActive){var a=r.collision,i=a.bodyA.parent,n=a.bodyB.parent;if(!(i.isSleeping&&n.isSleeping||i.isStatic||n.isStatic)&&(i.isSleeping||n.isSleeping)){var c=i.isSleeping&&!i.isStatic?i:n,y=c===i?n:i;!c.isStatic&&y.motion>s&&e.set(c,!1)}}}},e.set=function(f,s){var d=f.isSleeping;s?(f.isSleeping=!0,f.sleepCounter=f.sleepThreshold,f.positionImpulse.x=0,f.positionImpulse.y=0,f.positionPrev.x=f.position.x,f.positionPrev.y=f.position.y,f.anglePrev=f.angle,f.speed=0,f.angularSpeed=0,f.motion=0,d||l.trigger(f,"sleepStart")):(f.isSleeping=!1,f.sleepCounter=0,d&&l.trigger(f,"sleepEnd"))}})()},function(w,L,h){var e={};w.exports=e;var o=h(3),l=h(9);(function(){var t=[],f={overlap:0,axis:null},s={overlap:0,axis:null};e.create=function(d,r){return{pair:null,collided:!1,bodyA:d,bodyB:r,parentA:d.parent,parentB:r.parent,depth:0,normal:{x:0,y:0},tangent:{x:0,y:0},penetration:{x:0,y:0},supports:[]}},e.collides=function(d,r,a){if(e._overlapAxes(f,d.vertices,r.vertices,d.axes),f.overlap<=0||(e._overlapAxes(s,r.vertices,d.vertices,r.axes),s.overlap<=0))return null;var i=a&&a.table[l.id(d,r)],n;i?n=i.collision:(n=e.create(d,r),n.collided=!0,n.bodyA=d.id<r.id?d:r,n.bodyB=d.id<r.id?r:d,n.parentA=n.bodyA.parent,n.parentB=n.bodyB.parent),d=n.bodyA,r=n.bodyB;var c;f.overlap<s.overlap?c=f:c=s;var y=n.normal,C=n.supports,M=c.axis,S=M.x,u=M.y;S*(r.position.x-d.position.x)+u*(r.position.y-d.position.y)<0?(y.x=S,y.y=u):(y.x=-S,y.y=-u),n.tangent.x=-y.y,n.tangent.y=y.x,n.depth=c.overlap,n.penetration.x=y.x*n.depth,n.penetration.y=y.y*n.depth;var v=e._findSupports(d,r,y,1),g=0;if(o.contains(d.vertices,v[0])&&(C[g++]=v[0]),o.contains(d.vertices,v[1])&&(C[g++]=v[1]),g<2){var m=e._findSupports(r,d,y,-1);o.contains(r.vertices,m[0])&&(C[g++]=m[0]),g<2&&o.contains(r.vertices,m[1])&&(C[g++]=m[1])}return g===0&&(C[g++]=v[0]),C.length=g,n},e._overlapAxes=function(d,r,a,i){var n=r.length,c=a.length,y=r[0].x,C=r[0].y,M=a[0].x,S=a[0].y,u=i.length,v=Number.MAX_VALUE,g=0,m,p,x,b,A,D;for(A=0;A<u;A++){var E=i[A],P=E.x,k=E.y,T=y*P+C*k,J=M*P+S*k,G=T,I=J;for(D=1;D<n;D+=1)b=r[D].x*P+r[D].y*k,b>G?G=b:b<T&&(T=b);for(D=1;D<c;D+=1)b=a[D].x*P+a[D].y*k,b>I?I=b:b<J&&(J=b);if(p=G-J,x=I-T,m=p<x?p:x,m<v&&(v=m,g=A,m<=0))break}d.axis=i[g],d.overlap=v},e._projectToAxis=function(d,r,a){for(var i=r[0].x*a.x+r[0].y*a.y,n=i,c=1;c<r.length;c+=1){var y=r[c].x*a.x+r[c].y*a.y;y>n?n=y:y<i&&(i=y)}d.min=i,d.max=n},e._findSupports=function(d,r,a,i){var n=r.vertices,c=n.length,y=d.position.x,C=d.position.y,M=a.x*i,S=a.y*i,u=Number.MAX_VALUE,v,g,m,p,x;for(x=0;x<c;x+=1)g=n[x],p=M*(y-g.x)+S*(C-g.y),p<u&&(u=p,v=g);return m=n[(c+v.index-1)%c],u=M*(y-m.x)+S*(C-m.y),g=n[(v.index+1)%c],M*(y-g.x)+S*(C-g.y)<u?(t[0]=v,t[1]=g,t):(t[0]=v,t[1]=m,t)}})()},function(w,L,h){var e={};w.exports=e;var o=h(16);(function(){e.create=function(l,t){var f=l.bodyA,s=l.bodyB,d={id:e.id(f,s),bodyA:f,bodyB:s,collision:l,contacts:[],activeContacts:[],separation:0,isActive:!0,confirmedActive:!0,isSensor:f.isSensor||s.isSensor,timeCreated:t,timeUpdated:t,inverseMass:0,friction:0,frictionStatic:0,restitution:0,slop:0};return e.update(d,l,t),d},e.update=function(l,t,f){var s=l.contacts,d=t.supports,r=l.activeContacts,a=t.parentA,i=t.parentB,n=a.vertices.length;l.isActive=!0,l.timeUpdated=f,l.collision=t,l.separation=t.depth,l.inverseMass=a.inverseMass+i.inverseMass,l.friction=a.friction<i.friction?a.friction:i.friction,l.frictionStatic=a.frictionStatic>i.frictionStatic?a.frictionStatic:i.frictionStatic,l.restitution=a.restitution>i.restitution?a.restitution:i.restitution,l.slop=a.slop>i.slop?a.slop:i.slop,t.pair=l,r.length=0;for(var c=0;c<d.length;c++){var y=d[c],C=y.body===a?y.index:n+y.index,M=s[C];M?r.push(M):r.push(s[C]=o.create(y))}},e.setActive=function(l,t,f){t?(l.isActive=!0,l.timeUpdated=f):(l.isActive=!1,l.activeContacts.length=0)},e.id=function(l,t){return l.id<t.id?"A"+l.id+"B"+t.id:"A"+t.id+"B"+l.id}})()},function(w,L,h){var e={};w.exports=e;var o=h(3),l=h(2),t=h(7),f=h(1),s=h(11),d=h(0);(function(){e._warming=.4,e._torqueDampen=1,e._minLength=1e-6,e.create=function(r){var a=r;a.bodyA&&!a.pointA&&(a.pointA={x:0,y:0}),a.bodyB&&!a.pointB&&(a.pointB={x:0,y:0});var i=a.bodyA?l.add(a.bodyA.position,a.pointA):a.pointA,n=a.bodyB?l.add(a.bodyB.position,a.pointB):a.pointB,c=l.magnitude(l.sub(i,n));a.length=typeof a.length<"u"?a.length:c,a.id=a.id||d.nextId(),a.label=a.label||"Constraint",a.type="constraint",a.stiffness=a.stiffness||(a.length>0?1:.7),a.damping=a.damping||0,a.angularStiffness=a.angularStiffness||0,a.angleA=a.bodyA?a.bodyA.angle:a.angleA,a.angleB=a.bodyB?a.bodyB.angle:a.angleB,a.plugin={};var y={visible:!0,lineWidth:2,strokeStyle:"#ffffff",type:"line",anchors:!0};return a.length===0&&a.stiffness>.1?(y.type="pin",y.anchors=!1):a.stiffness<.9&&(y.type="spring"),a.render=d.extend(y,a.render),a},e.preSolveAll=function(r){for(var a=0;a<r.length;a+=1){var i=r[a],n=i.constraintImpulse;i.isStatic||n.x===0&&n.y===0&&n.angle===0||(i.position.x+=n.x,i.position.y+=n.y,i.angle+=n.angle)}},e.solveAll=function(r,a){for(var i=d.clamp(a/d._baseDelta,0,1),n=0;n<r.length;n+=1){var c=r[n],y=!c.bodyA||c.bodyA&&c.bodyA.isStatic,C=!c.bodyB||c.bodyB&&c.bodyB.isStatic;(y||C)&&e.solve(r[n],i)}for(n=0;n<r.length;n+=1)c=r[n],y=!c.bodyA||c.bodyA&&c.bodyA.isStatic,C=!c.bodyB||c.bodyB&&c.bodyB.isStatic,!y&&!C&&e.solve(r[n],i)},e.solve=function(r,a){var i=r.bodyA,n=r.bodyB,c=r.pointA,y=r.pointB;if(!(!i&&!n)){i&&!i.isStatic&&(l.rotate(c,i.angle-r.angleA,c),r.angleA=i.angle),n&&!n.isStatic&&(l.rotate(y,n.angle-r.angleB,y),r.angleB=n.angle);var C=c,M=y;if(i&&(C=l.add(i.position,c)),n&&(M=l.add(n.position,y)),!(!C||!M)){var S=l.sub(C,M),u=l.magnitude(S);u<e._minLength&&(u=e._minLength);var v=(u-r.length)/u,g=r.stiffness>=1||r.length===0,m=g?r.stiffness*a:r.stiffness*a*a,p=r.damping*a,x=l.mult(S,v*m),b=(i?i.inverseMass:0)+(n?n.inverseMass:0),A=(i?i.inverseInertia:0)+(n?n.inverseInertia:0),D=b+A,E,P,k,T,J;if(p>0){var G=l.create();k=l.div(S,u),J=l.sub(n&&l.sub(n.position,n.positionPrev)||G,i&&l.sub(i.position,i.positionPrev)||G),T=l.dot(k,J)}i&&!i.isStatic&&(P=i.inverseMass/b,i.constraintImpulse.x-=x.x*P,i.constraintImpulse.y-=x.y*P,i.position.x-=x.x*P,i.position.y-=x.y*P,p>0&&(i.positionPrev.x-=p*k.x*T*P,i.positionPrev.y-=p*k.y*T*P),E=l.cross(c,x)/D*e._torqueDampen*i.inverseInertia*(1-r.angularStiffness),i.constraintImpulse.angle-=E,i.angle-=E),n&&!n.isStatic&&(P=n.inverseMass/b,n.constraintImpulse.x+=x.x*P,n.constraintImpulse.y+=x.y*P,n.position.x+=x.x*P,n.position.y+=x.y*P,p>0&&(n.positionPrev.x+=p*k.x*T*P,n.positionPrev.y+=p*k.y*T*P),E=l.cross(y,x)/D*e._torqueDampen*n.inverseInertia*(1-r.angularStiffness),n.constraintImpulse.angle+=E,n.angle+=E)}}},e.postSolveAll=function(r){for(var a=0;a<r.length;a++){var i=r[a],n=i.constraintImpulse;if(!(i.isStatic||n.x===0&&n.y===0&&n.angle===0)){t.set(i,!1);for(var c=0;c<i.parts.length;c++){var y=i.parts[c];o.translate(y.vertices,n),c>0&&(y.position.x+=n.x,y.position.y+=n.y),n.angle!==0&&(o.rotate(y.vertices,n.angle,i.position),s.rotate(y.axes,n.angle),c>0&&l.rotateAbout(y.position,n.angle,i.position,y.position)),f.update(y.bounds,y.vertices,i.velocity)}n.angle*=e._warming,n.x*=e._warming,n.y*=e._warming}}},e.pointAWorld=function(r){return{x:(r.bodyA?r.bodyA.position.x:0)+(r.pointA?r.pointA.x:0),y:(r.bodyA?r.bodyA.position.y:0)+(r.pointA?r.pointA.y:0)}},e.pointBWorld=function(r){return{x:(r.bodyB?r.bodyB.position.x:0)+(r.pointB?r.pointB.x:0),y:(r.bodyB?r.bodyB.position.y:0)+(r.pointB?r.pointB.y:0)}}})()},function(w,L,h){var e={};w.exports=e;var o=h(2),l=h(0);(function(){e.fromVertices=function(t){for(var f={},s=0;s<t.length;s++){var d=(s+1)%t.length,r=o.normalise({x:t[d].y-t[s].y,y:t[s].x-t[d].x}),a=r.y===0?1/0:r.x/r.y;a=a.toFixed(3).toString(),f[a]=r}return l.values(f)},e.rotate=function(t,f){if(f!==0)for(var s=Math.cos(f),d=Math.sin(f),r=0;r<t.length;r++){var a=t[r],i;i=a.x*s-a.y*d,a.y=a.x*d+a.y*s,a.x=i}}})()},function(w,L,h){var e={};w.exports=e;var o=h(3),l=h(0),t=h(4),f=h(1),s=h(2);(function(){e.rectangle=function(d,r,a,i,n){n=n||{};var c={label:"Rectangle Body",position:{x:d,y:r},vertices:o.fromPath("L 0 0 L "+a+" 0 L "+a+" "+i+" L 0 "+i)};if(n.chamfer){var y=n.chamfer;c.vertices=o.chamfer(c.vertices,y.radius,y.quality,y.qualityMin,y.qualityMax),delete n.chamfer}return t.create(l.extend({},c,n))},e.trapezoid=function(d,r,a,i,n,c){c=c||{},n*=.5;var y=(1-n*2)*a,C=a*n,M=C+y,S=M+C,u;n<.5?u="L 0 0 L "+C+" "+-i+" L "+M+" "+-i+" L "+S+" 0":u="L 0 0 L "+M+" "+-i+" L "+S+" 0";var v={label:"Trapezoid Body",position:{x:d,y:r},vertices:o.fromPath(u)};if(c.chamfer){var g=c.chamfer;v.vertices=o.chamfer(v.vertices,g.radius,g.quality,g.qualityMin,g.qualityMax),delete c.chamfer}return t.create(l.extend({},v,c))},e.circle=function(d,r,a,i,n){i=i||{};var c={label:"Circle Body",circleRadius:a};n=n||25;var y=Math.ceil(Math.max(10,Math.min(n,a)));return y%2===1&&(y+=1),e.polygon(d,r,y,a,l.extend({},c,i))},e.polygon=function(d,r,a,i,n){if(n=n||{},a<3)return e.circle(d,r,i,n);for(var c=2*Math.PI/a,y="",C=c*.5,M=0;M<a;M+=1){var S=C+M*c,u=Math.cos(S)*i,v=Math.sin(S)*i;y+="L "+u.toFixed(3)+" "+v.toFixed(3)+" "}var g={label:"Polygon Body",position:{x:d,y:r},vertices:o.fromPath(y)};if(n.chamfer){var m=n.chamfer;g.vertices=o.chamfer(g.vertices,m.radius,m.quality,m.qualityMin,m.qualityMax),delete n.chamfer}return t.create(l.extend({},g,n))},e.fromVertices=function(d,r,a,i,n,c,y,C){var M=l.getDecomp(),S,u,v,g,m,p,x,b,A,D,E;for(S=!!(M&&M.quickDecomp),i=i||{},v=[],n=typeof n<"u"?n:!1,c=typeof c<"u"?c:.01,y=typeof y<"u"?y:10,C=typeof C<"u"?C:.01,l.isArray(a[0])||(a=[a]),D=0;D<a.length;D+=1)if(p=a[D],g=o.isConvex(p),m=!g,m&&!S&&l.warnOnce("Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices."),g||!S)g?p=o.clockwiseSort(p):p=o.hull(p),v.push({position:{x:d,y:r},vertices:p});else{var P=p.map(function(H){return[H.x,H.y]});M.makeCCW(P),c!==!1&&M.removeCollinearPoints(P,c),C!==!1&&M.removeDuplicatePoints&&M.removeDuplicatePoints(P,C);var k=M.quickDecomp(P);for(x=0;x<k.length;x++){var T=k[x],J=T.map(function(H){return{x:H[0],y:H[1]}});y>0&&o.area(J)<y||v.push({position:o.centre(J),vertices:J})}}for(x=0;x<v.length;x++)v[x]=t.create(l.extend(v[x],i));if(n){var G=5;for(x=0;x<v.length;x++){var I=v[x];for(b=x+1;b<v.length;b++){var z=v[b];if(f.overlaps(I.bounds,z.bounds)){var K=I.vertices,O=z.vertices;for(A=0;A<I.vertices.length;A++)for(E=0;E<z.vertices.length;E++){var N=s.magnitudeSquared(s.sub(K[(A+1)%K.length],O[E])),Q=s.magnitudeSquared(s.sub(K[A],O[(E+1)%O.length]));N<G&&Q<G&&(K[A].isInternal=!0,O[E].isInternal=!0)}}}}}return v.length>1?(u=t.create(l.extend({parts:v.slice(0)},i)),t.setPosition(u,{x:d,y:r}),u):v[0]}})()},function(w,L,h){var e={};w.exports=e;var o=h(0),l=h(8);(function(){e.create=function(t){var f={bodies:[],pairs:null};return o.extend(f,t)},e.setBodies=function(t,f){t.bodies=f.slice(0)},e.clear=function(t){t.bodies=[]},e.collisions=function(t){var f=[],s=t.pairs,d=t.bodies,r=d.length,a=e.canCollide,i=l.collides,n,c;for(d.sort(e._compareBoundsX),n=0;n<r;n++){var y=d[n],C=y.bounds,M=y.bounds.max.x,S=y.bounds.max.y,u=y.bounds.min.y,v=y.isStatic||y.isSleeping,g=y.parts.length,m=g===1;for(c=n+1;c<r;c++){var p=d[c],x=p.bounds;if(x.min.x>M)break;if(!(S<x.min.y||u>x.max.y)&&!(v&&(p.isStatic||p.isSleeping))&&a(y.collisionFilter,p.collisionFilter)){var b=p.parts.length;if(m&&b===1){var A=i(y,p,s);A&&f.push(A)}else for(var D=g>1?1:0,E=b>1?1:0,P=D;P<g;P++)for(var k=y.parts[P],C=k.bounds,T=E;T<b;T++){var J=p.parts[T],x=J.bounds;if(!(C.min.x>x.max.x||C.max.x<x.min.x||C.max.y<x.min.y||C.min.y>x.max.y)){var A=i(k,J,s);A&&f.push(A)}}}}}return f},e.canCollide=function(t,f){return t.group===f.group&&t.group!==0?t.group>0:(t.mask&f.category)!==0&&(f.mask&t.category)!==0},e._compareBoundsX=function(t,f){return t.bounds.min.x-f.bounds.min.x}})()},function(w,L,h){var e={};w.exports=e;var o=h(0);(function(){e.create=function(l){var t={};return l||o.log("Mouse.create: element was undefined, defaulting to document.body","warn"),t.element=l||document.body,t.absolute={x:0,y:0},t.position={x:0,y:0},t.mousedownPosition={x:0,y:0},t.mouseupPosition={x:0,y:0},t.offset={x:0,y:0},t.scale={x:1,y:1},t.wheelDelta=0,t.button=-1,t.pixelRatio=parseInt(t.element.getAttribute("data-pixel-ratio"),10)||1,t.sourceEvents={mousemove:null,mousedown:null,mouseup:null,mousewheel:null},t.mousemove=function(f){var s=e._getRelativeMousePosition(f,t.element,t.pixelRatio),d=f.changedTouches;d&&(t.button=0,f.preventDefault()),t.absolute.x=s.x,t.absolute.y=s.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.sourceEvents.mousemove=f},t.mousedown=function(f){var s=e._getRelativeMousePosition(f,t.element,t.pixelRatio),d=f.changedTouches;d?(t.button=0,f.preventDefault()):t.button=f.button,t.absolute.x=s.x,t.absolute.y=s.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mousedownPosition.x=t.position.x,t.mousedownPosition.y=t.position.y,t.sourceEvents.mousedown=f},t.mouseup=function(f){var s=e._getRelativeMousePosition(f,t.element,t.pixelRatio),d=f.changedTouches;d&&f.preventDefault(),t.button=-1,t.absolute.x=s.x,t.absolute.y=s.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mouseupPosition.x=t.position.x,t.mouseupPosition.y=t.position.y,t.sourceEvents.mouseup=f},t.mousewheel=function(f){t.wheelDelta=Math.max(-1,Math.min(1,f.wheelDelta||-f.detail)),f.preventDefault()},e.setElement(t,t.element),t},e.setElement=function(l,t){l.element=t,t.addEventListener("mousemove",l.mousemove),t.addEventListener("mousedown",l.mousedown),t.addEventListener("mouseup",l.mouseup),t.addEventListener("mousewheel",l.mousewheel),t.addEventListener("DOMMouseScroll",l.mousewheel),t.addEventListener("touchmove",l.mousemove),t.addEventListener("touchstart",l.mousedown),t.addEventListener("touchend",l.mouseup)},e.clearSourceEvents=function(l){l.sourceEvents.mousemove=null,l.sourceEvents.mousedown=null,l.sourceEvents.mouseup=null,l.sourceEvents.mousewheel=null,l.wheelDelta=0},e.setOffset=function(l,t){l.offset.x=t.x,l.offset.y=t.y,l.position.x=l.absolute.x*l.scale.x+l.offset.x,l.position.y=l.absolute.y*l.scale.y+l.offset.y},e.setScale=function(l,t){l.scale.x=t.x,l.scale.y=t.y,l.position.x=l.absolute.x*l.scale.x+l.offset.x,l.position.y=l.absolute.y*l.scale.y+l.offset.y},e._getRelativeMousePosition=function(l,t,f){var s=t.getBoundingClientRect(),d=document.documentElement||document.body.parentNode||document.body,r=window.pageXOffset!==void 0?window.pageXOffset:d.scrollLeft,a=window.pageYOffset!==void 0?window.pageYOffset:d.scrollTop,i=l.changedTouches,n,c;return i?(n=i[0].pageX-s.left-r,c=i[0].pageY-s.top-a):(n=l.pageX-s.left-r,c=l.pageY-s.top-a),{x:n/(t.clientWidth/(t.width||t.clientWidth)*f),y:c/(t.clientHeight/(t.height||t.clientHeight)*f)}}})()},function(w,L,h){var e={};w.exports=e;var o=h(0);(function(){e._registry={},e.register=function(l){if(e.isPlugin(l)||o.warn("Plugin.register:",e.toString(l),"does not implement all required fields."),l.name in e._registry){var t=e._registry[l.name],f=e.versionParse(l.version).number,s=e.versionParse(t.version).number;f>s?(o.warn("Plugin.register:",e.toString(t),"was upgraded to",e.toString(l)),e._registry[l.name]=l):f<s?o.warn("Plugin.register:",e.toString(t),"can not be downgraded to",e.toString(l)):l!==t&&o.warn("Plugin.register:",e.toString(l),"is already registered to different plugin object")}else e._registry[l.name]=l;return l},e.resolve=function(l){return e._registry[e.dependencyParse(l).name]},e.toString=function(l){return typeof l=="string"?l:(l.name||"anonymous")+"@"+(l.version||l.range||"0.0.0")},e.isPlugin=function(l){return l&&l.name&&l.version&&l.install},e.isUsed=function(l,t){return l.used.indexOf(t)>-1},e.isFor=function(l,t){var f=l.for&&e.dependencyParse(l.for);return!l.for||t.name===f.name&&e.versionSatisfies(t.version,f.range)},e.use=function(l,t){if(l.uses=(l.uses||[]).concat(t||[]),l.uses.length===0){o.warn("Plugin.use:",e.toString(l),"does not specify any dependencies to install.");return}for(var f=e.dependencies(l),s=o.topologicalSort(f),d=[],r=0;r<s.length;r+=1)if(s[r]!==l.name){var a=e.resolve(s[r]);if(!a){d.push("❌ "+s[r]);continue}e.isUsed(l,a.name)||(e.isFor(a,l)||(o.warn("Plugin.use:",e.toString(a),"is for",a.for,"but installed on",e.toString(l)+"."),a._warned=!0),a.install?a.install(l):(o.warn("Plugin.use:",e.toString(a),"does not specify an install function."),a._warned=!0),a._warned?(d.push("🔶 "+e.toString(a)),delete a._warned):d.push("✅ "+e.toString(a)),l.used.push(a.name))}d.length>0&&o.info(d.join("  "))},e.dependencies=function(l,t){var f=e.dependencyParse(l),s=f.name;if(t=t||{},!(s in t)){l=e.resolve(l)||l,t[s]=o.map(l.uses||[],function(r){e.isPlugin(r)&&e.register(r);var a=e.dependencyParse(r),i=e.resolve(r);return i&&!e.versionSatisfies(i.version,a.range)?(o.warn("Plugin.dependencies:",e.toString(i),"does not satisfy",e.toString(a),"used by",e.toString(f)+"."),i._warned=!0,l._warned=!0):i||(o.warn("Plugin.dependencies:",e.toString(r),"used by",e.toString(f),"could not be resolved."),l._warned=!0),a.name});for(var d=0;d<t[s].length;d+=1)e.dependencies(t[s][d],t);return t}},e.dependencyParse=function(l){if(o.isString(l)){var t=/^[\w-]+(@(\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-+]+)?))?$/;return t.test(l)||o.warn("Plugin.dependencyParse:",l,"is not a valid dependency string."),{name:l.split("@")[0],range:l.split("@")[1]||"*"}}return{name:l.name,range:l.range||l.version}},e.versionParse=function(l){var t=/^(\*)|(\^|~|>=|>)?\s*((\d+)\.(\d+)\.(\d+))(-[0-9A-Za-z-+]+)?$/;t.test(l)||o.warn("Plugin.versionParse:",l,"is not a valid version or range.");var f=t.exec(l),s=Number(f[4]),d=Number(f[5]),r=Number(f[6]);return{isRange:!!(f[1]||f[2]),version:f[3],range:l,operator:f[1]||f[2]||"",major:s,minor:d,patch:r,parts:[s,d,r],prerelease:f[7],number:s*1e8+d*1e4+r}},e.versionSatisfies=function(l,t){t=t||"*";var f=e.versionParse(t),s=e.versionParse(l);if(f.isRange){if(f.operator==="*"||l==="*")return!0;if(f.operator===">")return s.number>f.number;if(f.operator===">=")return s.number>=f.number;if(f.operator==="~")return s.major===f.major&&s.minor===f.minor&&s.patch>=f.patch;if(f.operator==="^")return f.major>0?s.major===f.major&&s.number>=f.number:f.minor>0?s.minor===f.minor&&s.patch>=f.patch:s.patch===f.patch}return l===t||l==="*"}})()},function(w,L){var h={};w.exports=h,function(){h.create=function(e){return{vertex:e,normalImpulse:0,tangentImpulse:0}}}()},function(w,L,h){var e={};w.exports=e;var o=h(7),l=h(18),t=h(13),f=h(19),s=h(5),d=h(6),r=h(10),a=h(0),i=h(4);(function(){e.create=function(n){n=n||{};var c={positionIterations:6,velocityIterations:4,constraintIterations:2,enableSleeping:!1,events:[],plugin:{},gravity:{x:0,y:1,scale:.001},timing:{timestamp:0,timeScale:1,lastDelta:0,lastElapsed:0}},y=a.extend(c,n);return y.world=n.world||d.create({label:"World"}),y.pairs=n.pairs||f.create(),y.detector=n.detector||t.create(),y.grid={buckets:[]},y.world.gravity=y.gravity,y.broadphase=y.grid,y.metrics={},y},e.update=function(n,c){var y=a.now(),C=n.world,M=n.detector,S=n.pairs,u=n.timing,v=u.timestamp,g;c=typeof c<"u"?c:a._baseDelta,c*=u.timeScale,u.timestamp+=c,u.lastDelta=c;var m={timestamp:u.timestamp,delta:c};s.trigger(n,"beforeUpdate",m);var p=d.allBodies(C),x=d.allConstraints(C);for(C.isModified&&(t.setBodies(M,p),d.setModified(C,!1,!1,!0)),n.enableSleeping&&o.update(p,c),e._bodiesApplyGravity(p,n.gravity),c>0&&e._bodiesUpdate(p,c),r.preSolveAll(p),g=0;g<n.constraintIterations;g++)r.solveAll(x,c);r.postSolveAll(p),M.pairs=n.pairs;var b=t.collisions(M);f.update(S,b,v),n.enableSleeping&&o.afterCollisions(S.list),S.collisionStart.length>0&&s.trigger(n,"collisionStart",{pairs:S.collisionStart});var A=a.clamp(20/n.positionIterations,0,1);for(l.preSolvePosition(S.list),g=0;g<n.positionIterations;g++)l.solvePosition(S.list,c,A);for(l.postSolvePosition(p),r.preSolveAll(p),g=0;g<n.constraintIterations;g++)r.solveAll(x,c);for(r.postSolveAll(p),l.preSolveVelocity(S.list),g=0;g<n.velocityIterations;g++)l.solveVelocity(S.list,c);return e._bodiesUpdateVelocities(p),S.collisionActive.length>0&&s.trigger(n,"collisionActive",{pairs:S.collisionActive}),S.collisionEnd.length>0&&s.trigger(n,"collisionEnd",{pairs:S.collisionEnd}),e._bodiesClearForces(p),s.trigger(n,"afterUpdate",m),n.timing.lastElapsed=a.now()-y,n},e.merge=function(n,c){if(a.extend(n,c),c.world){n.world=c.world,e.clear(n);for(var y=d.allBodies(n.world),C=0;C<y.length;C++){var M=y[C];o.set(M,!1),M.id=a.nextId()}}},e.clear=function(n){f.clear(n.pairs),t.clear(n.detector)},e._bodiesClearForces=function(n){for(var c=n.length,y=0;y<c;y++){var C=n[y];C.force.x=0,C.force.y=0,C.torque=0}},e._bodiesApplyGravity=function(n,c){var y=typeof c.scale<"u"?c.scale:.001,C=n.length;if(!(c.x===0&&c.y===0||y===0))for(var M=0;M<C;M++){var S=n[M];S.isStatic||S.isSleeping||(S.force.y+=S.mass*c.y*y,S.force.x+=S.mass*c.x*y)}},e._bodiesUpdate=function(n,c){for(var y=n.length,C=0;C<y;C++){var M=n[C];M.isStatic||M.isSleeping||i.update(M,c)}},e._bodiesUpdateVelocities=function(n){for(var c=n.length,y=0;y<c;y++)i.updateVelocities(n[y])}})()},function(w,L,h){var e={};w.exports=e;var o=h(3),l=h(0),t=h(1);(function(){e._restingThresh=2,e._restingThreshTangent=Math.sqrt(6),e._positionDampen=.9,e._positionWarming=.8,e._frictionNormalMultiplier=5,e._frictionMaxStatic=Number.MAX_VALUE,e.preSolvePosition=function(f){var s,d,r,a=f.length;for(s=0;s<a;s++)d=f[s],d.isActive&&(r=d.activeContacts.length,d.collision.parentA.totalContacts+=r,d.collision.parentB.totalContacts+=r)},e.solvePosition=function(f,s,d){var r,a,i,n,c,y,C,M,S=e._positionDampen*(d||1),u=l.clamp(s/l._baseDelta,0,1),v=f.length;for(r=0;r<v;r++)a=f[r],!(!a.isActive||a.isSensor)&&(i=a.collision,n=i.parentA,c=i.parentB,y=i.normal,a.separation=y.x*(c.positionImpulse.x+i.penetration.x-n.positionImpulse.x)+y.y*(c.positionImpulse.y+i.penetration.y-n.positionImpulse.y));for(r=0;r<v;r++)a=f[r],!(!a.isActive||a.isSensor)&&(i=a.collision,n=i.parentA,c=i.parentB,y=i.normal,M=a.separation-a.slop*u,(n.isStatic||c.isStatic)&&(M*=2),n.isStatic||n.isSleeping||(C=S/n.totalContacts,n.positionImpulse.x+=y.x*M*C,n.positionImpulse.y+=y.y*M*C),c.isStatic||c.isSleeping||(C=S/c.totalContacts,c.positionImpulse.x-=y.x*M*C,c.positionImpulse.y-=y.y*M*C))},e.postSolvePosition=function(f){for(var s=e._positionWarming,d=f.length,r=o.translate,a=t.update,i=0;i<d;i++){var n=f[i],c=n.positionImpulse,y=c.x,C=c.y,M=n.velocity;if(n.totalContacts=0,y!==0||C!==0){for(var S=0;S<n.parts.length;S++){var u=n.parts[S];r(u.vertices,c),a(u.bounds,u.vertices,M),u.position.x+=y,u.position.y+=C}n.positionPrev.x+=y,n.positionPrev.y+=C,y*M.x+C*M.y<0?(c.x=0,c.y=0):(c.x*=s,c.y*=s)}}},e.preSolveVelocity=function(f){var s=f.length,d,r;for(d=0;d<s;d++){var a=f[d];if(!(!a.isActive||a.isSensor)){var i=a.activeContacts,n=i.length,c=a.collision,y=c.parentA,C=c.parentB,M=c.normal,S=c.tangent;for(r=0;r<n;r++){var u=i[r],v=u.vertex,g=u.normalImpulse,m=u.tangentImpulse;if(g!==0||m!==0){var p=M.x*g+S.x*m,x=M.y*g+S.y*m;y.isStatic||y.isSleeping||(y.positionPrev.x+=p*y.inverseMass,y.positionPrev.y+=x*y.inverseMass,y.anglePrev+=y.inverseInertia*((v.x-y.position.x)*x-(v.y-y.position.y)*p)),C.isStatic||C.isSleeping||(C.positionPrev.x-=p*C.inverseMass,C.positionPrev.y-=x*C.inverseMass,C.anglePrev-=C.inverseInertia*((v.x-C.position.x)*x-(v.y-C.position.y)*p))}}}}},e.solveVelocity=function(f,s){var d=s/l._baseDelta,r=d*d,a=r*d,i=-e._restingThresh*d,n=e._restingThreshTangent,c=e._frictionNormalMultiplier*d,y=e._frictionMaxStatic,C=f.length,M,S,u,v;for(u=0;u<C;u++){var g=f[u];if(!(!g.isActive||g.isSensor)){var m=g.collision,p=m.parentA,x=m.parentB,b=p.velocity,A=x.velocity,D=m.normal.x,E=m.normal.y,P=m.tangent.x,k=m.tangent.y,T=g.activeContacts,J=T.length,G=1/J,I=p.inverseMass+x.inverseMass,z=g.friction*g.frictionStatic*c;for(b.x=p.position.x-p.positionPrev.x,b.y=p.position.y-p.positionPrev.y,A.x=x.position.x-x.positionPrev.x,A.y=x.position.y-x.positionPrev.y,p.angularVelocity=p.angle-p.anglePrev,x.angularVelocity=x.angle-x.anglePrev,v=0;v<J;v++){var K=T[v],O=K.vertex,N=O.x-p.position.x,Q=O.y-p.position.y,H=O.x-x.position.x,Y=O.y-x.position.y,q=b.x-Q*p.angularVelocity,Ie=b.y+N*p.angularVelocity,Ve=A.x-Y*x.angularVelocity,Ne=A.y+H*x.angularVelocity,Me=q-Ve,Se=Ie-Ne,he=D*Me+E*Se,X=P*Me+k*Se,Ae=g.separation+he,ye=Math.min(Ae,1);ye=Ae<0?0:ye;var be=ye*z;X<-be||X>be?(S=X>0?X:-X,M=g.friction*(X>0?1:-1)*a,M<-S?M=-S:M>S&&(M=S)):(M=X,S=y);var we=N*E-Q*D,Le=H*E-Y*D,De=G/(I+p.inverseInertia*we*we+x.inverseInertia*Le*Le),le=(1+g.restitution)*he*De;if(M*=De,he<i)K.normalImpulse=0;else{var He=K.normalImpulse;K.normalImpulse+=le,K.normalImpulse>0&&(K.normalImpulse=0),le=K.normalImpulse-He}if(X<-n||X>n)K.tangentImpulse=0;else{var Oe=K.tangentImpulse;K.tangentImpulse+=M,K.tangentImpulse<-S&&(K.tangentImpulse=-S),K.tangentImpulse>S&&(K.tangentImpulse=S),M=K.tangentImpulse-Oe}var oe=D*le+P*M,se=E*le+k*M;p.isStatic||p.isSleeping||(p.positionPrev.x+=oe*p.inverseMass,p.positionPrev.y+=se*p.inverseMass,p.anglePrev+=(N*se-Q*oe)*p.inverseInertia),x.isStatic||x.isSleeping||(x.positionPrev.x-=oe*x.inverseMass,x.positionPrev.y-=se*x.inverseMass,x.anglePrev-=(H*se-Y*oe)*x.inverseInertia)}}}}})()},function(w,L,h){var e={};w.exports=e;var o=h(9),l=h(0);(function(){e.create=function(t){return l.extend({table:{},list:[],collisionStart:[],collisionActive:[],collisionEnd:[]},t)},e.update=function(t,f,s){var d=t.list,r=d.length,a=t.table,i=f.length,n=t.collisionStart,c=t.collisionEnd,y=t.collisionActive,C,M,S,u;for(n.length=0,c.length=0,y.length=0,u=0;u<r;u++)d[u].confirmedActive=!1;for(u=0;u<i;u++)C=f[u],S=C.pair,S?(S.isActive?y.push(S):n.push(S),o.update(S,C,s),S.confirmedActive=!0):(S=o.create(C,s),a[S.id]=S,n.push(S),d.push(S));var v=[];for(r=d.length,u=0;u<r;u++)S=d[u],S.confirmedActive||(o.setActive(S,!1,s),c.push(S),!S.collision.bodyA.isSleeping&&!S.collision.bodyB.isSleeping&&v.push(u));for(u=0;u<v.length;u++)M=v[u]-u,S=d[M],d.splice(M,1),delete a[S.id]},e.clear=function(t){return t.table={},t.list.length=0,t.collisionStart.length=0,t.collisionActive.length=0,t.collisionEnd.length=0,t}})()},function(w,L,h){var e=w.exports=h(21);e.Axes=h(11),e.Bodies=h(12),e.Body=h(4),e.Bounds=h(1),e.Collision=h(8),e.Common=h(0),e.Composite=h(6),e.Composites=h(22),e.Constraint=h(10),e.Contact=h(16),e.Detector=h(13),e.Engine=h(17),e.Events=h(5),e.Grid=h(23),e.Mouse=h(14),e.MouseConstraint=h(24),e.Pair=h(9),e.Pairs=h(19),e.Plugin=h(15),e.Query=h(25),e.Render=h(26),e.Resolver=h(18),e.Runner=h(27),e.SAT=h(28),e.Sleeping=h(7),e.Svg=h(29),e.Vector=h(2),e.Vertices=h(3),e.World=h(30),e.Engine.run=e.Runner.run,e.Common.deprecated(e.Engine,"run","Engine.run ➤ use Matter.Runner.run(engine) instead")},function(w,L,h){var e={};w.exports=e;var o=h(15),l=h(0);(function(){e.name="matter-js",e.version="0.19.0",e.uses=[],e.used=[],e.use=function(){o.use(e,Array.prototype.slice.call(arguments))},e.before=function(t,f){return t=t.replace(/^Matter./,""),l.chainPathBefore(e,t,f)},e.after=function(t,f){return t=t.replace(/^Matter./,""),l.chainPathAfter(e,t,f)}})()},function(w,L,h){var e={};w.exports=e;var o=h(6),l=h(10),t=h(0),f=h(4),s=h(12),d=t.deprecated;(function(){e.stack=function(r,a,i,n,c,y,C){for(var M=o.create({label:"Stack"}),S=r,u=a,v,g=0,m=0;m<n;m++){for(var p=0,x=0;x<i;x++){var b=C(S,u,x,m,v,g);if(b){var A=b.bounds.max.y-b.bounds.min.y,D=b.bounds.max.x-b.bounds.min.x;A>p&&(p=A),f.translate(b,{x:D*.5,y:A*.5}),S=b.bounds.max.x+c,o.addBody(M,b),v=b,g+=1}else S+=c}u+=p+y,S=r}return M},e.chain=function(r,a,i,n,c,y){for(var C=r.bodies,M=1;M<C.length;M++){var S=C[M-1],u=C[M],v=S.bounds.max.y-S.bounds.min.y,g=S.bounds.max.x-S.bounds.min.x,m=u.bounds.max.y-u.bounds.min.y,p=u.bounds.max.x-u.bounds.min.x,x={bodyA:S,pointA:{x:g*a,y:v*i},bodyB:u,pointB:{x:p*n,y:m*c}},b=t.extend(x,y);o.addConstraint(r,l.create(b))}return r.label+=" Chain",r},e.mesh=function(r,a,i,n,c){var y=r.bodies,C,M,S,u,v;for(C=0;C<i;C++){for(M=1;M<a;M++)S=y[M-1+C*a],u=y[M+C*a],o.addConstraint(r,l.create(t.extend({bodyA:S,bodyB:u},c)));if(C>0)for(M=0;M<a;M++)S=y[M+(C-1)*a],u=y[M+C*a],o.addConstraint(r,l.create(t.extend({bodyA:S,bodyB:u},c))),n&&M>0&&(v=y[M-1+(C-1)*a],o.addConstraint(r,l.create(t.extend({bodyA:v,bodyB:u},c)))),n&&M<a-1&&(v=y[M+1+(C-1)*a],o.addConstraint(r,l.create(t.extend({bodyA:v,bodyB:u},c))))}return r.label+=" Mesh",r},e.pyramid=function(r,a,i,n,c,y,C){return e.stack(r,a,i,n,c,y,function(M,S,u,v,g,m){var p=Math.min(n,Math.ceil(i/2)),x=g?g.bounds.max.x-g.bounds.min.x:0;if(!(v>p)){v=p-v;var b=v,A=i-1-v;if(!(u<b||u>A)){m===1&&f.translate(g,{x:(u+(i%2===1?1:-1))*x,y:0});var D=g?u*x:0;return C(r+D+u*c,S,u,v,g,m)}}})},e.newtonsCradle=function(r,a,i,n,c){for(var y=o.create({label:"Newtons Cradle"}),C=0;C<i;C++){var M=1.9,S=s.circle(r+C*(n*M),a+c,n,{inertia:1/0,restitution:1,friction:0,frictionAir:1e-4,slop:1}),u=l.create({pointA:{x:r+C*(n*M),y:a},bodyB:S});o.addBody(y,S),o.addConstraint(y,u)}return y},d(e,"newtonsCradle","Composites.newtonsCradle ➤ moved to newtonsCradle example"),e.car=function(r,a,i,n,c){var y=f.nextGroup(!0),C=20,M=-i*.5+C,S=i*.5-C,u=0,v=o.create({label:"Car"}),g=s.rectangle(r,a,i,n,{collisionFilter:{group:y},chamfer:{radius:n*.5},density:2e-4}),m=s.circle(r+M,a+u,c,{collisionFilter:{group:y},friction:.8}),p=s.circle(r+S,a+u,c,{collisionFilter:{group:y},friction:.8}),x=l.create({bodyB:g,pointB:{x:M,y:u},bodyA:m,stiffness:1,length:0}),b=l.create({bodyB:g,pointB:{x:S,y:u},bodyA:p,stiffness:1,length:0});return o.addBody(v,g),o.addBody(v,m),o.addBody(v,p),o.addConstraint(v,x),o.addConstraint(v,b),v},d(e,"car","Composites.car ➤ moved to car example"),e.softBody=function(r,a,i,n,c,y,C,M,S,u){S=t.extend({inertia:1/0},S),u=t.extend({stiffness:.2,render:{type:"line",anchors:!1}},u);var v=e.stack(r,a,i,n,c,y,function(g,m){return s.circle(g,m,M,S)});return e.mesh(v,i,n,C,u),v.label="Soft Body",v},d(e,"softBody","Composites.softBody ➤ moved to softBody and cloth examples")})()},function(w,L,h){var e={};w.exports=e;var o=h(9),l=h(0),t=l.deprecated;(function(){e.create=function(f){var s={buckets:{},pairs:{},pairsList:[],bucketWidth:48,bucketHeight:48};return l.extend(s,f)},e.update=function(f,s,d,r){var a,i,n,c=d.world,y=f.buckets,C,M,S=!1;for(a=0;a<s.length;a++){var u=s[a];if(!(u.isSleeping&&!r)&&!(c.bounds&&(u.bounds.max.x<c.bounds.min.x||u.bounds.min.x>c.bounds.max.x||u.bounds.max.y<c.bounds.min.y||u.bounds.min.y>c.bounds.max.y))){var v=e._getRegion(f,u);if(!u.region||v.id!==u.region.id||r){(!u.region||r)&&(u.region=v);var g=e._regionUnion(v,u.region);for(i=g.startCol;i<=g.endCol;i++)for(n=g.startRow;n<=g.endRow;n++){M=e._getBucketId(i,n),C=y[M];var m=i>=v.startCol&&i<=v.endCol&&n>=v.startRow&&n<=v.endRow,p=i>=u.region.startCol&&i<=u.region.endCol&&n>=u.region.startRow&&n<=u.region.endRow;!m&&p&&p&&C&&e._bucketRemoveBody(f,C,u),(u.region===v||m&&!p||r)&&(C||(C=e._createBucket(y,M)),e._bucketAddBody(f,C,u))}u.region=v,S=!0}}}S&&(f.pairsList=e._createActivePairsList(f))},t(e,"update","Grid.update ➤ replaced by Matter.Detector"),e.clear=function(f){f.buckets={},f.pairs={},f.pairsList=[]},t(e,"clear","Grid.clear ➤ replaced by Matter.Detector"),e._regionUnion=function(f,s){var d=Math.min(f.startCol,s.startCol),r=Math.max(f.endCol,s.endCol),a=Math.min(f.startRow,s.startRow),i=Math.max(f.endRow,s.endRow);return e._createRegion(d,r,a,i)},e._getRegion=function(f,s){var d=s.bounds,r=Math.floor(d.min.x/f.bucketWidth),a=Math.floor(d.max.x/f.bucketWidth),i=Math.floor(d.min.y/f.bucketHeight),n=Math.floor(d.max.y/f.bucketHeight);return e._createRegion(r,a,i,n)},e._createRegion=function(f,s,d,r){return{id:f+","+s+","+d+","+r,startCol:f,endCol:s,startRow:d,endRow:r}},e._getBucketId=function(f,s){return"C"+f+"R"+s},e._createBucket=function(f,s){var d=f[s]=[];return d},e._bucketAddBody=function(f,s,d){var r=f.pairs,a=o.id,i=s.length,n;for(n=0;n<i;n++){var c=s[n];if(!(d.id===c.id||d.isStatic&&c.isStatic)){var y=a(d,c),C=r[y];C?C[2]+=1:r[y]=[d,c,1]}}s.push(d)},e._bucketRemoveBody=function(f,s,d){var r=f.pairs,a=o.id,i;s.splice(l.indexOf(s,d),1);var n=s.length;for(i=0;i<n;i++){var c=r[a(d,s[i])];c&&(c[2]-=1)}},e._createActivePairsList=function(f){var s,d=f.pairs,r=l.keys(d),a=r.length,i=[],n;for(n=0;n<a;n++)s=d[r[n]],s[2]>0?i.push(s):delete d[r[n]];return i}})()},function(w,L,h){var e={};w.exports=e;var o=h(3),l=h(7),t=h(14),f=h(5),s=h(13),d=h(10),r=h(6),a=h(0),i=h(1);(function(){e.create=function(n,c){var y=(n?n.mouse:null)||(c?c.mouse:null);y||(n&&n.render&&n.render.canvas?y=t.create(n.render.canvas):c&&c.element?y=t.create(c.element):(y=t.create(),a.warn("MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected")));var C=d.create({label:"Mouse Constraint",pointA:y.position,pointB:{x:0,y:0},length:.01,stiffness:.1,angularStiffness:1,render:{strokeStyle:"#90EE90",lineWidth:3}}),M={type:"mouseConstraint",mouse:y,element:null,body:null,constraint:C,collisionFilter:{category:1,mask:4294967295,group:0}},S=a.extend(M,c);return f.on(n,"beforeUpdate",function(){var u=r.allBodies(n.world);e.update(S,u),e._triggerEvents(S)}),S},e.update=function(n,c){var y=n.mouse,C=n.constraint,M=n.body;if(y.button===0){if(C.bodyB)l.set(C.bodyB,!1),C.pointA=y.position;else for(var S=0;S<c.length;S++)if(M=c[S],i.contains(M.bounds,y.position)&&s.canCollide(M.collisionFilter,n.collisionFilter))for(var u=M.parts.length>1?1:0;u<M.parts.length;u++){var v=M.parts[u];if(o.contains(v.vertices,y.position)){C.pointA=y.position,C.bodyB=n.body=M,C.pointB={x:y.position.x-M.position.x,y:y.position.y-M.position.y},C.angleB=M.angle,l.set(M,!1),f.trigger(n,"startdrag",{mouse:y,body:M});break}}}else C.bodyB=n.body=null,C.pointB=null,M&&f.trigger(n,"enddrag",{mouse:y,body:M})},e._triggerEvents=function(n){var c=n.mouse,y=c.sourceEvents;y.mousemove&&f.trigger(n,"mousemove",{mouse:c}),y.mousedown&&f.trigger(n,"mousedown",{mouse:c}),y.mouseup&&f.trigger(n,"mouseup",{mouse:c}),t.clearSourceEvents(c)}})()},function(w,L,h){var e={};w.exports=e;var o=h(2),l=h(8),t=h(1),f=h(12),s=h(3);(function(){e.collides=function(d,r){for(var a=[],i=r.length,n=d.bounds,c=l.collides,y=t.overlaps,C=0;C<i;C++){var M=r[C],S=M.parts.length,u=S===1?0:1;if(y(M.bounds,n))for(var v=u;v<S;v++){var g=M.parts[v];if(y(g.bounds,n)){var m=c(g,d);if(m){a.push(m);break}}}}return a},e.ray=function(d,r,a,i){i=i||1e-100;for(var n=o.angle(r,a),c=o.magnitude(o.sub(r,a)),y=(a.x+r.x)*.5,C=(a.y+r.y)*.5,M=f.rectangle(y,C,c,i,{angle:n}),S=e.collides(M,d),u=0;u<S.length;u+=1){var v=S[u];v.body=v.bodyB=v.bodyA}return S},e.region=function(d,r,a){for(var i=[],n=0;n<d.length;n++){var c=d[n],y=t.overlaps(c.bounds,r);(y&&!a||!y&&a)&&i.push(c)}return i},e.point=function(d,r){for(var a=[],i=0;i<d.length;i++){var n=d[i];if(t.contains(n.bounds,r))for(var c=n.parts.length===1?0:1;c<n.parts.length;c++){var y=n.parts[c];if(t.contains(y.bounds,r)&&s.contains(y.vertices,r)){a.push(n);break}}}return a}})()},function(w,L,h){var e={};w.exports=e;var o=h(4),l=h(0),t=h(6),f=h(1),s=h(5),d=h(2),r=h(14);(function(){var a,i;typeof window<"u"&&(a=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(u){window.setTimeout(function(){u(l.now())},1e3/60)},i=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),e._goodFps=30,e._goodDelta=1e3/60,e.create=function(u){var v={engine:null,element:null,canvas:null,mouse:null,frameRequestId:null,timing:{historySize:60,delta:0,deltaHistory:[],lastTime:0,lastTimestamp:0,lastElapsed:0,timestampElapsed:0,timestampElapsedHistory:[],engineDeltaHistory:[],engineElapsedHistory:[],elapsedHistory:[]},options:{width:800,height:600,pixelRatio:1,background:"#14151f",wireframeBackground:"#14151f",hasBounds:!!u.bounds,enabled:!0,wireframes:!0,showSleeping:!0,showDebug:!1,showStats:!1,showPerformance:!1,showBounds:!1,showVelocity:!1,showCollisions:!1,showSeparations:!1,showAxes:!1,showPositions:!1,showAngleIndicator:!1,showIds:!1,showVertexNumbers:!1,showConvexHulls:!1,showInternalEdges:!1,showMousePosition:!1}},g=l.extend(v,u);return g.canvas&&(g.canvas.width=g.options.width||g.canvas.width,g.canvas.height=g.options.height||g.canvas.height),g.mouse=u.mouse,g.engine=u.engine,g.canvas=g.canvas||y(g.options.width,g.options.height),g.context=g.canvas.getContext("2d"),g.textures={},g.bounds=g.bounds||{min:{x:0,y:0},max:{x:g.canvas.width,y:g.canvas.height}},g.controller=e,g.options.showBroadphase=!1,g.options.pixelRatio!==1&&e.setPixelRatio(g,g.options.pixelRatio),l.isElement(g.element)&&g.element.appendChild(g.canvas),g},e.run=function(u){(function v(g){u.frameRequestId=a(v),n(u,g),e.world(u,g),(u.options.showStats||u.options.showDebug)&&e.stats(u,u.context,g),(u.options.showPerformance||u.options.showDebug)&&e.performance(u,u.context,g)})()},e.stop=function(u){i(u.frameRequestId)},e.setPixelRatio=function(u,v){var g=u.options,m=u.canvas;v==="auto"&&(v=C(m)),g.pixelRatio=v,m.setAttribute("data-pixel-ratio",v),m.width=g.width*v,m.height=g.height*v,m.style.width=g.width+"px",m.style.height=g.height+"px"},e.lookAt=function(u,v,g,m){m=typeof m<"u"?m:!0,v=l.isArray(v)?v:[v],g=g||{x:0,y:0};for(var p={min:{x:1/0,y:1/0},max:{x:-1/0,y:-1/0}},x=0;x<v.length;x+=1){var b=v[x],A=b.bounds?b.bounds.min:b.min||b.position||b,D=b.bounds?b.bounds.max:b.max||b.position||b;A&&D&&(A.x<p.min.x&&(p.min.x=A.x),D.x>p.max.x&&(p.max.x=D.x),A.y<p.min.y&&(p.min.y=A.y),D.y>p.max.y&&(p.max.y=D.y))}var E=p.max.x-p.min.x+2*g.x,P=p.max.y-p.min.y+2*g.y,k=u.canvas.height,T=u.canvas.width,J=T/k,G=E/P,I=1,z=1;G>J?z=G/J:I=J/G,u.options.hasBounds=!0,u.bounds.min.x=p.min.x,u.bounds.max.x=p.min.x+E*I,u.bounds.min.y=p.min.y,u.bounds.max.y=p.min.y+P*z,m&&(u.bounds.min.x+=E*.5-E*I*.5,u.bounds.max.x+=E*.5-E*I*.5,u.bounds.min.y+=P*.5-P*z*.5,u.bounds.max.y+=P*.5-P*z*.5),u.bounds.min.x-=g.x,u.bounds.max.x-=g.x,u.bounds.min.y-=g.y,u.bounds.max.y-=g.y,u.mouse&&(r.setScale(u.mouse,{x:(u.bounds.max.x-u.bounds.min.x)/u.canvas.width,y:(u.bounds.max.y-u.bounds.min.y)/u.canvas.height}),r.setOffset(u.mouse,u.bounds.min))},e.startViewTransform=function(u){var v=u.bounds.max.x-u.bounds.min.x,g=u.bounds.max.y-u.bounds.min.y,m=v/u.options.width,p=g/u.options.height;u.context.setTransform(u.options.pixelRatio/m,0,0,u.options.pixelRatio/p,0,0),u.context.translate(-u.bounds.min.x,-u.bounds.min.y)},e.endViewTransform=function(u){u.context.setTransform(u.options.pixelRatio,0,0,u.options.pixelRatio,0,0)},e.world=function(u,v){var g=l.now(),m=u.engine,p=m.world,x=u.canvas,b=u.context,A=u.options,D=u.timing,E=t.allBodies(p),P=t.allConstraints(p),k=A.wireframes?A.wireframeBackground:A.background,T=[],J=[],G,I={timestamp:m.timing.timestamp};if(s.trigger(u,"beforeRender",I),u.currentBackground!==k&&S(u,k),b.globalCompositeOperation="source-in",b.fillStyle="transparent",b.fillRect(0,0,x.width,x.height),b.globalCompositeOperation="source-over",A.hasBounds){for(G=0;G<E.length;G++){var z=E[G];f.overlaps(z.bounds,u.bounds)&&T.push(z)}for(G=0;G<P.length;G++){var K=P[G],O=K.bodyA,N=K.bodyB,Q=K.pointA,H=K.pointB;O&&(Q=d.add(O.position,K.pointA)),N&&(H=d.add(N.position,K.pointB)),!(!Q||!H)&&(f.contains(u.bounds,Q)||f.contains(u.bounds,H))&&J.push(K)}e.startViewTransform(u),u.mouse&&(r.setScale(u.mouse,{x:(u.bounds.max.x-u.bounds.min.x)/u.options.width,y:(u.bounds.max.y-u.bounds.min.y)/u.options.height}),r.setOffset(u.mouse,u.bounds.min))}else J=P,T=E,u.options.pixelRatio!==1&&u.context.setTransform(u.options.pixelRatio,0,0,u.options.pixelRatio,0,0);!A.wireframes||m.enableSleeping&&A.showSleeping?e.bodies(u,T,b):(A.showConvexHulls&&e.bodyConvexHulls(u,T,b),e.bodyWireframes(u,T,b)),A.showBounds&&e.bodyBounds(u,T,b),(A.showAxes||A.showAngleIndicator)&&e.bodyAxes(u,T,b),A.showPositions&&e.bodyPositions(u,T,b),A.showVelocity&&e.bodyVelocity(u,T,b),A.showIds&&e.bodyIds(u,T,b),A.showSeparations&&e.separations(u,m.pairs.list,b),A.showCollisions&&e.collisions(u,m.pairs.list,b),A.showVertexNumbers&&e.vertexNumbers(u,T,b),A.showMousePosition&&e.mousePosition(u,u.mouse,b),e.constraints(J,b),A.hasBounds&&e.endViewTransform(u),s.trigger(u,"afterRender",I),D.lastElapsed=l.now()-g},e.stats=function(u,v,g){for(var m=u.engine,p=m.world,x=t.allBodies(p),b=0,A=55,D=44,E=0,P=0,k=0;k<x.length;k+=1)b+=x[k].parts.length;var T={Part:b,Body:x.length,Cons:t.allConstraints(p).length,Comp:t.allComposites(p).length,Pair:m.pairs.list.length};v.fillStyle="#0e0f19",v.fillRect(E,P,A*5.5,D),v.font="12px Arial",v.textBaseline="top",v.textAlign="right";for(var J in T){var G=T[J];v.fillStyle="#aaa",v.fillText(J,E+A,P+8),v.fillStyle="#eee",v.fillText(G,E+A,P+26),E+=A}},e.performance=function(u,v){var g=u.engine,m=u.timing,p=m.deltaHistory,x=m.elapsedHistory,b=m.timestampElapsedHistory,A=m.engineDeltaHistory,D=m.engineElapsedHistory,E=g.timing.lastDelta,P=c(p),k=c(x),T=c(A),J=c(D),G=c(b),I=G/P||0,z=1e3/P||0,K=4,O=12,N=60,Q=34,H=10,Y=69;v.fillStyle="#0e0f19",v.fillRect(0,50,O*4+N*5+22,Q),e.status(v,H,Y,N,K,p.length,Math.round(z)+" fps",z/e._goodFps,function(q){return p[q]/P-1}),e.status(v,H+O+N,Y,N,K,A.length,E.toFixed(2)+" dt",e._goodDelta/E,function(q){return A[q]/T-1}),e.status(v,H+(O+N)*2,Y,N,K,D.length,J.toFixed(2)+" ut",1-J/e._goodFps,function(q){return D[q]/J-1}),e.status(v,H+(O+N)*3,Y,N,K,x.length,k.toFixed(2)+" rt",1-k/e._goodFps,function(q){return x[q]/k-1}),e.status(v,H+(O+N)*4,Y,N,K,b.length,I.toFixed(2)+" x",I*I*I,function(q){return(b[q]/p[q]/I||0)-1})},e.status=function(u,v,g,m,p,x,b,A,D){u.strokeStyle="#888",u.fillStyle="#444",u.lineWidth=1,u.fillRect(v,g+7,m,1),u.beginPath(),u.moveTo(v,g+7-p*l.clamp(.4*D(0),-2,2));for(var E=0;E<m;E+=1)u.lineTo(v+E,g+7-(E<x?p*l.clamp(.4*D(E),-2,2):0));u.stroke(),u.fillStyle="hsl("+l.clamp(25+95*A,0,120)+",100%,60%)",u.fillRect(v,g-7,4,4),u.font="12px Arial",u.textBaseline="middle",u.textAlign="right",u.fillStyle="#eee",u.fillText(b,v+m,g-5)},e.constraints=function(u,v){for(var g=v,m=0;m<u.length;m++){var p=u[m];if(!(!p.render.visible||!p.pointA||!p.pointB)){var x=p.bodyA,b=p.bodyB,A,D;if(x?A=d.add(x.position,p.pointA):A=p.pointA,p.render.type==="pin")g.beginPath(),g.arc(A.x,A.y,3,0,2*Math.PI),g.closePath();else{if(b?D=d.add(b.position,p.pointB):D=p.pointB,g.beginPath(),g.moveTo(A.x,A.y),p.render.type==="spring")for(var E=d.sub(D,A),P=d.perp(d.normalise(E)),k=Math.ceil(l.clamp(p.length/5,12,20)),T,J=1;J<k;J+=1)T=J%2===0?1:-1,g.lineTo(A.x+E.x*(J/k)+P.x*T*4,A.y+E.y*(J/k)+P.y*T*4);g.lineTo(D.x,D.y)}p.render.lineWidth&&(g.lineWidth=p.render.lineWidth,g.strokeStyle=p.render.strokeStyle,g.stroke()),p.render.anchors&&(g.fillStyle=p.render.strokeStyle,g.beginPath(),g.arc(A.x,A.y,3,0,2*Math.PI),g.arc(D.x,D.y,3,0,2*Math.PI),g.closePath(),g.fill())}}},e.bodies=function(u,v,g){var m=g;u.engine;var p=u.options,x=p.showInternalEdges||!p.wireframes,b,A,D,E;for(D=0;D<v.length;D++)if(b=v[D],!!b.render.visible){for(E=b.parts.length>1?1:0;E<b.parts.length;E++)if(A=b.parts[E],!!A.render.visible){if(p.showSleeping&&b.isSleeping?m.globalAlpha=.5*A.render.opacity:A.render.opacity!==1&&(m.globalAlpha=A.render.opacity),A.render.sprite&&A.render.sprite.texture&&!p.wireframes){var P=A.render.sprite,k=M(u,P.texture);m.translate(A.position.x,A.position.y),m.rotate(A.angle),m.drawImage(k,k.width*-P.xOffset*P.xScale,k.height*-P.yOffset*P.yScale,k.width*P.xScale,k.height*P.yScale),m.rotate(-A.angle),m.translate(-A.position.x,-A.position.y)}else{if(A.circleRadius)m.beginPath(),m.arc(A.position.x,A.position.y,A.circleRadius,0,2*Math.PI);else{m.beginPath(),m.moveTo(A.vertices[0].x,A.vertices[0].y);for(var T=1;T<A.vertices.length;T++)!A.vertices[T-1].isInternal||x?m.lineTo(A.vertices[T].x,A.vertices[T].y):m.moveTo(A.vertices[T].x,A.vertices[T].y),A.vertices[T].isInternal&&!x&&m.moveTo(A.vertices[(T+1)%A.vertices.length].x,A.vertices[(T+1)%A.vertices.length].y);m.lineTo(A.vertices[0].x,A.vertices[0].y),m.closePath()}p.wireframes?(m.lineWidth=1,m.strokeStyle="#bbb",m.stroke()):(m.fillStyle=A.render.fillStyle,A.render.lineWidth&&(m.lineWidth=A.render.lineWidth,m.strokeStyle=A.render.strokeStyle,m.stroke()),m.fill())}m.globalAlpha=1}}},e.bodyWireframes=function(u,v,g){var m=g,p=u.options.showInternalEdges,x,b,A,D,E;for(m.beginPath(),A=0;A<v.length;A++)if(x=v[A],!!x.render.visible)for(E=x.parts.length>1?1:0;E<x.parts.length;E++){for(b=x.parts[E],m.moveTo(b.vertices[0].x,b.vertices[0].y),D=1;D<b.vertices.length;D++)!b.vertices[D-1].isInternal||p?m.lineTo(b.vertices[D].x,b.vertices[D].y):m.moveTo(b.vertices[D].x,b.vertices[D].y),b.vertices[D].isInternal&&!p&&m.moveTo(b.vertices[(D+1)%b.vertices.length].x,b.vertices[(D+1)%b.vertices.length].y);m.lineTo(b.vertices[0].x,b.vertices[0].y)}m.lineWidth=1,m.strokeStyle="#bbb",m.stroke()},e.bodyConvexHulls=function(u,v,g){var m=g,p,x,b;for(m.beginPath(),x=0;x<v.length;x++)if(p=v[x],!(!p.render.visible||p.parts.length===1)){for(m.moveTo(p.vertices[0].x,p.vertices[0].y),b=1;b<p.vertices.length;b++)m.lineTo(p.vertices[b].x,p.vertices[b].y);m.lineTo(p.vertices[0].x,p.vertices[0].y)}m.lineWidth=1,m.strokeStyle="rgba(255,255,255,0.2)",m.stroke()},e.vertexNumbers=function(u,v,g){var m=g,p,x,b;for(p=0;p<v.length;p++){var A=v[p].parts;for(b=A.length>1?1:0;b<A.length;b++){var D=A[b];for(x=0;x<D.vertices.length;x++)m.fillStyle="rgba(255,255,255,0.2)",m.fillText(p+"_"+x,D.position.x+(D.vertices[x].x-D.position.x)*.8,D.position.y+(D.vertices[x].y-D.position.y)*.8)}}},e.mousePosition=function(u,v,g){var m=g;m.fillStyle="rgba(255,255,255,0.8)",m.fillText(v.position.x+"  "+v.position.y,v.position.x+5,v.position.y-5)},e.bodyBounds=function(u,v,g){var m=g;u.engine;var p=u.options;m.beginPath();for(var x=0;x<v.length;x++){var b=v[x];if(b.render.visible)for(var A=v[x].parts,D=A.length>1?1:0;D<A.length;D++){var E=A[D];m.rect(E.bounds.min.x,E.bounds.min.y,E.bounds.max.x-E.bounds.min.x,E.bounds.max.y-E.bounds.min.y)}}p.wireframes?m.strokeStyle="rgba(255,255,255,0.08)":m.strokeStyle="rgba(0,0,0,0.1)",m.lineWidth=1,m.stroke()},e.bodyAxes=function(u,v,g){var m=g;u.engine;var p=u.options,x,b,A,D;for(m.beginPath(),b=0;b<v.length;b++){var E=v[b],P=E.parts;if(E.render.visible)if(p.showAxes)for(A=P.length>1?1:0;A<P.length;A++)for(x=P[A],D=0;D<x.axes.length;D++){var k=x.axes[D];m.moveTo(x.position.x,x.position.y),m.lineTo(x.position.x+k.x*20,x.position.y+k.y*20)}else for(A=P.length>1?1:0;A<P.length;A++)for(x=P[A],D=0;D<x.axes.length;D++)m.moveTo(x.position.x,x.position.y),m.lineTo((x.vertices[0].x+x.vertices[x.vertices.length-1].x)/2,(x.vertices[0].y+x.vertices[x.vertices.length-1].y)/2)}p.wireframes?(m.strokeStyle="indianred",m.lineWidth=1):(m.strokeStyle="rgba(255, 255, 255, 0.4)",m.globalCompositeOperation="overlay",m.lineWidth=2),m.stroke(),m.globalCompositeOperation="source-over"},e.bodyPositions=function(u,v,g){var m=g;u.engine;var p=u.options,x,b,A,D;for(m.beginPath(),A=0;A<v.length;A++)if(x=v[A],!!x.render.visible)for(D=0;D<x.parts.length;D++)b=x.parts[D],m.arc(b.position.x,b.position.y,3,0,2*Math.PI,!1),m.closePath();for(p.wireframes?m.fillStyle="indianred":m.fillStyle="rgba(0,0,0,0.5)",m.fill(),m.beginPath(),A=0;A<v.length;A++)x=v[A],x.render.visible&&(m.arc(x.positionPrev.x,x.positionPrev.y,2,0,2*Math.PI,!1),m.closePath());m.fillStyle="rgba(255,165,0,0.8)",m.fill()},e.bodyVelocity=function(u,v,g){var m=g;m.beginPath();for(var p=0;p<v.length;p++){var x=v[p];if(x.render.visible){var b=o.getVelocity(x);m.moveTo(x.position.x,x.position.y),m.lineTo(x.position.x+b.x,x.position.y+b.y)}}m.lineWidth=3,m.strokeStyle="cornflowerblue",m.stroke()},e.bodyIds=function(u,v,g){var m=g,p,x;for(p=0;p<v.length;p++)if(v[p].render.visible){var b=v[p].parts;for(x=b.length>1?1:0;x<b.length;x++){var A=b[x];m.font="12px Arial",m.fillStyle="rgba(255,255,255,0.5)",m.fillText(A.id,A.position.x+10,A.position.y-10)}}},e.collisions=function(u,v,g){var m=g,p=u.options,x,b,A,D;for(m.beginPath(),A=0;A<v.length;A++)if(x=v[A],!!x.isActive)for(b=x.collision,D=0;D<x.activeContacts.length;D++){var E=x.activeContacts[D],P=E.vertex;m.rect(P.x-1.5,P.y-1.5,3.5,3.5)}for(p.wireframes?m.fillStyle="rgba(255,255,255,0.7)":m.fillStyle="orange",m.fill(),m.beginPath(),A=0;A<v.length;A++)if(x=v[A],!!x.isActive&&(b=x.collision,x.activeContacts.length>0)){var k=x.activeContacts[0].vertex.x,T=x.activeContacts[0].vertex.y;x.activeContacts.length===2&&(k=(x.activeContacts[0].vertex.x+x.activeContacts[1].vertex.x)/2,T=(x.activeContacts[0].vertex.y+x.activeContacts[1].vertex.y)/2),b.bodyB===b.supports[0].body||b.bodyA.isStatic===!0?m.moveTo(k-b.normal.x*8,T-b.normal.y*8):m.moveTo(k+b.normal.x*8,T+b.normal.y*8),m.lineTo(k,T)}p.wireframes?m.strokeStyle="rgba(255,165,0,0.7)":m.strokeStyle="orange",m.lineWidth=1,m.stroke()},e.separations=function(u,v,g){var m=g,p=u.options,x,b,A,D,E;for(m.beginPath(),E=0;E<v.length;E++)if(x=v[E],!!x.isActive){b=x.collision,A=b.bodyA,D=b.bodyB;var P=1;!D.isStatic&&!A.isStatic&&(P=.5),D.isStatic&&(P=0),m.moveTo(D.position.x,D.position.y),m.lineTo(D.position.x-b.penetration.x*P,D.position.y-b.penetration.y*P),P=1,!D.isStatic&&!A.isStatic&&(P=.5),A.isStatic&&(P=0),m.moveTo(A.position.x,A.position.y),m.lineTo(A.position.x+b.penetration.x*P,A.position.y+b.penetration.y*P)}p.wireframes?m.strokeStyle="rgba(255,165,0,0.5)":m.strokeStyle="orange",m.stroke()},e.inspector=function(u,v){u.engine;var g=u.selected,m=u.render,p=m.options,x;if(p.hasBounds){var b=m.bounds.max.x-m.bounds.min.x,A=m.bounds.max.y-m.bounds.min.y,D=b/m.options.width,E=A/m.options.height;v.scale(1/D,1/E),v.translate(-m.bounds.min.x,-m.bounds.min.y)}for(var P=0;P<g.length;P++){var k=g[P].data;switch(v.translate(.5,.5),v.lineWidth=1,v.strokeStyle="rgba(255,165,0,0.9)",v.setLineDash([1,2]),k.type){case"body":x=k.bounds,v.beginPath(),v.rect(Math.floor(x.min.x-3),Math.floor(x.min.y-3),Math.floor(x.max.x-x.min.x+6),Math.floor(x.max.y-x.min.y+6)),v.closePath(),v.stroke();break;case"constraint":var T=k.pointA;k.bodyA&&(T=k.pointB),v.beginPath(),v.arc(T.x,T.y,10,0,2*Math.PI),v.closePath(),v.stroke();break}v.setLineDash([]),v.translate(-.5,-.5)}u.selectStart!==null&&(v.translate(.5,.5),v.lineWidth=1,v.strokeStyle="rgba(255,165,0,0.6)",v.fillStyle="rgba(255,165,0,0.1)",x=u.selectBounds,v.beginPath(),v.rect(Math.floor(x.min.x),Math.floor(x.min.y),Math.floor(x.max.x-x.min.x),Math.floor(x.max.y-x.min.y)),v.closePath(),v.stroke(),v.fill(),v.translate(-.5,-.5)),p.hasBounds&&v.setTransform(1,0,0,1,0,0)};var n=function(u,v){var g=u.engine,m=u.timing,p=m.historySize,x=g.timing.timestamp;m.delta=v-m.lastTime||e._goodDelta,m.lastTime=v,m.timestampElapsed=x-m.lastTimestamp||0,m.lastTimestamp=x,m.deltaHistory.unshift(m.delta),m.deltaHistory.length=Math.min(m.deltaHistory.length,p),m.engineDeltaHistory.unshift(g.timing.lastDelta),m.engineDeltaHistory.length=Math.min(m.engineDeltaHistory.length,p),m.timestampElapsedHistory.unshift(m.timestampElapsed),m.timestampElapsedHistory.length=Math.min(m.timestampElapsedHistory.length,p),m.engineElapsedHistory.unshift(g.timing.lastElapsed),m.engineElapsedHistory.length=Math.min(m.engineElapsedHistory.length,p),m.elapsedHistory.unshift(m.lastElapsed),m.elapsedHistory.length=Math.min(m.elapsedHistory.length,p)},c=function(u){for(var v=0,g=0;g<u.length;g+=1)v+=u[g];return v/u.length||0},y=function(u,v){var g=document.createElement("canvas");return g.width=u,g.height=v,g.oncontextmenu=function(){return!1},g.onselectstart=function(){return!1},g},C=function(u){var v=u.getContext("2d"),g=window.devicePixelRatio||1,m=v.webkitBackingStorePixelRatio||v.mozBackingStorePixelRatio||v.msBackingStorePixelRatio||v.oBackingStorePixelRatio||v.backingStorePixelRatio||1;return g/m},M=function(u,v){var g=u.textures[v];return g||(g=u.textures[v]=new Image,g.src=v,g)},S=function(u,v){var g=v;/(jpg|gif|png)$/.test(v)&&(g="url("+v+")"),u.canvas.style.background=g,u.canvas.style.backgroundSize="contain",u.currentBackground=v}})()},function(w,L,h){var e={};w.exports=e;var o=h(5),l=h(17),t=h(0);(function(){var f,s;if(typeof window<"u"&&(f=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame,s=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),!f){var d;f=function(r){d=setTimeout(function(){r(t.now())},1e3/60)},s=function(){clearTimeout(d)}}e.create=function(r){var a={fps:60,deltaSampleSize:60,counterTimestamp:0,frameCounter:0,deltaHistory:[],timePrev:null,frameRequestId:null,isFixed:!1,enabled:!0},i=t.extend(a,r);return i.delta=i.delta||1e3/i.fps,i.deltaMin=i.deltaMin||1e3/i.fps,i.deltaMax=i.deltaMax||1e3/(i.fps*.5),i.fps=1e3/i.delta,i},e.run=function(r,a){return typeof r.positionIterations<"u"&&(a=r,r=e.create()),function i(n){r.frameRequestId=f(i),n&&r.enabled&&e.tick(r,a,n)}(),r},e.tick=function(r,a,i){var n=a.timing,c;r.isFixed?c=r.delta:(c=i-r.timePrev||r.delta,r.timePrev=i,r.deltaHistory.push(c),r.deltaHistory=r.deltaHistory.slice(-r.deltaSampleSize),c=Math.min.apply(null,r.deltaHistory),c=c<r.deltaMin?r.deltaMin:c,c=c>r.deltaMax?r.deltaMax:c,r.delta=c);var y={timestamp:n.timestamp};o.trigger(r,"beforeTick",y),r.frameCounter+=1,i-r.counterTimestamp>=1e3&&(r.fps=r.frameCounter*((i-r.counterTimestamp)/1e3),r.counterTimestamp=i,r.frameCounter=0),o.trigger(r,"tick",y),o.trigger(r,"beforeUpdate",y),l.update(a,c),o.trigger(r,"afterUpdate",y),o.trigger(r,"afterTick",y)},e.stop=function(r){s(r.frameRequestId)},e.start=function(r,a){e.run(r,a)}})()},function(w,L,h){var e={};w.exports=e;var o=h(8),l=h(0),t=l.deprecated;(function(){e.collides=function(f,s){return o.collides(f,s)},t(e,"collides","SAT.collides ➤ replaced by Collision.collides")})()},function(w,L,h){var e={};w.exports=e,h(1);var o=h(0);(function(){e.pathToVertices=function(l,t){typeof window<"u"&&!("SVGPathSeg"in window)&&o.warn("Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.");var f,s,d,r,a,i,n,c,y,C,M=[],S,u,v=0,g=0,m=0;t=t||15;var p=function(b,A,D){var E=D%2===1&&D>1;if(!y||b!=y.x||A!=y.y){y&&E?(S=y.x,u=y.y):(S=0,u=0);var P={x:S+b,y:u+A};(E||!y)&&(y=P),M.push(P),g=S+b,m=u+A}},x=function(b){var A=b.pathSegTypeAsLetter.toUpperCase();if(A!=="Z"){switch(A){case"M":case"L":case"T":case"C":case"S":case"Q":g=b.x,m=b.y;break;case"H":g=b.x;break;case"V":m=b.y;break}p(g,m,b.pathSegType)}};for(e._svgPathToAbsolute(l),d=l.getTotalLength(),i=[],f=0;f<l.pathSegList.numberOfItems;f+=1)i.push(l.pathSegList.getItem(f));for(n=i.concat();v<d;){if(C=l.getPathSegAtLength(v),a=i[C],a!=c){for(;n.length&&n[0]!=a;)x(n.shift());c=a}switch(a.pathSegTypeAsLetter.toUpperCase()){case"C":case"T":case"S":case"Q":case"A":r=l.getPointAtLength(v),p(r.x,r.y,0);break}v+=t}for(f=0,s=n.length;f<s;++f)x(n[f]);return M},e._svgPathToAbsolute=function(l){for(var t,f,s,d,r,a,i=l.pathSegList,n=0,c=0,y=i.numberOfItems,C=0;C<y;++C){var M=i.getItem(C),S=M.pathSegTypeAsLetter;if(/[MLHVCSQTA]/.test(S))"x"in M&&(n=M.x),"y"in M&&(c=M.y);else switch("x1"in M&&(s=n+M.x1),"x2"in M&&(r=n+M.x2),"y1"in M&&(d=c+M.y1),"y2"in M&&(a=c+M.y2),"x"in M&&(n+=M.x),"y"in M&&(c+=M.y),S){case"m":i.replaceItem(l.createSVGPathSegMovetoAbs(n,c),C);break;case"l":i.replaceItem(l.createSVGPathSegLinetoAbs(n,c),C);break;case"h":i.replaceItem(l.createSVGPathSegLinetoHorizontalAbs(n),C);break;case"v":i.replaceItem(l.createSVGPathSegLinetoVerticalAbs(c),C);break;case"c":i.replaceItem(l.createSVGPathSegCurvetoCubicAbs(n,c,s,d,r,a),C);break;case"s":i.replaceItem(l.createSVGPathSegCurvetoCubicSmoothAbs(n,c,r,a),C);break;case"q":i.replaceItem(l.createSVGPathSegCurvetoQuadraticAbs(n,c,s,d),C);break;case"t":i.replaceItem(l.createSVGPathSegCurvetoQuadraticSmoothAbs(n,c),C);break;case"a":i.replaceItem(l.createSVGPathSegArcAbs(n,c,M.r1,M.r2,M.angle,M.largeArcFlag,M.sweepFlag),C);break;case"z":case"Z":n=t,c=f;break}(S=="M"||S=="m")&&(t=n,f=c)}}})()},function(w,L,h){var e={};w.exports=e;var o=h(6);h(0),function(){e.create=o.create,e.add=o.add,e.remove=o.remove,e.clear=o.clear,e.addComposite=o.addComposite,e.addBody=o.addBody,e.addConstraint=o.addConstraint}()}])})})(Ge);var sa=Ge.exports;const Aa=oa(sa),ca=["able","above","absent","absolute","abstract","abundant","academic","acceptable","accepted","accessible","accurate","accused","active","actual","acute","added","additional","adequate","adjacent","administrative","adorable","advanced","adverse","advisory","aesthetic","afraid","afraid","african","aggregate","aggressive","agreeable","agreed","agricultural","alert","alive","alive","alleged","allied","alone","alright","alternative","amateur","amazing","ambitious","american","amused","ancient","ancient","angry","angry","annoyed","annual","anonymous","anxious","anxious","appalling","apparent","applicable","appropriate","arab","arbitrary","architectural","armed","arrogant","artificial","artistic","ashamed","ashamed","asian","asleep","assistant","associated","atomic","attractive","australian","automatic","autonomous","available","average","average","average","awake","aware","awful","awful","awkward","back","bad","bad","bad","balanced","bare","basic","beautiful","beautiful","beautiful","beneficial","better","bewildered","big","big","big","binding","biological","bitter","bitter","bizarre","black","black","blank","blind","blonde","bloody","bloody","blue","blue","blushing","boiling","bold","bored","bored","boring","bottom","brainy","brave","brave","breakable","breezy","brief","brief","bright","bright","bright","brilliant","british","broad","broad","broken","broken","brown","bumpy","burning","busy","busy","calm","calm","canadian","capable","capitalist","careful","careful","casual","catholic","causal","cautious","cautious","central","certain","changing","characteristic","charming","charming","cheap","cheerful","cheerful","chemical","chief","chilly","chinese","chosen","christian","chronic","chubby","circular","civic","civil","civilian","classic","classical","clean","clean","clear","clear","clever","clever","clinical","close","closed","cloudy","clumsy","coastal","cognitive","coherent","cold","cold","collective","colonial","colorful","colossal","coloured","colourful","combative","combined","comfortable","comfortable","coming","commercial","common","communist","compact","comparable","comparative","compatible","competent","competitive","complete","complex","complicated","comprehensive","compulsory","conceptual","concerned","concerned","concrete","condemned","confident","confidential","confused","confused","conscious","conservation","conservative","considerable","consistent","constant","constitutional","contemporary","content","continental","continued","continuing","continuous","controlled","controversial","convenient","conventional","convinced","convincing","cooing","cool","cool","cooperative","corporate","correct","corresponding","costly","courageous","crazy","crazy","crazy","creative","creepy","creepy","criminal","critical","crooked","crooked","crowded","crucial","crude","cruel","cruel","cuddly","cultural","curious","curious","curly","current","curved","cute","daily","damaged","damp","damp","dangerous","dangerous","dark","dark","dead","dead","deaf","deafening","dear","decent","decisive","deep","deep","defeated","defensive","defiant","definite","deliberate","delicate","delicious","delicious","delighted","delightful","delightful","democratic","dependent","depressed","depressed","desirable","desperate","detailed","determined","determined","developed","developing","devoted","different","different","difficult","difficult","digital","diplomatic","direct","dirty","dirty","disabled","disappointed","disastrous","disciplinary","disgusted","distant","distinct","distinct","distinctive","distinguished","disturbed","disturbing","diverse","divine","dizzy","domestic","dominant","double","doubtful","doubtful","drab","dramatic","dreadful","driving","drunk","dry","dry","dual","due","dull","dull","dull","dusty","dutch","dying","dynamic","eager","eager","early","early","eastern","easy","easy","economic","educational","eerie","effective","efficient","elaborate","elated","elderly","eldest","electoral","electric","electrical","electronic","elegant","elegant","eligible","embarrassed","embarrassed","embarrassing","emotional","empirical","empty","empty","enchanting","encouraging","encouraging","endless","energetic","english","enormous","enthusiastic","enthusiastic","entire","entitled","envious","environmental","equal","equivalent","essential","established","estimated","ethical","ethnic","european","eventual","everyday","evident","evil","evil","evolutionary","exact","excellent","exceptional","excess","excessive","excited","excited","exciting","exclusive","existing","exotic","expected","expensive","experienced","experimental","explicit","extended","extensive","external","extra","extraordinary","extreme","exuberant","faint","faint","fair","fair","faithful","faithful","familiar","famous","famous","fancy","fantastic","fantastic","far","fascinating","fashionable","fast","fast","fat","fat","fat","fatal","favourable","favourite","federal","fellow","female","feminist","few","fierce","fierce","filthy","filthy","final","financial","fine","fine","firm","fiscal","fit","fixed","flaky","flat","flat","flexible","fluffy","fluttering","flying","following","fond","foolish","foolish","foreign","formal","formidable","forthcoming","fortunate","forward","fragile","frail","frantic","free","french","frequent","fresh","fresh","friendly","friendly","friendly","frightened","frightened","front","frozen","fucking","full","full-time","fun","functional","fundamental","funny","funny","funny","furious","future","fuzzy","gastric","gay","general","generous","genetic","gentle","gentle","genuine","geographical","german","giant","giant","gigantic","gigantic","given","glad","glamorous","gleaming","global","glorious","glorious","golden","good","good","gorgeous","gothic","governing","graceful","gradual","grand","grateful","greasy","great","great","great","greek","green","green","grey","grieving","grim","gross","grotesque","growing","grubby","grumpy","guilty","handicapped","handsome","handsome","happy","happy","happy","hard","hard","harsh","harsh","head","healthy","healthy","heavy","heavy","helpful","helpful","helpful","helpless","helpless","hidden","high","high","high-pitched","hilarious","hissing","historic","historical","hollow","holy","homeless","homeless","homely","hon","honest","horizontal","horrible","horrible","hostile","hot","hot","huge","huge","human","hungry","hungry","hurt","hushed","husky","icy","ideal","identical","ideological","ill","ill","illegal","imaginative","immediate","immense","immense","imperial","implicit","important","important","impossible","impossible","impressed","impressive","improved","inadequate","inappropriate","inc","inclined","increased","increasing","incredible","independent","indian","indirect","individual","industrial","inevitable","influential","informal","inherent","initial","injured","inland","inner","innocent","innocent","innovative","inquisitive","instant","institutional","insufficient","intact","integral","integrated","intellectual","intelligent","intense","intensive","interested","interesting","interim","interior","intermediate","internal","international","intimate","invisible","involved","iraqi","irish","irrelevant","islamic","isolated","israeli","italian","itchy","japanese","jealous","jewish","jittery","joint","jolly","jolly","joyous","judicial","juicy","junior","just","keen","key","kind","kind","kind","known","korean","labour","large","large","large-scale","late","late","latin","lazy","leading","left","legal","legislative","legitimate","lengthy","lesser","level","lexical","liable","liberal","light","light","light","like","likely","limited","linear","linguistic","liquid","literary","little","little","live","lively","lively","living","local","logical","lonely","lonely","long","long","long","long","long-term","loose","loose","lost","loud","loud","lovely","lovely","low","low","loyal","ltd","lucky","lucky","mad","magenta","magic","magnetic","magnificent","magnificent","main","major","male","mammoth","managerial","managing","manual","many","many","marginal","marine","marked","married","marvellous","marxist","mass","massive","massive","mathematical","mature","maximum","mean","meaningful","mechanical","medical","medieval","melodic","melted","mental","mere","metropolitan","mid","middle","middle-class","mighty","mighty","mild","military","miniature","minimal","minimum","ministerial","minor","miserable","misleading","missing","misty","mixed","moaning","mobile","moderate","modern","modern","modern","modest","molecular","monetary","monthly","moral","motionless","muddy","multiple","mushy","musical","mute","mutual","mysterious","mysterious","naked","narrow","narrow","nasty","nasty","national","native","natural","naughty","naval","near","nearby","neat","necessary","negative","neighbouring","nervous","nervous","net","neutral","new","new","nice","nice","nineteenth-century","noble","noisy","noisy","normal","northern","nosy","notable","novel","nuclear","numerous","numerous","nursing","nutritious","nutty","obedient","objective","obliged","obnoxious","obvious","occasional","occupational","odd","odd","official","ok","okay","old","old","old-fashioned","old-fashioned","olympic","only","open","open","operational","opposite","optimistic","oral","orange","orange","ordinary","ordinary","organic","organisational","original","orthodox","other","outdoor","outer","outrageous","outside","outstanding","outstanding","overall","overseas","overwhelming","painful","pale","palestinian","panicky","parallel","parental","parliamentary","part-time","partial","particular","passing","passive","past","patient","payable","peaceful","peculiar","perfect","perfect","permanent","persistent","personal","petite","philosophical","physical","pink","plain","plain","planned","plastic","pleasant","pleasant","pleased","poised","polish","polite","political","poor","poor","popular","positive","possible","post-war","potential","powerful","powerful","practical","precious","precious","precise","preferred","pregnant","preliminary","premier","prepared","present","presidential","pretty","pretty","previous","prickly","prickly","primary","prime","primitive","principal","printed","prior","private","probable","productive","professional","profitable","profound","progressive","prominent","promising","proper","proposed","prospective","protective","protestant","proud","proud","provincial","psychiatric","psychological","public","puny","pure","purple","purple","purring","puzzled","puzzled","quaint","quaint","qualified","quick","quick","quick","quickest","quiet","quiet","quiet","racial","radical","rainy","rainy","random","rapid","rapid","rare","rare","raspy","rational","ratty","raw","ready","real","real","realistic","rear","reasonable","recent","red","red","reduced","redundant","regional","registered","regular","regulatory","related","relative","relaxed","relevant","reliable","relieved","relieved","religious","reluctant","remaining","remarkable","remote","renewed","representative","repulsive","required","resident","residential","resonant","respectable","respective","responsible","resulting","retail","retired","revolutionary","rich","rich","ridiculous","right","rigid","ripe","rising","rival","roasted","robust","rolling","roman","romantic","rotten","rough","rough","round","round","round","royal","rubber","rude","ruling","running","rural","russian","sacred","sad","sad","safe","salty","satisfactory","satisfied","scared","scary","scary","scattered","scientific","scornful","scottish","scrawny","screeching","secondary","secret","secure","select","selected","selective","selfish","semantic","senior","sensible","sensitive","separate","serious","severe","sexual","shaggy","shaky","shallow","shallow","shared","sharp","sharp","sheer","shiny","shivering","shocked","short","short","short","short","short-term","shrill","shy","shy","sick","significant","silent","silent","silky","silly","silly","silly","similar","simple","single","skilled","skinny","sleepy","slight","slim","slimy","slippery","slow","slow","small","small","smart","smiling","smoggy","smooth","smooth","so-called","social","socialist","soft","soft","soft","solar","sole","solid","solid","sophisticated","sore","sorry","sound","sound","sour","southern","soviet","spanish","spare","sparkling","spatial","special","specific","specified","spectacular","spicy","spiritual","splendid","splendid","spontaneous","sporting","spotless","spotty","square","square","squealing","stable","stale","standard","static","statistical","statutory","steady","steady","steep","steep","sticky","sticky","stiff","still","stingy","stormy","straight","straight","straightforward","strange","strange","strange","strategic","strict","striking","striped","strong","strong","structural","stuck","stupid","stupid","subjective","subsequent","substantial","subtle","successful","successful","successive","sudden","sufficient","suitable","sunny","super","super","superb","superior","supporting","supposed","supreme","sure","surprised","surprising","surrounding","surviving","suspicious","sweet","sweet","swift","swiss","symbolic","sympathetic","systematic","tall","tall","tall","tame","tame","tan","tart","tasteless","tasty","technical","technological","teenage","temporary","tender","tender","tender","tense","terrible","terrible","territorial","testy","then","theoretical","thick","thin","thirsty","thorough","thoughtful","thoughtless","thundering","tight","tight","tiny","tiny","tired","tired","top","tory","total","tough","tough","toxic","traditional","tragic","tremendous","tricky","tropical","troubled","turkish","typical","ugliest","ugly","ugly","ugly","ultimate","unable","unacceptable","unaware","uncertain","unchanged","uncomfortable","unconscious","underground","underlying","unemployed","uneven","unexpected","unfair","unfortunate","unhappy","uniform","uninterested","unique","united","universal","unknown","unlikely","unnecessary","unpleasant","unsightly","unusual","unusual","unwilling","upper","upset","upset","uptight","urban","urgent","used","useful","useless","usual","vague","valid","valuable","variable","varied","various","varying","vast","vast","verbal","vertical","very","victorian","victorious","video-taped","violent","visible","visiting","visual","vital","vivacious","vivid","vocational","voiceless","voluntary","vulnerable","wandering","warm","wasteful","watery","weak","weak","wealthy","weary","wee","weekly","weird","welcome","well","well-known","welsh","western","wet","wet","wet","whispering","white","whole","wicked","wicked","wide","wide","wide-eyed","widespread","wild","wild","willing","wise","witty","wonderful","wonderful","wonderful","wooden","wooden","working","working-class","worldwide","worried","worried","worrying","worthwhile","worthy","written","wrong","wrong","yellow","yellow","young","young","yummy","zany","zany","zealous"],ua=["armour","barrymore","cabot","catholicism","chihuahua","christianity","easter","frenchman","lowry","mayer","orientalism","pharaoh","pueblo","pullman","rodeo","saturday","sister","snead","syrah","tuesday","woodward","abbey","absence","absorption","abstinence","absurdity","abundance","acceptance","accessibility","accommodation","accomplice","accountability","accounting","accreditation","accuracy","acquiescence","acreage","actress","actuality","adage","adaptation","adherence","adjustment","adoption","adultery","advancement","advert","advertisement","advertising","advice","aesthetics","affinity","aggression","agriculture","aircraft","airtime","allegation","allegiance","allegory","allergy","allies","alligator","allocation","allotment","altercation","ambulance","ammonia","anatomy","anemia","ankle","announcement","annoyance","annuity","anomaly","anthropology","anxiety","apartheid","apologise","apostle","apparatus","appeasement","appellation","appendix","applause","appointment","appraisal","archery","archipelago","architecture","ardor","arrears","arrow","artisan","artistry","ascent","assembly","assignment","association","asthma","atheism","attacker","attraction","attractiveness","auspices","authority","avarice","aversion","aviation","babbling","backlash","baker","ballet","balls","banjo","baron","barrier","barrister","bases","basin","basis","battery","battling","bedtime","beginner","begun","bending","bicycle","billing","bingo","biography","biology","birthplace","blackberry","blather","blossom","boardroom","boasting","bodyguard","boldness","bomber","bondage","bonding","bones","bonus","bookmark","boomer","booty","bounds","bowling","brainstorming","breadth","breaker","brewer","brightness","broccoli","broth","brotherhood","browsing","brunch","brunt","building","bullion","bureaucracy","burglary","buyout","by-election","cabal","cabbage","calamity","campaign","canonization","captaincy","carcass","carrier","cartridge","cassette","catfish","caught","celebrity","cemetery","certainty","certification","charade","chasm","check-in","cheerleader","cheesecake","chemotherapy","chili","china","chivalry","cholera","cilantro","circus","civilisation","civility","clearance","clearing","clerk","climber","closeness","clothing","clutches","coaster","coconut","coding","collaborator","colleague","college","collision","colors","combustion","comedian","comer","commander","commemoration","commenter","commissioner","commune","competition","completeness","complexity","computing","comrade","concur","condominium","conduit","confidant","configuration","confiscation","conflagration","conflict","consist","consistency","consolidation","conspiracy","constable","consul","consultancy","contentment","contents","contractor","conversation","cornerstone","corpus","correlation","councilman","counselor","countdown","countryman","coverage","covering","coyote","cracker","creator","criminality","crocodile","cropping","cross-examination","crossover","crossroads","culprit","cumin","curator","curfew","cursor","custard","cutter","cyclist","cyclone","cylinder","cynicism","daddy","damsel","darkness","dawning","daybreak","dealing","dedication","deduction","defection","deference","deficiency","definition","deflation","degeneration","delegation","delicacy","delirium","deliverance","demeanor","demon","demonstration","denomination","dentist","departure","depletion","depression","designation","despotism","detention","developer","devolution","dexterity","diagnosis","dialect","differentiation","digger","digress","dioxide","diploma","disability","disarmament","discord","discovery","dishonesty","dismissal","disobedience","dispatcher","disservice","distribution","distributor","diver","diversity","docking","dollar","dominance","domination","dominion","donkey","doorstep","doorway","dossier","downside","drafting","drank","drilling","driver","drumming","drunkenness","duchess","ducking","dugout","dumps","dwelling","dynamics","eagerness","earnestness","earnings","eater","editor","effectiveness","electricity","elements","eloquence","emancipation","embodiment","embroidery","emperor","employment","encampment","enclosure","encouragement","endangerment","enlightenment","enthusiasm","environment","environs","envoy","epilepsy","equation","equator","error","espionage","estimation","evacuation","exaggeration","examination","exclamation","expediency","exploitation","extinction","eyewitness","falls","fascism","fastball","feces","feedback","ferocity","fertilization","fetish","finale","firing","fixing","flashing","flask","flora","fluke","folklore","follower","foothold","footing","forefinger","forefront","forgiveness","formality","formation","formula","foyer","fragmentation","framework","fraud","freestyle","frequency","friendliness","fries","frigate","fulfillment","function","functionality","fundraiser","fusion","futility","gallantry","gallery","genesis","genitals","girlfriend","glamour","glitter","glucose","google","grandeur","grappling","greens","gridlock","grocer","groundwork","grouping","gunman","gusto","habitation","hacker","hallway","hamburger","hammock","handling","hands","handshake","happiness","hardship","headcount","header","headquarters","heads","headset","hearth","hearts","heath","hegemony","height","hello","helper","helping","helplessness","hierarchy","hoarding","hockey","homeland","homer","honesty","horror","horseman","hostility","housing","humility","hurricane","iceberg","ignition","illness","illustration","illustrator","immunity","immunization","imperialism","imprisonment","inaccuracy","inaction","inactivity","inauguration","indecency","indicator","inevitability","infamy","infiltration","influx","iniquity","innocence","innovation","insanity","inspiration","instruction","instructor","insurer","interact","intercession","intercourse","intermission","interpretation","intersection","interval","intolerance","intruder","invasion","investment","involvement","irrigation","iteration","jenny","jogging","jones","joseph","juggernaut","juncture","jurisprudence","juror","kangaroo","kingdom","knocking","laborer","larceny","laurels","layout","leadership","leasing","legislation","leopard","liberation","licence","lifeblood","lifeline","ligament","lighting","likeness","line-up","lineage","liner","lineup","liquidation","listener","literature","litigation","litre","loathing","locality","lodging","logic","longevity","lookout","lordship","lustre","ma'am","machinery","madness","magnificence","mahogany","mailing","mainframe","maintenance","majority","manga","mango","manifesto","mantra","manufacturer","maple","martin","martyrdom","mathematician","matrix","matron","mayhem","mayor","means","meantime","measurement","mechanics","mediator","medics","melodrama","memory","mentality","metaphysics","method","metre","miner","mirth","misconception","misery","mishap","misunderstanding","mobility","molasses","momentum","monarchy","monument","morale","mortality","motto","mouthful","mouthpiece","mover","movie","mowing","murderer","musician","mutation","mythology","narration","narrator","nationality","negligence","neighborhood","neighbour","nervousness","networking","nexus","nightmare","nobility","nobody","noodle","normalcy","notification","nourishment","novella","nucleus","nuisance","nursery","nutrition","nylon","oasis","obscenity","obscurity","observer","offense","onslaught","operation","opportunity","opposition","oracle","orchestra","organisation","organizer","orientation","originality","ounce","outage","outcome","outdoors","outfield","outing","outpost","outset","overseer","owner","oxygen","pairing","panther","paradox","parliament","parsley","parson","passenger","pasta","patchwork","pathos","patriotism","pendulum","penguin","permission","persona","perusal","pessimism","peter","philosopher","phosphorus","phrasing","physique","piles","plateau","playing","plaza","plethora","plurality","pneumonia","pointer","poker","policeman","polling","poster","posterity","posting","postponement","potassium","pottery","poultry","pounding","pragmatism","precedence","precinct","preoccupation","pretense","priesthood","prisoner","privacy","probation","proceeding","proceedings","processing","processor","progression","projection","prominence","propensity","prophecy","prorogation","prospectus","protein","prototype","providence","provider","provocation","proximity","puberty","publicist","publicity","publisher","pundit","putting","quantity","quart","quilting","quorum","racism","radiance","ralph","rancher","ranger","rapidity","rapport","ratification","rationality","reaction","reader","reassurance","rebirth","receptor","recipe","recognition","recourse","recreation","rector","recurrence","redemption","redistribution","redundancy","refinery","reformer","refrigerator","regularity","regulator","reinforcement","reins","reinstatement","relativism","relaxation","rendition","repayment","repentance","repertoire","repository","republic","reputation","resentment","residency","resignation","restaurant","resurgence","retailer","retention","retirement","reviewer","riches","righteousness","roadblock","robber","rocks","rubbing","runoff","saloon","salvation","sarcasm","saucer","savior","scarcity","scenario","scenery","schism","scholarship","schoolboy","schooner","scissors","scolding","scooter","scouring","scrimmage","scrum","seating","sediment","seduction","seeder","seizure","self-confidence","self-control","self-respect","semicolon","semiconductor","semifinal","senator","sending","serenity","seriousness","servitude","sesame","setup","sewing","sharpness","shaving","shoplifting","shopping","siding","simplicity","simulation","sinking","skate","sloth","slugger","snack","snail","snapshot","snark","soccer","solemnity","solicitation","solitude","somewhere","sophistication","sorcery","souvenir","spaghetti","specification","specimen","specs","spectacle","spectre","speculation","sperm","spoiler","squad","squid","staging","stagnation","staircase","stairway","stamina","standpoint","standstill","stanza","statement","stillness","stimulus","stocks","stole","stoppage","storey","storyteller","stylus","subcommittee","subscription","subsidy","suburb","success","sufferer","supposition","suspension","sweater","sweepstakes","swimmer","syndrome","synopsis","syntax","system","tablespoon","taker","tavern","technology","telephony","template","tempo","tendency","tendon","terrier","terror","terry","theater","theology","therapy","thicket","thoroughfare","threshold","thriller","thunderstorm","ticker","tiger","tights","to-day","tossing","touchdown","tourist","tourney","toxicity","tracing","tractor","translation","transmission","transmitter","trauma","traveler","treadmill","trilogy","trout","tuning","twenties","tycoon","tyrant","ultimatum","underdog","underwear","unhappiness","unification","university","uprising","vaccination","validity","vampire","vanguard","variation","vegetation","verification","viability","vicinity","victory","viewpoint","villa","vindication","violation","vista","vocalist","vogue","volcano","voltage","vomiting","vulnerability","waistcoat","waitress","wardrobe","warmth","watchdog","wealth","weariness","whereabouts","whisky","whiteness","widget","width","windfall","wiring","witchcraft","withholding","womanhood","words","workman","youngster"],da=["Aaren","Aarika","Abagael","Abagail","Abbe","Abbey","Abbi","Abbie","Abby","Abbye","Abigael","Abigail","Abigale","Abra","Ada","Adah","Adaline","Adan","Adara","Adda","Addi","Addia","Addie","Addy","Adel","Adela","Adelaida","Adelaide","Adele","Adelheid","Adelice","Adelina","Adelind","Adeline","Adella","Adelle","Adena","Adey","Adi","Adiana","Adina","Adora","Adore","Adoree","Adorne","Adrea","Adria","Adriaens","Adrian","Adriana","Adriane","Adrianna","Adrianne","Adriena","Adrienne","Aeriel","Aeriela","Aeriell","Afton","Ag","Agace","Agata","Agatha","Agathe","Aggi","Aggie","Aggy","Agna","Agnella","Agnes","Agnese","Agnesse","Agneta","Agnola","Agretha","Aida","Aidan","Aigneis","Aila","Aile","Ailee","Aileen","Ailene","Ailey","Aili","Ailina","Ailis","Ailsun","Ailyn","Aime","Aimee","Aimil","Aindrea","Ainslee","Ainsley","Ainslie","Ajay","Alaine","Alameda","Alana","Alanah","Alane","Alanna","Alayne","Alberta","Albertina","Albertine","Albina","Alecia","Aleda","Aleece","Aleen","Alejandra","Alejandrina","Alena","Alene","Alessandra","Aleta","Alethea","Alex","Alexa","Alexandra","Alexandrina","Alexi","Alexia","Alexina","Alexine","Alexis","Alfi","Alfie","Alfreda","Alfy","Ali","Alia","Alica","Alice","Alicea","Alicia","Alida","Alidia","Alie","Alika","Alikee","Alina","Aline","Alis","Alisa","Alisha","Alison","Alissa","Alisun","Alix","Aliza","Alla","Alleen","Allegra","Allene","Alli","Allianora","Allie","Allina","Allis","Allison","Allissa","Allix","Allsun","Allx","Ally","Allyce","Allyn","Allys","Allyson","Alma","Almeda","Almeria","Almeta","Almira","Almire","Aloise","Aloisia","Aloysia","Alta","Althea","Alvera","Alverta","Alvina","Alvinia","Alvira","Alyce","Alyda","Alys","Alysa","Alyse","Alysia","Alyson","Alyss","Alyssa","Amabel","Amabelle","Amalea","Amalee","Amaleta","Amalia","Amalie","Amalita","Amalle","Amanda","Amandi","Amandie","Amandy","Amara","Amargo","Amata","Amber","Amberly","Ambur","Ame","Amelia","Amelie","Amelina","Ameline","Amelita","Ami","Amie","Amii","Amil","Amitie","Amity","Ammamaria","Amy","Amye","Ana","Anabal","Anabel","Anabella","Anabelle","Analiese","Analise","Anallese","Anallise","Anastasia","Anastasie","Anastassia","Anatola","Andee","Andeee","Anderea","Andi","Andie","Andra","Andrea","Andreana","Andree","Andrei","Andria","Andriana","Andriette","Andromache","Andy","Anestassia","Anet","Anett","Anetta","Anette","Ange","Angel","Angela","Angele","Angelia","Angelica","Angelika","Angelina","Angeline","Angelique","Angelita","Angelle","Angie","Angil","Angy","Ania","Anica","Anissa","Anita","Anitra","Anjanette","Anjela","Ann","Ann-Marie","Anna","Anna-Diana","Anna-Diane","Anna-Maria","Annabal","Annabel","Annabela","Annabell","Annabella","Annabelle","Annadiana","Annadiane","Annalee","Annaliese","Annalise","Annamaria","Annamarie","Anne","Anne-Corinne","Anne-Marie","Annecorinne","Anneliese","Annelise","Annemarie","Annetta","Annette","Anni","Annice","Annie","Annis","Annissa","Annmaria","Annmarie","Annnora","Annora","Anny","Anselma","Ansley","Anstice","Anthe","Anthea","Anthia","Anthiathia","Antoinette","Antonella","Antonetta","Antonia","Antonie","Antonietta","Antonina","Anya","Appolonia","April","Aprilette","Ara","Arabel","Arabela","Arabele","Arabella","Arabelle","Arda","Ardath","Ardeen","Ardelia","Ardelis","Ardella","Ardelle","Arden","Ardene","Ardenia","Ardine","Ardis","Ardisj","Ardith","Ardra","Ardyce","Ardys","Ardyth","Aretha","Ariadne","Ariana","Aridatha","Ariel","Ariela","Ariella","Arielle","Arlana","Arlee","Arleen","Arlen","Arlena","Arlene","Arleta","Arlette","Arleyne","Arlie","Arliene","Arlina","Arlinda","Arline","Arluene","Arly","Arlyn","Arlyne","Aryn","Ashely","Ashia","Ashien","Ashil","Ashla","Ashlan","Ashlee","Ashleigh","Ashlen","Ashley","Ashli","Ashlie","Ashly","Asia","Astra","Astrid","Astrix","Atalanta","Athena","Athene","Atlanta","Atlante","Auberta","Aubine","Aubree","Aubrette","Aubrey","Aubrie","Aubry","Audi","Audie","Audra","Audre","Audrey","Audrie","Audry","Audrye","Audy","Augusta","Auguste","Augustina","Augustine","Aundrea","Aura","Aurea","Aurel","Aurelea","Aurelia","Aurelie","Auria","Aurie","Aurilia","Aurlie","Auroora","Aurora","Aurore","Austin","Austina","Austine","Ava","Aveline","Averil","Averyl","Avie","Avis","Aviva","Avivah","Avril","Avrit","Ayn","Bab","Babara","Babb","Babbette","Babbie","Babette","Babita","Babs","Bambi","Bambie","Bamby","Barb","Barbabra","Barbara","Barbara-Anne","Barbaraanne","Barbe","Barbee","Barbette","Barbey","Barbi","Barbie","Barbra","Barby","Bari","Barrie","Barry","Basia","Bathsheba","Batsheva","Bea","Beatrice","Beatrisa","Beatrix","Beatriz","Bebe","Becca","Becka","Becki","Beckie","Becky","Bee","Beilul","Beitris","Bekki","Bel","Belia","Belicia","Belinda","Belita","Bell","Bella","Bellanca","Belle","Bellina","Belva","Belvia","Bendite","Benedetta","Benedicta","Benedikta","Benetta","Benita","Benni","Bennie","Benny","Benoite","Berenice","Beret","Berget","Berna","Bernadene","Bernadette","Bernadina","Bernadine","Bernardina","Bernardine","Bernelle","Bernete","Bernetta","Bernette","Berni","Bernice","Bernie","Bernita","Berny","Berri","Berrie","Berry","Bert","Berta","Berte","Bertha","Berthe","Berti","Bertie","Bertina","Bertine","Berty","Beryl","Beryle","Bess","Bessie","Bessy","Beth","Bethanne","Bethany","Bethena","Bethina","Betsey","Betsy","Betta","Bette","Bette-Ann","Betteann","Betteanne","Betti","Bettina","Bettine","Betty","Bettye","Beulah","Bev","Beverie","Beverlee","Beverley","Beverlie","Beverly","Bevvy","Bianca","Bianka","Bibbie","Bibby","Bibbye","Bibi","Biddie","Biddy","Bidget","Bili","Bill","Billi","Billie","Billy","Billye","Binni","Binnie","Binny","Bird","Birdie","Birgit","Birgitta","Blair","Blaire","Blake","Blakelee","Blakeley","Blanca","Blanch","Blancha","Blanche","Blinni","Blinnie","Blinny","Bliss","Blisse","Blithe","Blondell","Blondelle","Blondie","Blondy","Blythe","Bobbe","Bobbee","Bobbette","Bobbi","Bobbie","Bobby","Bobbye","Bobette","Bobina","Bobine","Bobinette","Bonita","Bonnee","Bonni","Bonnibelle","Bonnie","Bonny","Brana","Brandais","Brande","Brandea","Brandi","Brandice","Brandie","Brandise","Brandy","Breanne","Brear","Bree","Breena","Bren","Brena","Brenda","Brenn","Brenna","Brett","Bria","Briana","Brianna","Brianne","Bride","Bridget","Bridgette","Bridie","Brier","Brietta","Brigid","Brigida","Brigit","Brigitta","Brigitte","Brina","Briney","Brinn","Brinna","Briny","Brit","Brita","Britney","Britni","Britt","Britta","Brittan","Brittaney","Brittani","Brittany","Britte","Britteny","Brittne","Brittney","Brittni","Brook","Brooke","Brooks","Brunhilda","Brunhilde","Bryana","Bryn","Bryna","Brynn","Brynna","Brynne","Buffy","Bunni","Bunnie","Bunny","Cacilia","Cacilie","Cahra","Cairistiona","Caitlin","Caitrin","Cal","Calida","Calla","Calley","Calli","Callida","Callie","Cally","Calypso","Cam","Camala","Camel","Camella","Camellia","Cami","Camila","Camile","Camilla","Camille","Cammi","Cammie","Cammy","Candace","Candi","Candice","Candida","Candide","Candie","Candis","Candra","Candy","Caprice","Cara","Caralie","Caren","Carena","Caresa","Caressa","Caresse","Carey","Cari","Caria","Carie","Caril","Carilyn","Carin","Carina","Carine","Cariotta","Carissa","Carita","Caritta","Carla","Carlee","Carleen","Carlen","Carlene","Carley","Carlie","Carlin","Carlina","Carline","Carlita","Carlota","Carlotta","Carly","Carlye","Carlyn","Carlynn","Carlynne","Carma","Carmel","Carmela","Carmelia","Carmelina","Carmelita","Carmella","Carmelle","Carmen","Carmencita","Carmina","Carmine","Carmita","Carmon","Caro","Carol","Carol-Jean","Carola","Carolan","Carolann","Carole","Carolee","Carolin","Carolina","Caroline","Caroljean","Carolyn","Carolyne","Carolynn","Caron","Carree","Carri","Carrie","Carrissa","Carroll","Carry","Cary","Caryl","Caryn","Casandra","Casey","Casi","Casie","Cass","Cassandra","Cassandre","Cassandry","Cassaundra","Cassey","Cassi","Cassie","Cassondra","Cassy","Catarina","Cate","Caterina","Catha","Catharina","Catharine","Cathe","Cathee","Catherin","Catherina","Catherine","Cathi","Cathie","Cathleen","Cathlene","Cathrin","Cathrine","Cathryn","Cathy","Cathyleen","Cati","Catie","Catina","Catlaina","Catlee","Catlin","Catrina","Catriona","Caty","Caye","Cayla","Cecelia","Cecil","Cecile","Ceciley","Cecilia","Cecilla","Cecily","Ceil","Cele","Celene","Celesta","Celeste","Celestia","Celestina","Celestine","Celestyn","Celestyna","Celia","Celie","Celina","Celinda","Celine","Celinka","Celisse","Celka","Celle","Cesya","Chad","Chanda","Chandal","Chandra","Channa","Chantal","Chantalle","Charil","Charin","Charis","Charissa","Charisse","Charita","Charity","Charla","Charlean","Charleen","Charlena","Charlene","Charline","Charlot","Charlotta","Charlotte","Charmain","Charmaine","Charmane","Charmian","Charmine","Charmion","Charo","Charyl","Chastity","Chelsae","Chelsea","Chelsey","Chelsie","Chelsy","Cher","Chere","Cherey","Cheri","Cherianne","Cherice","Cherida","Cherie","Cherilyn","Cherilynn","Cherin","Cherise","Cherish","Cherlyn","Cherri","Cherrita","Cherry","Chery","Cherye","Cheryl","Cheslie","Chiarra","Chickie","Chicky","Chiquia","Chiquita","Chlo","Chloe","Chloette","Chloris","Chris","Chrissie","Chrissy","Christa","Christabel","Christabella","Christal","Christalle","Christan","Christean","Christel","Christen","Christi","Christian","Christiana","Christiane","Christie","Christin","Christina","Christine","Christy","Christye","Christyna","Chrysa","Chrysler","Chrystal","Chryste","Chrystel","Cicely","Cicily","Ciel","Cilka","Cinda","Cindee","Cindelyn","Cinderella","Cindi","Cindie","Cindra","Cindy","Cinnamon","Cissiee","Cissy","Clair","Claire","Clara","Clarabelle","Clare","Claresta","Clareta","Claretta","Clarette","Clarey","Clari","Claribel","Clarice","Clarie","Clarinda","Clarine","Clarissa","Clarisse","Clarita","Clary","Claude","Claudelle","Claudetta","Claudette","Claudia","Claudie","Claudina","Claudine","Clea","Clem","Clemence","Clementia","Clementina","Clementine","Clemmie","Clemmy","Cleo","Cleopatra","Clerissa","Clio","Clo","Cloe","Cloris","Clotilda","Clovis","Codee","Codi","Codie","Cody","Coleen","Colene","Coletta","Colette","Colleen","Collen","Collete","Collette","Collie","Colline","Colly","Con","Concettina","Conchita","Concordia","Conni","Connie","Conny","Consolata","Constance","Constancia","Constancy","Constanta","Constantia","Constantina","Constantine","Consuela","Consuelo","Cookie","Cora","Corabel","Corabella","Corabelle","Coral","Coralie","Coraline","Coralyn","Cordelia","Cordelie","Cordey","Cordi","Cordie","Cordula","Cordy","Coreen","Corella","Corenda","Corene","Coretta","Corette","Corey","Cori","Corie","Corilla","Corina","Corine","Corinna","Corinne","Coriss","Corissa","Corliss","Corly","Cornela","Cornelia","Cornelle","Cornie","Corny","Correna","Correy","Corri","Corrianne","Corrie","Corrina","Corrine","Corrinne","Corry","Cortney","Cory","Cosetta","Cosette","Costanza","Courtenay","Courtnay","Courtney","Crin","Cris","Crissie","Crissy","Crista","Cristabel","Cristal","Cristen","Cristi","Cristie","Cristin","Cristina","Cristine","Cristionna","Cristy","Crysta","Crystal","Crystie","Cthrine","Cyb","Cybil","Cybill","Cymbre","Cynde","Cyndi","Cyndia","Cyndie","Cyndy","Cynthea","Cynthia","Cynthie","Cynthy","Dacey","Dacia","Dacie","Dacy","Dael","Daffi","Daffie","Daffy","Dagmar","Dahlia","Daile","Daisey","Daisi","Daisie","Daisy","Dale","Dalenna","Dalia","Dalila","Dallas","Daloris","Damara","Damaris","Damita","Dana","Danell","Danella","Danette","Dani","Dania","Danica","Danice","Daniela","Daniele","Daniella","Danielle","Danika","Danila","Danit","Danita","Danna","Danni","Dannie","Danny","Dannye","Danya","Danyelle","Danyette","Daphene","Daphna","Daphne","Dara","Darb","Darbie","Darby","Darcee","Darcey","Darci","Darcie","Darcy","Darda","Dareen","Darell","Darelle","Dari","Daria","Darice","Darla","Darleen","Darlene","Darline","Darlleen","Daron","Darrelle","Darryl","Darsey","Darsie","Darya","Daryl","Daryn","Dasha","Dasi","Dasie","Dasya","Datha","Daune","Daveen","Daveta","Davida","Davina","Davine","Davita","Dawn","Dawna","Dayle","Dayna","Ddene","De","Deana","Deane","Deanna","Deanne","Deb","Debbi","Debbie","Debby","Debee","Debera","Debi","Debor","Debora","Deborah","Debra","Dede","Dedie","Dedra","Dee","Dee Dee","Deeann","Deeanne","Deedee","Deena","Deerdre","Deeyn","Dehlia","Deidre","Deina","Deirdre","Del","Dela","Delcina","Delcine","Delia","Delila","Delilah","Delinda","Dell","Della","Delly","Delora","Delores","Deloria","Deloris","Delphine","Delphinia","Demeter","Demetra","Demetria","Demetris","Dena","Deni","Denice","Denise","Denna","Denni","Dennie","Denny","Deny","Denys","Denyse","Deonne","Desdemona","Desirae","Desiree","Desiri","Deva","Devan","Devi","Devin","Devina","Devinne","Devon","Devondra","Devonna","Devonne","Devora","Di","Diahann","Dian","Diana","Diandra","Diane","Diane-Marie","Dianemarie","Diann","Dianna","Dianne","Diannne","Didi","Dido","Diena","Dierdre","Dina","Dinah","Dinnie","Dinny","Dion","Dione","Dionis","Dionne","Dita","Dix","Dixie","Dniren","Dode","Dodi","Dodie","Dody","Doe","Doll","Dolley","Dolli","Dollie","Dolly","Dolores","Dolorita","Doloritas","Domeniga","Dominga","Domini","Dominica","Dominique","Dona","Donella","Donelle","Donetta","Donia","Donica","Donielle","Donna","Donnamarie","Donni","Donnie","Donny","Dora","Doralia","Doralin","Doralyn","Doralynn","Doralynne","Dore","Doreen","Dorelia","Dorella","Dorelle","Dorena","Dorene","Doretta","Dorette","Dorey","Dori","Doria","Dorian","Dorice","Dorie","Dorine","Doris","Dorisa","Dorise","Dorita","Doro","Dorolice","Dorolisa","Dorotea","Doroteya","Dorothea","Dorothee","Dorothy","Dorree","Dorri","Dorrie","Dorris","Dorry","Dorthea","Dorthy","Dory","Dosi","Dot","Doti","Dotti","Dottie","Dotty","Dre","Dreddy","Dredi","Drona","Dru","Druci","Drucie","Drucill","Drucy","Drusi","Drusie","Drusilla","Drusy","Dulce","Dulcea","Dulci","Dulcia","Dulciana","Dulcie","Dulcine","Dulcinea","Dulcy","Dulsea","Dusty","Dyan","Dyana","Dyane","Dyann","Dyanna","Dyanne","Dyna","Dynah","Eachelle","Eada","Eadie","Eadith","Ealasaid","Eartha","Easter","Eba","Ebba","Ebonee","Ebony","Eda","Eddi","Eddie","Eddy","Ede","Edee","Edeline","Eden","Edi","Edie","Edin","Edita","Edith","Editha","Edithe","Ediva","Edna","Edwina","Edy","Edyth","Edythe","Effie","Eileen","Eilis","Eimile","Eirena","Ekaterina","Elaina","Elaine","Elana","Elane","Elayne","Elberta","Elbertina","Elbertine","Eleanor","Eleanora","Eleanore","Electra","Eleen","Elena","Elene","Eleni","Elenore","Eleonora","Eleonore","Elfie","Elfreda","Elfrida","Elfrieda","Elga","Elianora","Elianore","Elicia","Elie","Elinor","Elinore","Elisa","Elisabet","Elisabeth","Elisabetta","Elise","Elisha","Elissa","Elita","Eliza","Elizabet","Elizabeth","Elka","Elke","Ella","Elladine","Elle","Ellen","Ellene","Ellette","Elli","Ellie","Ellissa","Elly","Ellyn","Ellynn","Elmira","Elna","Elnora","Elnore","Eloisa","Eloise","Elonore","Elora","Elsa","Elsbeth","Else","Elset","Elsey","Elsi","Elsie","Elsinore","Elspeth","Elsy","Elva","Elvera","Elvina","Elvira","Elwira","Elyn","Elyse","Elysee","Elysha","Elysia","Elyssa","Em","Ema","Emalee","Emalia","Emelda","Emelia","Emelina","Emeline","Emelita","Emelyne","Emera","Emilee","Emili","Emilia","Emilie","Emiline","Emily","Emlyn","Emlynn","Emlynne","Emma","Emmalee","Emmaline","Emmalyn","Emmalynn","Emmalynne","Emmeline","Emmey","Emmi","Emmie","Emmy","Emmye","Emogene","Emyle","Emylee","Engracia","Enid","Enrica","Enrichetta","Enrika","Enriqueta","Eolanda","Eolande","Eran","Erda","Erena","Erica","Ericha","Ericka","Erika","Erin","Erina","Erinn","Erinna","Erma","Ermengarde","Ermentrude","Ermina","Erminia","Erminie","Erna","Ernaline","Ernesta","Ernestine","Ertha","Eryn","Esma","Esmaria","Esme","Esmeralda","Essa","Essie","Essy","Esta","Estel","Estele","Estell","Estella","Estelle","Ester","Esther","Estrella","Estrellita","Ethel","Ethelda","Ethelin","Ethelind","Etheline","Ethelyn","Ethyl","Etta","Etti","Ettie","Etty","Eudora","Eugenia","Eugenie","Eugine","Eula","Eulalie","Eunice","Euphemia","Eustacia","Eva","Evaleen","Evangelia","Evangelin","Evangelina","Evangeline","Evania","Evanne","Eve","Eveleen","Evelina","Eveline","Evelyn","Evey","Evie","Evita","Evonne","Evvie","Evvy","Evy","Eyde","Eydie","Ezmeralda","Fae","Faina","Faith","Fallon","Fan","Fanchette","Fanchon","Fancie","Fancy","Fanechka","Fania","Fanni","Fannie","Fanny","Fanya","Fara","Farah","Farand","Farica","Farra","Farrah","Farrand","Faun","Faunie","Faustina","Faustine","Fawn","Fawne","Fawnia","Fay","Faydra","Faye","Fayette","Fayina","Fayre","Fayth","Faythe","Federica","Fedora","Felecia","Felicdad","Felice","Felicia","Felicity","Felicle","Felipa","Felisha","Felita","Feliza","Fenelia","Feodora","Ferdinanda","Ferdinande","Fern","Fernanda","Fernande","Fernandina","Ferne","Fey","Fiann","Fianna","Fidela","Fidelia","Fidelity","Fifi","Fifine","Filia","Filide","Filippa","Fina","Fiona","Fionna","Fionnula","Fiorenze","Fleur","Fleurette","Flo","Flor","Flora","Florance","Flore","Florella","Florence","Florencia","Florentia","Florenza","Florette","Flori","Floria","Florida","Florie","Florina","Florinda","Floris","Florri","Florrie","Florry","Flory","Flossi","Flossie","Flossy","Flss","Fran","Francene","Frances","Francesca","Francine","Francisca","Franciska","Francoise","Francyne","Frank","Frankie","Franky","Franni","Frannie","Franny","Frayda","Fred","Freda","Freddi","Freddie","Freddy","Fredelia","Frederica","Fredericka","Frederique","Fredi","Fredia","Fredra","Fredrika","Freida","Frieda","Friederike","Fulvia","Gabbey","Gabbi","Gabbie","Gabey","Gabi","Gabie","Gabriel","Gabriela","Gabriell","Gabriella","Gabrielle","Gabriellia","Gabrila","Gaby","Gae","Gael","Gail","Gale","Gale","Galina","Garland","Garnet","Garnette","Gates","Gavra","Gavrielle","Gay","Gaye","Gayel","Gayla","Gayle","Gayleen","Gaylene","Gaynor","Gelya","Gena","Gene","Geneva","Genevieve","Genevra","Genia","Genna","Genni","Gennie","Gennifer","Genny","Genovera","Genvieve","George","Georgeanna","Georgeanne","Georgena","Georgeta","Georgetta","Georgette","Georgia","Georgiana","Georgianna","Georgianne","Georgie","Georgina","Georgine","Geralda","Geraldine","Gerda","Gerhardine","Geri","Gerianna","Gerianne","Gerladina","Germain","Germaine","Germana","Gerri","Gerrie","Gerrilee","Gerry","Gert","Gerta","Gerti","Gertie","Gertrud","Gertruda","Gertrude","Gertrudis","Gerty","Giacinta","Giana","Gianina","Gianna","Gigi","Gilberta","Gilberte","Gilbertina","Gilbertine","Gilda","Gilemette","Gill","Gillan","Gilli","Gillian","Gillie","Gilligan","Gilly","Gina","Ginelle","Ginevra","Ginger","Ginni","Ginnie","Ginnifer","Ginny","Giorgia","Giovanna","Gipsy","Giralda","Gisela","Gisele","Gisella","Giselle","Giuditta","Giulia","Giulietta","Giustina","Gizela","Glad","Gladi","Gladys","Gleda","Glen","Glenda","Glenine","Glenn","Glenna","Glennie","Glennis","Glori","Gloria","Gloriana","Gloriane","Glory","Glyn","Glynda","Glynis","Glynnis","Gnni","Godiva","Golda","Goldarina","Goldi","Goldia","Goldie","Goldina","Goldy","Grace","Gracia","Gracie","Grata","Gratia","Gratiana","Gray","Grayce","Grazia","Greer","Greta","Gretal","Gretchen","Grete","Gretel","Grethel","Gretna","Gretta","Grier","Griselda","Grissel","Guendolen","Guenevere","Guenna","Guglielma","Gui","Guillema","Guillemette","Guinevere","Guinna","Gunilla","Gus","Gusella","Gussi","Gussie","Gussy","Gusta","Gusti","Gustie","Gusty","Gwen","Gwendolen","Gwendolin","Gwendolyn","Gweneth","Gwenette","Gwenneth","Gwenni","Gwennie","Gwenny","Gwenora","Gwenore","Gwyn","Gwyneth","Gwynne","Gypsy","Hadria","Hailee","Haily","Haleigh","Halette","Haley","Hali","Halie","Halimeda","Halley","Halli","Hallie","Hally","Hana","Hanna","Hannah","Hanni","Hannie","Hannis","Hanny","Happy","Harlene","Harley","Harli","Harlie","Harmonia","Harmonie","Harmony","Harri","Harrie","Harriet","Harriett","Harrietta","Harriette","Harriot","Harriott","Hatti","Hattie","Hatty","Hayley","Hazel","Heath","Heather","Heda","Hedda","Heddi","Heddie","Hedi","Hedvig","Hedvige","Hedwig","Hedwiga","Hedy","Heida","Heidi","Heidie","Helaina","Helaine","Helen","Helen-Elizabeth","Helena","Helene","Helenka","Helga","Helge","Helli","Heloise","Helsa","Helyn","Hendrika","Henka","Henrie","Henrieta","Henrietta","Henriette","Henryetta","Hephzibah","Hermia","Hermina","Hermine","Herminia","Hermione","Herta","Hertha","Hester","Hesther","Hestia","Hetti","Hettie","Hetty","Hilary","Hilda","Hildagard","Hildagarde","Hilde","Hildegaard","Hildegarde","Hildy","Hillary","Hilliary","Hinda","Holli","Hollie","Holly","Holly-Anne","Hollyanne","Honey","Honor","Honoria","Hope","Horatia","Hortense","Hortensia","Hulda","Hyacinth","Hyacintha","Hyacinthe","Hyacinthia","Hyacinthie","Hynda","Ianthe","Ibbie","Ibby","Ida","Idalia","Idalina","Idaline","Idell","Idelle","Idette","Ileana","Ileane","Ilene","Ilise","Ilka","Illa","Ilsa","Ilse","Ilysa","Ilyse","Ilyssa","Imelda","Imogen","Imogene","Imojean","Ina","Indira","Ines","Inesita","Inessa","Inez","Inga","Ingaberg","Ingaborg","Inge","Ingeberg","Ingeborg","Inger","Ingrid","Ingunna","Inna","Iolande","Iolanthe","Iona","Iormina","Ira","Irena","Irene","Irina","Iris","Irita","Irma","Isa","Isabel","Isabelita","Isabella","Isabelle","Isadora","Isahella","Iseabal","Isidora","Isis","Isobel","Issi","Issie","Issy","Ivett","Ivette","Ivie","Ivonne","Ivory","Ivy","Izabel","Jacenta","Jacinda","Jacinta","Jacintha","Jacinthe","Jackelyn","Jacki","Jackie","Jacklin","Jacklyn","Jackquelin","Jackqueline","Jacky","Jaclin","Jaclyn","Jacquelin","Jacqueline","Jacquelyn","Jacquelynn","Jacquenetta","Jacquenette","Jacquetta","Jacquette","Jacqui","Jacquie","Jacynth","Jada","Jade","Jaime","Jaimie","Jaine","Jami","Jamie","Jamima","Jammie","Jan","Jana","Janaya","Janaye","Jandy","Jane","Janean","Janeczka","Janeen","Janel","Janela","Janella","Janelle","Janene","Janenna","Janessa","Janet","Janeta","Janetta","Janette","Janeva","Janey","Jania","Janice","Janie","Janifer","Janina","Janine","Janis","Janith","Janka","Janna","Jannel","Jannelle","Janot","Jany","Jaquelin","Jaquelyn","Jaquenetta","Jaquenette","Jaquith","Jasmin","Jasmina","Jasmine","Jayme","Jaymee","Jayne","Jaynell","Jazmin","Jean","Jeana","Jeane","Jeanelle","Jeanette","Jeanie","Jeanine","Jeanna","Jeanne","Jeannette","Jeannie","Jeannine","Jehanna","Jelene","Jemie","Jemima","Jemimah","Jemmie","Jemmy","Jen","Jena","Jenda","Jenelle","Jeni","Jenica","Jeniece","Jenifer","Jeniffer","Jenilee","Jenine","Jenn","Jenna","Jennee","Jennette","Jenni","Jennica","Jennie","Jennifer","Jennilee","Jennine","Jenny","Jeralee","Jere","Jeri","Jermaine","Jerrie","Jerrilee","Jerrilyn","Jerrine","Jerry","Jerrylee","Jess","Jessa","Jessalin","Jessalyn","Jessamine","Jessamyn","Jesse","Jesselyn","Jessi","Jessica","Jessie","Jessika","Jessy","Jewel","Jewell","Jewelle","Jill","Jillana","Jillane","Jillayne","Jilleen","Jillene","Jilli","Jillian","Jillie","Jilly","Jinny","Jo","Jo Ann","Jo-Ann","Jo-Anne","Joan","Joana","Joane","Joanie","Joann","Joanna","Joanne","Joannes","Jobey","Jobi","Jobie","Jobina","Joby","Jobye","Jobyna","Jocelin","Joceline","Jocelyn","Jocelyne","Jodee","Jodi","Jodie","Jody","Joeann","Joela","Joelie","Joell","Joella","Joelle","Joellen","Joelly","Joellyn","Joelynn","Joete","Joey","Johanna","Johannah","Johna","Johnath","Johnette","Johnna","Joice","Jojo","Jolee","Joleen","Jolene","Joletta","Joli","Jolie","Joline","Joly","Jolyn","Jolynn","Jonell","Joni","Jonie","Jonis","Jordain","Jordan","Jordana","Jordanna","Jorey","Jori","Jorie","Jorrie","Jorry","Joscelin","Josee","Josefa","Josefina","Josepha","Josephina","Josephine","Josey","Josi","Josie","Josselyn","Josy","Jourdan","Joy","Joya","Joyan","Joyann","Joyce","Joycelin","Joye","Jsandye","Juana","Juanita","Judi","Judie","Judith","Juditha","Judy","Judye","Juieta","Julee","Juli","Julia","Juliana","Juliane","Juliann","Julianna","Julianne","Julie","Julienne","Juliet","Julieta","Julietta","Juliette","Julina","Juline","Julissa","Julita","June","Junette","Junia","Junie","Junina","Justina","Justine","Justinn","Jyoti","Kacey","Kacie","Kacy","Kaela","Kai","Kaia","Kaila","Kaile","Kailey","Kaitlin","Kaitlyn","Kaitlynn","Kaja","Kakalina","Kala","Kaleena","Kali","Kalie","Kalila","Kalina","Kalinda","Kalindi","Kalli","Kally","Kameko","Kamila","Kamilah","Kamillah","Kandace","Kandy","Kania","Kanya","Kara","Kara-Lynn","Karalee","Karalynn","Kare","Karee","Karel","Karen","Karena","Kari","Karia","Karie","Karil","Karilynn","Karin","Karina","Karine","Kariotta","Karisa","Karissa","Karita","Karla","Karlee","Karleen","Karlen","Karlene","Karlie","Karlotta","Karlotte","Karly","Karlyn","Karmen","Karna","Karol","Karola","Karole","Karolina","Karoline","Karoly","Karon","Karrah","Karrie","Karry","Kary","Karyl","Karylin","Karyn","Kasey","Kass","Kassandra","Kassey","Kassi","Kassia","Kassie","Kat","Kata","Katalin","Kate","Katee","Katerina","Katerine","Katey","Kath","Katha","Katharina","Katharine","Katharyn","Kathe","Katherina","Katherine","Katheryn","Kathi","Kathie","Kathleen","Kathlin","Kathrine","Kathryn","Kathryne","Kathy","Kathye","Kati","Katie","Katina","Katine","Katinka","Katleen","Katlin","Katrina","Katrine","Katrinka","Katti","Kattie","Katuscha","Katusha","Katy","Katya","Kay","Kaycee","Kaye","Kayla","Kayle","Kaylee","Kayley","Kaylil","Kaylyn","Keeley","Keelia","Keely","Kelcey","Kelci","Kelcie","Kelcy","Kelila","Kellen","Kelley","Kelli","Kellia","Kellie","Kellina","Kellsie","Kelly","Kellyann","Kelsey","Kelsi","Kelsy","Kendra","Kendre","Kenna","Keri","Keriann","Kerianne","Kerri","Kerrie","Kerrill","Kerrin","Kerry","Kerstin","Kesley","Keslie","Kessia","Kessiah","Ketti","Kettie","Ketty","Kevina","Kevyn","Ki","Kiah","Kial","Kiele","Kiersten","Kikelia","Kiley","Kim","Kimberlee","Kimberley","Kimberli","Kimberly","Kimberlyn","Kimbra","Kimmi","Kimmie","Kimmy","Kinna","Kip","Kipp","Kippie","Kippy","Kira","Kirbee","Kirbie","Kirby","Kiri","Kirsten","Kirsteni","Kirsti","Kirstin","Kirstyn","Kissee","Kissiah","Kissie","Kit","Kitti","Kittie","Kitty","Kizzee","Kizzie","Klara","Klarika","Klarrisa","Konstance","Konstanze","Koo","Kora","Koral","Koralle","Kordula","Kore","Korella","Koren","Koressa","Kori","Korie","Korney","Korrie","Korry","Kris","Krissie","Krissy","Krista","Kristal","Kristan","Kriste","Kristel","Kristen","Kristi","Kristien","Kristin","Kristina","Kristine","Kristy","Kristyn","Krysta","Krystal","Krystalle","Krystle","Krystyna","Kyla","Kyle","Kylen","Kylie","Kylila","Kylynn","Kym","Kynthia","Kyrstin","La Verne","Lacee","Lacey","Lacie","Lacy","Ladonna","Laetitia","Laina","Lainey","Lana","Lanae","Lane","Lanette","Laney","Lani","Lanie","Lanita","Lanna","Lanni","Lanny","Lara","Laraine","Lari","Larina","Larine","Larisa","Larissa","Lark","Laryssa","Latashia","Latia","Latisha","Latrena","Latrina","Laura","Lauraine","Laural","Lauralee","Laure","Lauree","Laureen","Laurel","Laurella","Lauren","Laurena","Laurene","Lauretta","Laurette","Lauri","Laurianne","Laurice","Laurie","Lauryn","Lavena","Laverna","Laverne","Lavina","Lavinia","Lavinie","Layla","Layne","Layney","Lea","Leah","Leandra","Leann","Leanna","Leanor","Leanora","Lebbie","Leda","Lee","Leeann","Leeanne","Leela","Leelah","Leena","Leesa","Leese","Legra","Leia","Leigh","Leigha","Leila","Leilah","Leisha","Lela","Lelah","Leland","Lelia","Lena","Lenee","Lenette","Lenka","Lenna","Lenora","Lenore","Leodora","Leoine","Leola","Leoline","Leona","Leonanie","Leone","Leonelle","Leonie","Leonora","Leonore","Leontine","Leontyne","Leora","Leshia","Lesley","Lesli","Leslie","Lesly","Lesya","Leta","Lethia","Leticia","Letisha","Letitia","Letizia","Letta","Letti","Lettie","Letty","Lexi","Lexie","Lexine","Lexis","Lexy","Leyla","Lezlie","Lia","Lian","Liana","Liane","Lianna","Lianne","Lib","Libbey","Libbi","Libbie","Libby","Licha","Lida","Lidia","Liesa","Lil","Lila","Lilah","Lilas","Lilia","Lilian","Liliane","Lilias","Lilith","Lilla","Lilli","Lillian","Lillis","Lilllie","Lilly","Lily","Lilyan","Lin","Lina","Lind","Linda","Lindi","Lindie","Lindsay","Lindsey","Lindsy","Lindy","Linea","Linell","Linet","Linette","Linn","Linnea","Linnell","Linnet","Linnie","Linzy","Lira","Lisa","Lisabeth","Lisbeth","Lise","Lisetta","Lisette","Lisha","Lishe","Lissa","Lissi","Lissie","Lissy","Lita","Liuka","Liv","Liva","Livia","Livvie","Livvy","Livvyy","Livy","Liz","Liza","Lizabeth","Lizbeth","Lizette","Lizzie","Lizzy","Loella","Lois","Loise","Lola","Loleta","Lolita","Lolly","Lona","Lonee","Loni","Lonna","Lonni","Lonnie","Lora","Lorain","Loraine","Loralee","Loralie","Loralyn","Loree","Loreen","Lorelei","Lorelle","Loren","Lorena","Lorene","Lorenza","Loretta","Lorette","Lori","Loria","Lorianna","Lorianne","Lorie","Lorilee","Lorilyn","Lorinda","Lorine","Lorita","Lorna","Lorne","Lorraine","Lorrayne","Lorri","Lorrie","Lorrin","Lorry","Lory","Lotta","Lotte","Lotti","Lottie","Lotty","Lou","Louella","Louisa","Louise","Louisette","Loutitia","Lu","Luce","Luci","Lucia","Luciana","Lucie","Lucienne","Lucila","Lucilia","Lucille","Lucina","Lucinda","Lucine","Lucita","Lucky","Lucretia","Lucy","Ludovika","Luella","Luelle","Luisa","Luise","Lula","Lulita","Lulu","Lura","Lurette","Lurleen","Lurlene","Lurline","Lusa","Luz","Lyda","Lydia","Lydie","Lyn","Lynda","Lynde","Lyndel","Lyndell","Lyndsay","Lyndsey","Lyndsie","Lyndy","Lynea","Lynelle","Lynett","Lynette","Lynn","Lynna","Lynne","Lynnea","Lynnell","Lynnelle","Lynnet","Lynnett","Lynnette","Lynsey","Lyssa","Mab","Mabel","Mabelle","Mable","Mada","Madalena","Madalyn","Maddalena","Maddi","Maddie","Maddy","Madel","Madelaine","Madeleine","Madelena","Madelene","Madelin","Madelina","Madeline","Madella","Madelle","Madelon","Madelyn","Madge","Madlen","Madlin","Madonna","Mady","Mae","Maegan","Mag","Magda","Magdaia","Magdalen","Magdalena","Magdalene","Maggee","Maggi","Maggie","Maggy","Mahala","Mahalia","Maia","Maible","Maiga","Maighdiln","Mair","Maire","Maisey","Maisie","Maitilde","Mala","Malanie","Malena","Malia","Malina","Malinda","Malinde","Malissa","Malissia","Mallissa","Mallorie","Mallory","Malorie","Malory","Malva","Malvina","Malynda","Mame","Mamie","Manda","Mandi","Mandie","Mandy","Manon","Manya","Mara","Marabel","Marcela","Marcelia","Marcella","Marcelle","Marcellina","Marcelline","Marchelle","Marci","Marcia","Marcie","Marcile","Marcille","Marcy","Mareah","Maren","Marena","Maressa","Marga","Margalit","Margalo","Margaret","Margareta","Margarete","Margaretha","Margarethe","Margaretta","Margarette","Margarita","Margaux","Marge","Margeaux","Margery","Marget","Margette","Margi","Margie","Margit","Margo","Margot","Margret","Marguerite","Margy","Mari","Maria","Mariam","Marian","Mariana","Mariann","Marianna","Marianne","Maribel","Maribelle","Maribeth","Marice","Maridel","Marie","Marie-Ann","Marie-Jeanne","Marieann","Mariejeanne","Mariel","Mariele","Marielle","Mariellen","Marietta","Mariette","Marigold","Marijo","Marika","Marilee","Marilin","Marillin","Marilyn","Marin","Marina","Marinna","Marion","Mariquilla","Maris","Marisa","Mariska","Marissa","Marita","Maritsa","Mariya","Marj","Marja","Marje","Marji","Marjie","Marjorie","Marjory","Marjy","Marketa","Marla","Marlane","Marleah","Marlee","Marleen","Marlena","Marlene","Marley","Marlie","Marline","Marlo","Marlyn","Marna","Marne","Marney","Marni","Marnia","Marnie","Marquita","Marrilee","Marris","Marrissa","Marsha","Marsiella","Marta","Martelle","Martguerita","Martha","Marthe","Marthena","Marti","Martica","Martie","Martina","Martita","Marty","Martynne","Mary","Marya","Maryann","Maryanna","Maryanne","Marybelle","Marybeth","Maryellen","Maryjane","Maryjo","Maryl","Marylee","Marylin","Marylinda","Marylou","Marylynne","Maryrose","Marys","Marysa","Masha","Matelda","Mathilda","Mathilde","Matilda","Matilde","Matti","Mattie","Matty","Maud","Maude","Maudie","Maura","Maure","Maureen","Maureene","Maurene","Maurine","Maurise","Maurita","Maurizia","Mavis","Mavra","Max","Maxi","Maxie","Maxine","Maxy","May","Maybelle","Maye","Mead","Meade","Meagan","Meaghan","Meara","Mechelle","Meg","Megan","Megen","Meggi","Meggie","Meggy","Meghan","Meghann","Mehetabel","Mei","Mel","Mela","Melamie","Melania","Melanie","Melantha","Melany","Melba","Melesa","Melessa","Melicent","Melina","Melinda","Melinde","Melisa","Melisande","Melisandra","Melisenda","Melisent","Melissa","Melisse","Melita","Melitta","Mella","Melli","Mellicent","Mellie","Mellisa","Mellisent","Melloney","Melly","Melodee","Melodie","Melody","Melonie","Melony","Melosa","Melva","Mercedes","Merci","Mercie","Mercy","Meredith","Meredithe","Meridel","Meridith","Meriel","Merilee","Merilyn","Meris","Merissa","Merl","Merla","Merle","Merlina","Merline","Merna","Merola","Merralee","Merridie","Merrie","Merrielle","Merrile","Merrilee","Merrili","Merrill","Merrily","Merry","Mersey","Meryl","Meta","Mia","Micaela","Michaela","Michaelina","Michaeline","Michaella","Michal","Michel","Michele","Michelina","Micheline","Michell","Michelle","Micki","Mickie","Micky","Midge","Mignon","Mignonne","Miguela","Miguelita","Mikaela","Mil","Mildred","Mildrid","Milena","Milicent","Milissent","Milka","Milli","Millicent","Millie","Millisent","Milly","Milzie","Mimi","Min","Mina","Minda","Mindy","Minerva","Minetta","Minette","Minna","Minnaminnie","Minne","Minni","Minnie","Minnnie","Minny","Minta","Miof Mela","Miquela","Mira","Mirabel","Mirabella","Mirabelle","Miran","Miranda","Mireielle","Mireille","Mirella","Mirelle","Miriam","Mirilla","Mirna","Misha","Missie","Missy","Misti","Misty","Mitzi","Modesta","Modestia","Modestine","Modesty","Moina","Moira","Moll","Mollee","Molli","Mollie","Molly","Mommy","Mona","Monah","Monica","Monika","Monique","Mora","Moreen","Morena","Morgan","Morgana","Morganica","Morganne","Morgen","Moria","Morissa","Morna","Moselle","Moyna","Moyra","Mozelle","Muffin","Mufi","Mufinella","Muire","Mureil","Murial","Muriel","Murielle","Myra","Myrah","Myranda","Myriam","Myrilla","Myrle","Myrlene","Myrna","Myrta","Myrtia","Myrtice","Myrtie","Myrtle","Nada","Nadean","Nadeen","Nadia","Nadine","Nadiya","Nady","Nadya","Nalani","Nan","Nana","Nananne","Nance","Nancee","Nancey","Nanci","Nancie","Nancy","Nanete","Nanette","Nani","Nanice","Nanine","Nannette","Nanni","Nannie","Nanny","Nanon","Naoma","Naomi","Nara","Nari","Nariko","Nat","Nata","Natala","Natalee","Natalie","Natalina","Nataline","Natalya","Natasha","Natassia","Nathalia","Nathalie","Natividad","Natka","Natty","Neala","Neda","Nedda","Nedi","Neely","Neila","Neile","Neilla","Neille","Nelia","Nelie","Nell","Nelle","Nelli","Nellie","Nelly","Nerissa","Nerita","Nert","Nerta","Nerte","Nerti","Nertie","Nerty","Nessa","Nessi","Nessie","Nessy","Nesta","Netta","Netti","Nettie","Nettle","Netty","Nevsa","Neysa","Nichol","Nichole","Nicholle","Nicki","Nickie","Nicky","Nicol","Nicola","Nicole","Nicolea","Nicolette","Nicoli","Nicolina","Nicoline","Nicolle","Nikaniki","Nike","Niki","Nikki","Nikkie","Nikoletta","Nikolia","Nina","Ninetta","Ninette","Ninnetta","Ninnette","Ninon","Nissa","Nisse","Nissie","Nissy","Nita","Nixie","Noami","Noel","Noelani","Noell","Noella","Noelle","Noellyn","Noelyn","Noemi","Nola","Nolana","Nolie","Nollie","Nomi","Nona","Nonah","Noni","Nonie","Nonna","Nonnah","Nora","Norah","Norean","Noreen","Norene","Norina","Norine","Norma","Norri","Norrie","Norry","Novelia","Nydia","Nyssa","Octavia","Odele","Odelia","Odelinda","Odella","Odelle","Odessa","Odetta","Odette","Odilia","Odille","Ofelia","Ofella","Ofilia","Ola","Olenka","Olga","Olia","Olimpia","Olive","Olivette","Olivia","Olivie","Oliy","Ollie","Olly","Olva","Olwen","Olympe","Olympia","Olympie","Ondrea","Oneida","Onida","Oona","Opal","Opalina","Opaline","Ophelia","Ophelie","Ora","Oralee","Oralia","Oralie","Oralla","Oralle","Orel","Orelee","Orelia","Orelie","Orella","Orelle","Oriana","Orly","Orsa","Orsola","Ortensia","Otha","Othelia","Othella","Othilia","Othilie","Ottilie","Page","Paige","Paloma","Pam","Pamela","Pamelina","Pamella","Pammi","Pammie","Pammy","Pandora","Pansie","Pansy","Paola","Paolina","Papagena","Pat","Patience","Patrica","Patrice","Patricia","Patrizia","Patsy","Patti","Pattie","Patty","Paula","Paule","Pauletta","Paulette","Pauli","Paulie","Paulina","Pauline","Paulita","Pauly","Pavia","Pavla","Pearl","Pearla","Pearle","Pearline","Peg","Pegeen","Peggi","Peggie","Peggy","Pen","Penelopa","Penelope","Penni","Pennie","Penny","Pepi","Pepita","Peri","Peria","Perl","Perla","Perle","Perri","Perrine","Perry","Persis","Pet","Peta","Petra","Petrina","Petronella","Petronia","Petronilla","Petronille","Petunia","Phaedra","Phaidra","Phebe","Phedra","Phelia","Phil","Philipa","Philippa","Philippe","Philippine","Philis","Phillida","Phillie","Phillis","Philly","Philomena","Phoebe","Phylis","Phyllida","Phyllis","Phyllys","Phylys","Pia","Pier","Pierette","Pierrette","Pietra","Piper","Pippa","Pippy","Polly","Pollyanna","Pooh","Poppy","Portia","Pris","Prisca","Priscella","Priscilla","Prissie","Pru","Prudence","Prudi","Prudy","Prue","Queenie","Quentin","Querida","Quinn","Quinta","Quintana","Quintilla","Quintina","Rachael","Rachel","Rachele","Rachelle","Rae","Raeann","Raf","Rafa","Rafaela","Rafaelia","Rafaelita","Rahal","Rahel","Raina","Raine","Rakel","Ralina","Ramona","Ramonda","Rana","Randa","Randee","Randene","Randi","Randie","Randy","Ranee","Rani","Rania","Ranice","Ranique","Ranna","Raphaela","Raquel","Raquela","Rasia","Rasla","Raven","Ray","Raychel","Raye","Rayna","Raynell","Rayshell","Rea","Reba","Rebbecca","Rebe","Rebeca","Rebecca","Rebecka","Rebeka","Rebekah","Rebekkah","Ree","Reeba","Reena","Reeta","Reeva","Regan","Reggi","Reggie","Regina","Regine","Reiko","Reina","Reine","Remy","Rena","Renae","Renata","Renate","Rene","Renee","Renell","Renelle","Renie","Rennie","Reta","Retha","Revkah","Rey","Reyna","Rhea","Rheba","Rheta","Rhetta","Rhiamon","Rhianna","Rhianon","Rhoda","Rhodia","Rhodie","Rhody","Rhona","Rhonda","Riane","Riannon","Rianon","Rica","Ricca","Rici","Ricki","Rickie","Ricky","Riki","Rikki","Rina","Risa","Rita","Riva","Rivalee","Rivi","Rivkah","Rivy","Roana","Roanna","Roanne","Robbi","Robbie","Robbin","Robby","Robbyn","Robena","Robenia","Roberta","Robin","Robina","Robinet","Robinett","Robinetta","Robinette","Robinia","Roby","Robyn","Roch","Rochell","Rochella","Rochelle","Rochette","Roda","Rodi","Rodie","Rodina","Rois","Romola","Romona","Romonda","Romy","Rona","Ronalda","Ronda","Ronica","Ronna","Ronni","Ronnica","Ronnie","Ronny","Roobbie","Rora","Rori","Rorie","Rory","Ros","Rosa","Rosabel","Rosabella","Rosabelle","Rosaleen","Rosalia","Rosalie","Rosalind","Rosalinda","Rosalinde","Rosaline","Rosalyn","Rosalynd","Rosamond","Rosamund","Rosana","Rosanna","Rosanne","Rose","Roseann","Roseanna","Roseanne","Roselia","Roselin","Roseline","Rosella","Roselle","Rosemaria","Rosemarie","Rosemary","Rosemonde","Rosene","Rosetta","Rosette","Roshelle","Rosie","Rosina","Rosita","Roslyn","Rosmunda","Rosy","Row","Rowe","Rowena","Roxana","Roxane","Roxanna","Roxanne","Roxi","Roxie","Roxine","Roxy","Roz","Rozalie","Rozalin","Rozamond","Rozanna","Rozanne","Roze","Rozele","Rozella","Rozelle","Rozina","Rubetta","Rubi","Rubia","Rubie","Rubina","Ruby","Ruperta","Ruth","Ruthann","Ruthanne","Ruthe","Ruthi","Ruthie","Ruthy","Ryann","Rycca","Saba","Sabina","Sabine","Sabra","Sabrina","Sacha","Sada","Sadella","Sadie","Sadye","Saidee","Sal","Salaidh","Sallee","Salli","Sallie","Sally","Sallyann","Sallyanne","Saloma","Salome","Salomi","Sam","Samantha","Samara","Samaria","Sammy","Sande","Sandi","Sandie","Sandra","Sandy","Sandye","Sapphira","Sapphire","Sara","Sara-Ann","Saraann","Sarah","Sarajane","Saree","Sarena","Sarene","Sarette","Sari","Sarina","Sarine","Sarita","Sascha","Sasha","Sashenka","Saudra","Saundra","Savina","Sayre","Scarlet","Scarlett","Sean","Seana","Seka","Sela","Selena","Selene","Selestina","Selia","Selie","Selina","Selinda","Seline","Sella","Selle","Selma","Sena","Sephira","Serena","Serene","Shae","Shaina","Shaine","Shalna","Shalne","Shana","Shanda","Shandee","Shandeigh","Shandie","Shandra","Shandy","Shane","Shani","Shanie","Shanna","Shannah","Shannen","Shannon","Shanon","Shanta","Shantee","Shara","Sharai","Shari","Sharia","Sharity","Sharl","Sharla","Sharleen","Sharlene","Sharline","Sharon","Sharona","Sharron","Sharyl","Shaun","Shauna","Shawn","Shawna","Shawnee","Shay","Shayla","Shaylah","Shaylyn","Shaylynn","Shayna","Shayne","Shea","Sheba","Sheela","Sheelagh","Sheelah","Sheena","Sheeree","Sheila","Sheila-Kathryn","Sheilah","Shel","Shela","Shelagh","Shelba","Shelbi","Shelby","Shelia","Shell","Shelley","Shelli","Shellie","Shelly","Shena","Sher","Sheree","Sheri","Sherie","Sherill","Sherilyn","Sherline","Sherri","Sherrie","Sherry","Sherye","Sheryl","Shina","Shir","Shirl","Shirlee","Shirleen","Shirlene","Shirley","Shirline","Shoshana","Shoshanna","Siana","Sianna","Sib","Sibbie","Sibby","Sibeal","Sibel","Sibella","Sibelle","Sibilla","Sibley","Sibyl","Sibylla","Sibylle","Sidoney","Sidonia","Sidonnie","Sigrid","Sile","Sileas","Silva","Silvana","Silvia","Silvie","Simona","Simone","Simonette","Simonne","Sindee","Siobhan","Sioux","Siouxie","Sisely","Sisile","Sissie","Sissy","Siusan","Sofia","Sofie","Sondra","Sonia","Sonja","Sonni","Sonnie","Sonnnie","Sonny","Sonya","Sophey","Sophi","Sophia","Sophie","Sophronia","Sorcha","Sosanna","Stace","Stacee","Stacey","Staci","Stacia","Stacie","Stacy","Stafani","Star","Starla","Starlene","Starlin","Starr","Stefa","Stefania","Stefanie","Steffane","Steffi","Steffie","Stella","Stepha","Stephana","Stephani","Stephanie","Stephannie","Stephenie","Stephi","Stephie","Stephine","Stesha","Stevana","Stevena","Stoddard","Storm","Stormi","Stormie","Stormy","Sue","Suellen","Sukey","Suki","Sula","Sunny","Sunshine","Susan","Susana","Susanetta","Susann","Susanna","Susannah","Susanne","Susette","Susi","Susie","Susy","Suzann","Suzanna","Suzanne","Suzette","Suzi","Suzie","Suzy","Sybil","Sybila","Sybilla","Sybille","Sybyl","Sydel","Sydelle","Sydney","Sylvia","Tabatha","Tabbatha","Tabbi","Tabbie","Tabbitha","Tabby","Tabina","Tabitha","Taffy","Talia","Tallia","Tallie","Tallou","Tallulah","Tally","Talya","Talyah","Tamar","Tamara","Tamarah","Tamarra","Tamera","Tami","Tamiko","Tamma","Tammara","Tammi","Tammie","Tammy","Tamqrah","Tamra","Tana","Tandi","Tandie","Tandy","Tanhya","Tani","Tania","Tanitansy","Tansy","Tanya","Tara","Tarah","Tarra","Tarrah","Taryn","Tasha","Tasia","Tate","Tatiana","Tatiania","Tatum","Tawnya","Tawsha","Ted","Tedda","Teddi","Teddie","Teddy","Tedi","Tedra","Teena","TEirtza","Teodora","Tera","Teresa","Terese","Teresina","Teresita","Teressa","Teri","Teriann","Terra","Terri","Terrie","Terrijo","Terry","Terrye","Tersina","Terza","Tess","Tessa","Tessi","Tessie","Tessy","Thalia","Thea","Theadora","Theda","Thekla","Thelma","Theo","Theodora","Theodosia","Theresa","Therese","Theresina","Theresita","Theressa","Therine","Thia","Thomasa","Thomasin","Thomasina","Thomasine","Tiena","Tierney","Tiertza","Tiff","Tiffani","Tiffanie","Tiffany","Tiffi","Tiffie","Tiffy","Tilda","Tildi","Tildie","Tildy","Tillie","Tilly","Tim","Timi","Timmi","Timmie","Timmy","Timothea","Tina","Tine","Tiphani","Tiphanie","Tiphany","Tish","Tisha","Tobe","Tobey","Tobi","Toby","Tobye","Toinette","Toma","Tomasina","Tomasine","Tomi","Tommi","Tommie","Tommy","Toni","Tonia","Tonie","Tony","Tonya","Tonye","Tootsie","Torey","Tori","Torie","Torrie","Tory","Tova","Tove","Tracee","Tracey","Traci","Tracie","Tracy","Trenna","Tresa","Trescha","Tressa","Tricia","Trina","Trish","Trisha","Trista","Trix","Trixi","Trixie","Trixy","Truda","Trude","Trudey","Trudi","Trudie","Trudy","Trula","Tuesday","Twila","Twyla","Tybi","Tybie","Tyne","Ula","Ulla","Ulrica","Ulrika","Ulrikaumeko","Ulrike","Umeko","Una","Ursa","Ursala","Ursola","Ursula","Ursulina","Ursuline","Uta","Val","Valaree","Valaria","Vale","Valeda","Valencia","Valene","Valenka","Valentia","Valentina","Valentine","Valera","Valeria","Valerie","Valery","Valerye","Valida","Valina","Valli","Vallie","Vally","Valma","Valry","Van","Vanda","Vanessa","Vania","Vanna","Vanni","Vannie","Vanny","Vanya","Veda","Velma","Velvet","Venita","Venus","Vera","Veradis","Vere","Verena","Verene","Veriee","Verile","Verina","Verine","Verla","Verna","Vernice","Veronica","Veronika","Veronike","Veronique","Vevay","Vi","Vicki","Vickie","Vicky","Victoria","Vida","Viki","Vikki","Vikky","Vilhelmina","Vilma","Vin","Vina","Vinita","Vinni","Vinnie","Vinny","Viola","Violante","Viole","Violet","Violetta","Violette","Virgie","Virgina","Virginia","Virginie","Vita","Vitia","Vitoria","Vittoria","Viv","Viva","Vivi","Vivia","Vivian","Viviana","Vivianna","Vivianne","Vivie","Vivien","Viviene","Vivienne","Viviyan","Vivyan","Vivyanne","Vonni","Vonnie","Vonny","Vyky","Wallie","Wallis","Walliw","Wally","Waly","Wanda","Wandie","Wandis","Waneta","Wanids","Wenda","Wendeline","Wendi","Wendie","Wendy","Wendye","Wenona","Wenonah","Whitney","Wileen","Wilhelmina","Wilhelmine","Wilie","Willa","Willabella","Willamina","Willetta","Willette","Willi","Willie","Willow","Willy","Willyt","Wilma","Wilmette","Wilona","Wilone","Wilow","Windy","Wini","Winifred","Winna","Winnah","Winne","Winni","Winnie","Winnifred","Winny","Winona","Winonah","Wren","Wrennie","Wylma","Wynn","Wynne","Wynnie","Wynny","Xaviera","Xena","Xenia","Xylia","Xylina","Yalonda","Yasmeen","Yasmin","Yelena","Yetta","Yettie","Yetty","Yevette","Ynes","Ynez","Yoko","Yolanda","Yolande","Yolane","Yolanthe","Yoshi","Yoshiko","Yovonnda","Ysabel","Yvette","Yvonne","Zabrina","Zahara","Zandra","Zaneta","Zara","Zarah","Zaria","Zarla","Zea","Zelda","Zelma","Zena","Zenia","Zia","Zilvia","Zita","Zitella","Zoe","Zola","Zonda","Zondra","Zonnya","Zora","Zorah","Zorana","Zorina","Zorine","Zsa Zsa","Zsazsa","Zulema","Zuzana"],fa=.125,ie=(R=.5)=>Math.random()<R,fe=()=>2*(Math.random()-.5),re=(R,B)=>Math.floor(Math.random()*(B-R)+R),xe=R=>R[re(0,R.length)],ha=()=>xe(da).toLowerCase(),ya=()=>`${xe(ca)} ${xe(ua)}`,ve=R=>Math.max(0,R),ma=[ve,ve,ve];class ga{constructor(B,w){V(this,"weights");V(this,"bias");this.weights=new Array(B);for(let L=0;L<B;L++)this.weights[L]=fe();this.bias=w?fe():0}}class va{constructor(B,w,L,h){V(this,"nodes");V(this,"activation");this.nodes=new Array(B);for(let e=0;e<B;e++)this.nodes[e]=new ga(w,L);this.activation=h}feed_forward(B){const w=new Array(this.nodes.length);for(let L=0;L<this.nodes.length;L++){const h=this.nodes[L];let e=h.bias;for(let o=0;o<h.weights.length;o++)e+=B[o]*h.weights[o];w[L]=this.activation(e)}return w}}class Fe{constructor(B,w){V(this,"layers");this.layers=new Array(B.length);for(let L=0;L<B.length;L++)this.layers[L]=new va(B[L],B[L-1]??0,L>0,w[L])}evaluate(B){for(let w=1;w<this.layers.length;w++)B=this.layers[w].feed_forward(B);return B}crossover(B){const w=new ue;if(ie())for(let L=0;L<this.layers.length;L++){let h=this.layers;ie()&&(h=B.layers),w.activations.push(h[L].activation)}else{const L=re(0,this.layers.length);w.activations=[...this.layers.slice(0,L).map(h=>h.activation),...B.layers.slice(L).map(h=>h.activation)]}if(ie())for(let L=0;L<this.layers.length;L++){w.layer_counts.push(this.layers[L].nodes.length);for(let h=0;h<this.layers[L].nodes.length;h++){for(let o=0;o<this.layers[L].nodes[h].weights.length;o++){let l=this.layers;ie()&&(l=B.layers),w.raw.push(l[L].nodes[h].weights[o])}let e=this.layers;ie()&&(e=B.layers),w.raw.push(e[L].nodes[h].bias)}}else{const L=new ue(this),h=new ue(B),e=re(0,L.raw.length);w.layer_counts=this.layers.map(o=>o.nodes.length),w.raw=[...L.raw.slice(0,e),...h.raw.slice(e)]}return w.decode()}mutate(){const B=new ue(this);for(let w=0;w<B.raw.length;w++)if(ie(fa))switch(re(0,2)){case 0:B.raw[w]=fe();break;case 1:B.raw[w]+=fe();break;case 2:B.raw[w]=0;break;case 3:B.raw[w]*=-1;break}return B.decode()}}class ue{constructor(B){V(this,"layer_counts");V(this,"activations");V(this,"raw");if(!B){this.layer_counts=[],this.activations=[],this.raw=[];return}this.raw=[],this.layer_counts=B.layers.map(w=>w.nodes.length),this.activations=B.layers.map(w=>w.activation);for(let w=0;w<B.layers.length;w++){const L=B.layers[w];for(let h=0;h<L.nodes.length;h++){const e=L.nodes[h];this.raw.push(...e.weights,e.bias)}}}decode(){const B=new Fe(this.layer_counts,this.activations);let w=0;for(let L=0;L<B.layers.length;L++){const h=B.layers[L];for(let e=0;e<h.nodes.length;e++){const o=h.nodes[e];for(let l=0;l<o.weights.length;l++)o.weights[l]=this.raw[w++];o.bias=this.raw[w++]}}return B}}class pa{constructor(B,w){V(this,"name");V(this,"fitness");V(this,"network");this.name=ha(),this.fitness=0,this.network=new Fe(B,w)}}class Te{constructor(B,w,L){V(this,"name");V(this,"fittest_organism");V(this,"population");this.population=[];for(let h=0;h<B;h++)this.population[h]=new pa(w,L);this.name=ya(),this.fittest_organism=this.population[0]}}class ba{constructor(B,w,L,h){V(this,"generation");V(this,"species");V(this,"ancestors");V(this,"species_size");V(this,"layer_counts");V(this,"activations");this.generation=0,this.species=[],this.ancestors=[],this.species_size=w,this.layer_counts=L,this.activations=h??ma;for(let e=0;e<B;e++)this.species[e]=new Te(w,L,this.activations)}async compete(B,w,L=!0){for(let h=0;h<this.species.length;h++){const e=this.species[h];w&&w(e);const o=[];for(let l=0;l<e.population.length;l++){const t=B(e.population[l]);L?o[l]=t:e.population[l].fitness=await t}if(L){const l=await Promise.all(o);for(let t=0;t<l.length;t++)e.population[t].fitness=l[t]}e.population.sort((l,t)=>t.fitness-l.fitness),e.fittest_organism=e.population[0]}this.species.sort((h,e)=>e.fittest_organism.fitness-h.fittest_organism.fitness)}breed(){const B=[];for(let w=0;w<this.species.length;w++){const L=this.species[Math.floor(w/2)];B[w]=new Te(this.species_size,this.layer_counts,this.activations);const h=Math.floor(L.population.length/4);for(let e=0;e<L.population.length;e++){const o=L.population[re(0,h)].network;let l;do l=L.population[re(0,h)].network;while(o===l);B[w].population[e].network=o.crossover(l).mutate()}}this.ancestors[this.generation++]=this.species,this.species=B}}export{Aa as M,ba as N,Sa as S};
